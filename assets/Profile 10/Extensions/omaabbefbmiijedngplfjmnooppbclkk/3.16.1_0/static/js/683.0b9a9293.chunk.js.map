{"version":3,"file":"static/js/683.0b9a9293.chunk.js","mappings":"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","sources":["../../../packages/uikit/dist/components/swap/tokens-list/SwapSearchInput.js","../../../packages/uikit/dist/components/swap/tokens-list/ConfirmImportNotification.js","../../../packages/uikit/dist/components/swap/tokens-list/SwapTokensList.js","../../../packages/uikit/dist/components/swap/tokens-list/SwapTokensListNotification.js","../../../packages/uikit/dist/components/swap/SwapTokenSelect.js","../../../packages/uikit/dist/components/swap/SwapAmountInput.js","../../../packages/uikit/dist/components/swap/SwapAmountFiat.js","../../../packages/uikit/dist/components/swap/SwapAmountBalance.js","../../../packages/uikit/dist/components/swap/SwapFromField.js","../../../packages/uikit/dist/state/swap/useCalculatedSwap.js","../../../packages/uikit/dist/state/swap/useSwapOptions.js","../../../packages/uikit/dist/components/swap/SwapTransactionInfo.js","../../../packages/uikit/dist/components/swap/SwapRate.js","../../../packages/uikit/dist/components/swap/SwapToField.js","../../../packages/uikit/dist/components/swap/SwapButton.js","../../../packages/uikit/dist/state/swap/useEncodeSwap.js","../../../packages/core/dist/utils/types.js","../../../packages/uikit/dist/components/swap/SwapProviders.js","../../../packages/uikit/dist/components/swap/SwapMainForm.js","../../../packages/uikit/node_modules/react-error-boundary/dist/react-error-boundary.esm.js","../../../packages/uikit/dist/components/shared/RadioFlatInput.js","../../../packages/uikit/dist/components/swap/SwapSettingsNotification.js","../../../packages/uikit/dist/components/swap/icon-buttons/SwapSettingsButton.js","../../../packages/uikit/dist/components/swap/icon-buttons/SwapRefreshButton.js","../../../packages/uikit/dist/pages/swap/SwapMobileNotification.js","../../../packages/uikit/dist/components/Error.js","../../../packages/uikit/dist/state/swap/useSwapAssets.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from 'react';\nimport { useSwapTokensFilter } from '../../../state/swap/useSwapAssets';\nimport { useTranslation } from '../../../hooks/translation';\nimport { Input } from '../../fields/Input';\nexport const SwapSearchInput = forwardRef(({ className, isDisabled }, ref) => {\n    const { t } = useTranslation();\n    const [value, setValue] = useSwapTokensFilter();\n    return (_jsx(Input, { value: value, onChange: e => setValue(e), ref: ref, disabled: isDisabled, label: t('swap_search'), clearButton: true, className: className, size: \"small\" }));\n});\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { Notification } from '../../Notification';\nimport { createGlobalStyle, styled } from 'styled-components';\nimport { Body2, Label2 } from '../../Text';\nimport { Button } from '../../fields/Button';\nimport { useTranslation } from '../../../hooks/translation';\nconst ConfirmImportNotificationContent = styled.div `\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n`;\nconst DescriptionBlock = styled(Body2) `\n    display: block;\n    margin-top: 4px;\n    color: ${p => p.theme.textSecondary};\n`;\nconst ButtonsBlock = styled.div `\n    width: 100%;\n    display: flex;\n    gap: 8px;\n    margin-top: 24px;\n\n    > * {\n        flex: 1;\n    }\n`;\nconst WrapperStyles = createGlobalStyle `\n      .confirm-import-swap-token-notification {\n        ${p => p.theme.displayType === 'full-width' && 'max-width: 400px;'}\n      }\n    `;\nexport const ConfirmImportNotification = ({ isOpen, onClose, tokenSymbol }) => {\n    const { t } = useTranslation();\n    return (_jsxs(_Fragment, { children: [_jsx(WrapperStyles, {}), _jsx(Notification, { isOpen: isOpen, handleClose: onClose, wrapperClassName: \"confirm-import-swap-token-notification\", children: () => (_jsxs(ConfirmImportNotificationContent, { children: [_jsx(Label2, { children: t('swap_import_token_title').replace('%token%', tokenSymbol) }), _jsx(DescriptionBlock, { children: t('swap_unknown_token_description') }), _jsxs(ButtonsBlock, { children: [_jsx(Button, { primary: true, onClick: () => onClose(false), children: t('cancel') }), _jsx(Button, { secondary: true, onClick: () => onClose(true), children: t('swap_import') })] })] })) })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { Fragment, useEffect, useRef, useState } from 'react';\nimport { Body2, Body3, Label2 } from '../../Text';\nimport { useAddUserCustomSwapAsset, useSwapCustomTokenSearch } from '../../../state/swap/useSwapAssets';\nimport { formatFiatCurrency } from '../../../hooks/balance';\nimport { useAppContext } from '../../../hooks/appContext';\nimport { isTon } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { LinkOutIcon, SpinnerIcon } from '../../Icon';\nimport { ConfirmImportNotification } from './ConfirmImportNotification';\nimport { useAppSdk } from '../../../hooks/appSdk';\nimport { throttle } from '@tonkeeper/core/dist/utils/common';\nimport { useTranslation } from '../../../hooks/translation';\nconst SwapTokensListWrapper = styled.div `\n    overflow-y: auto;\n    width: calc(100% + 2rem);\n    margin: 0 -1rem;\n    height: calc(100% - 54px);\n\n    &::-webkit-scrollbar {\n        display: none;\n    }\n\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n`;\nconst Divider = styled.div `\n    width: 100%;\n    height: 1px;\n    background-color: ${p => p.theme.separatorCommon};\n`;\nexport const SwapTokensList = ({ walletSwapAssets, onSelect }) => {\n    const [displayingAssets, setDisplayingAssets] = useState(walletSwapAssets.slice(0, 25));\n    const ref = useRef(null);\n    useEffect(() => {\n        setDisplayingAssets(walletSwapAssets.slice(0, 25));\n    }, [walletSwapAssets]);\n    const onScroll = () => {\n        if (!ref?.current) {\n            return;\n        }\n        const scrollHeightLeft = ref.current.scrollHeight - ref.current.clientHeight - ref.current.scrollTop;\n        if (scrollHeightLeft < 300) {\n            setDisplayingAssets(d => walletSwapAssets.slice(0, d.length + 25));\n        }\n    };\n    return (_jsx(SwapTokensListWrapper, { ref: ref, onScroll: throttle(onScroll, 100), children: walletSwapAssets.length ? (displayingAssets.map((swapAsset, index) => (_jsxs(Fragment, { children: [_jsx(TokenListItem, { onClick: () => onSelect(swapAsset.assetAmount.asset), swapAsset: swapAsset }), index !== walletSwapAssets.length - 1 && _jsx(Divider, {})] }, swapAsset.assetAmount.asset.id)))) : (_jsx(TokenNotFound, { onSelect: onSelect })) }));\n};\nconst TokensNotFoundContainer = styled.div `\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ${p => p.theme.textSecondary};\n`;\nconst TokenNotFound = ({ onSelect }) => {\n    const { t } = useTranslation();\n    const { data: swapAsset, isFetching } = useSwapCustomTokenSearch();\n    const [isOpened, setIsOpened] = useState(false);\n    const { mutate } = useAddUserCustomSwapAsset();\n    if (isFetching) {\n        return (_jsx(TokensNotFoundContainer, { children: _jsx(SpinnerIcon, {}) }));\n    }\n    if (!swapAsset) {\n        return (_jsx(TokensNotFoundContainer, { children: _jsx(Body2, { children: t('swap_tokens_not_found') }) }));\n    }\n    const onClose = (confirmed) => {\n        setIsOpened(false);\n        if (confirmed) {\n            mutate(swapAsset.assetAmount.asset);\n            onSelect(swapAsset.assetAmount.asset);\n        }\n    };\n    return (_jsxs(_Fragment, { children: [_jsx(ConfirmImportNotification, { isOpen: isOpened, onClose: onClose, tokenSymbol: swapAsset.assetAmount.asset.symbol }), _jsx(TokenListItem, { onClick: () => setIsOpened(true), swapAsset: swapAsset })] }));\n};\nconst TokenListItemWrapper = styled.button `\n    border: none;\n    width: 100%;\n    padding: 8px 1rem;\n    display: flex;\n    gap: 12px;\n    background-color: transparent;\n\n    transition: background-color 0.15s ease-in-out;\n    cursor: pointer;\n\n    &:hover,\n    &:focus {\n        background-color: ${p => p.theme.backgroundContent};\n    }\n`;\nconst TokenImage = styled.img `\n    height: 40px;\n    width: 40px;\n    border-radius: 100%;\n`;\nconst TokenInfo = styled.div `\n    display: flex;\n    flex-direction: column;\n    width: calc(100% - 52px);\n`;\nconst TokenInfoLine = styled.div `\n    display: flex;\n    align-items: center;\n    gap: 4px;\n\n    > *:first-child {\n        display: block;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    > *:nth-child(3) {\n        margin-left: auto;\n    }\n`;\nconst LinkOutIconWrapper = styled.div `\n    cursor: pointer;\n    &:hover {\n        > svg {\n            color: ${p => p.theme.iconSecondary};\n        }\n    }\n`;\nconst TokenInfoSecondLine = styled(TokenInfoLine) `\n    color: ${p => p.theme.textSecondary};\n\n    > *:nth-child(2) {\n        margin-left: auto;\n    }\n`;\nconst BalanceLabel = styled(Label2) `\n    color: ${p => (p.isZero ? p.theme.textTertiary : p.theme.textPrimary)};\n`;\nconst TokenListItem = ({ swapAsset, onClick }) => {\n    const isZeroBalance = swapAsset.assetAmount.relativeAmount.isZero();\n    const { fiat } = useAppContext();\n    const sdk = useAppSdk();\n    const onOpenExplorer = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        let explorerUrl;\n        if (isTon(swapAsset.assetAmount.asset.address)) {\n            explorerUrl = 'https://tonviewer.com/price';\n        }\n        else {\n            explorerUrl = `https://tonviewer.com/${swapAsset.assetAmount.asset.address.toString({\n                urlSafe: true\n            })}`;\n        }\n        sdk.openPage(explorerUrl);\n    };\n    return (_jsxs(TokenListItemWrapper, { onClick: onClick, children: [_jsx(TokenImage, { src: swapAsset.assetAmount.asset.image }), _jsxs(TokenInfo, { children: [_jsxs(TokenInfoLine, { children: [_jsx(Label2, { children: swapAsset.assetAmount.asset.symbol }), _jsx(LinkOutIconWrapper, { onClick: onOpenExplorer, children: _jsx(LinkOutIcon, {}) }), _jsx(BalanceLabel, { isZero: isZeroBalance, children: swapAsset.assetAmount.stringRelativeAmount })] }), _jsxs(TokenInfoSecondLine, { children: [_jsx(Body3, { children: swapAsset.assetAmount.asset.name }), !isZeroBalance && (_jsx(Body3, { children: formatFiatCurrency(fiat, swapAsset.fiatAmount) }))] })] })] }));\n};\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Notification } from '../../Notification';\nimport { useCallback, useEffect, useRef } from 'react';\nimport { atom, useAtom } from '../../../libs/atom';\nimport { createGlobalStyle, css, styled } from 'styled-components';\nimport { SwapSearchInput } from './SwapSearchInput';\nimport { SwapTokensList } from './SwapTokensList';\nimport { useSwapTokensFilter, useWalletFilteredSwapAssets } from '../../../state/swap/useSwapAssets';\nimport { SpinnerIcon } from '../../Icon';\nimport { useTranslation } from '../../../hooks/translation';\nconst swapTokensListOpened$ = atom(undefined);\nexport const useOpenSwapTokensList = (onClose) => {\n    const [_, setIsOpen] = useAtom(swapTokensListOpened$);\n    return useCallback(() => setIsOpen(() => ({\n        onClose\n    })), [setIsOpen, onClose]);\n};\nconst WrapperStyles = createGlobalStyle `\n  .tokens-list-notification-wrapper .dialog-content {\n    padding-bottom: 0;\n  }\n`;\nexport const SwapTokensListNotification = () => {\n    const { t } = useTranslation();\n    const [onSelect, setIsOpen] = useAtom(swapTokensListOpened$);\n    const onClose = (asset) => {\n        onSelect?.onClose(asset);\n        setIsOpen(undefined);\n    };\n    return (_jsxs(_Fragment, { children: [_jsx(WrapperStyles, {}), _jsx(Notification, { isOpen: !!onSelect, handleClose: () => onClose(undefined), title: t('swap_tokens'), footer: _jsx(\"div\", {}), wrapperClassName: \"tokens-list-notification-wrapper\", children: () => _jsx(SwapTokensListContent, { onSelect: onClose }) })] }));\n};\nconst SwapSearchInputStyled = styled(SwapSearchInput) `\n    margin-bottom: 1rem;\n`;\nconst SwapTokensListContentWrapper = styled.div `\n    ${p => p.theme.displayType === 'full-width'\n    ? css `\n                  height: 580px;\n              `\n    : css `\n                  height: calc(var(--app-height) - 6rem);\n              `}\n`;\nconst Divider = styled.div `\n    width: calc(100% + 2rem);\n    margin: 0 -1rem;\n    height: 1px;\n    background-color: ${p => p.theme.separatorCommon};\n`;\nconst SpinnerContainer = styled.div `\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 300px;\n`;\nconst SwapTokensListContent = ({ onSelect }) => {\n    const walletSwapAssets = useWalletFilteredSwapAssets();\n    const inputRef = useRef();\n    const [_, setFilter] = useSwapTokensFilter();\n    useEffect(() => {\n        setTimeout(() => inputRef?.current?.focus(), 100);\n        return () => setFilter('');\n    }, []);\n    return (_jsxs(SwapTokensListContentWrapper, { children: [_jsx(SwapSearchInputStyled, { ref: inputRef, isDisabled: !walletSwapAssets }), _jsx(Divider, {}), walletSwapAssets ? (_jsx(SwapTokensList, { onSelect: onSelect, walletSwapAssets: walletSwapAssets })) : (_jsx(SpinnerContainer, { children: _jsx(SpinnerIcon, {}) }))] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useCallback } from 'react';\nimport { styled } from 'styled-components';\nimport { Label2 } from '../Text';\nimport { SwitchIcon } from '../Icon';\nimport { useOpenSwapTokensList } from './tokens-list/SwapTokensListNotification';\nconst TokenSymbol = styled(Label2) `\n    display: block;\n    max-width: 80px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    flex-shrink: 0;\n    color: ${p => p.theme.textPrimary};\n\n    transition: color 0.15s ease-in-out;\n`;\nconst SelectContainer = styled.button `\n    border: none;\n    display: flex;\n    align-items: center;\n    background: none;\n    padding: 0;\n    cursor: pointer;\n    gap: 6px;\n    height: 36px;\n    width: fit-content;\n\n    &:hover {\n        > ${TokenSymbol} {\n            color: ${p => p.theme.textSecondary};\n        }\n    }\n`;\nconst TokenImage = styled.img `\n    height: 24px;\n    width: 24px;\n    border-radius: 100%;\n    flex-shrink: 0;\n`;\nexport const SwapTokenSelect = ({ token, onTokenChange, className }) => {\n    const onClose = useCallback((t) => t && onTokenChange(t), [onTokenChange]);\n    const openList = useOpenSwapTokensList(onClose);\n    return (_jsxs(SelectContainer, { className: className, onClick: openList, children: [_jsx(TokenImage, { src: token.image }), _jsx(TokenSymbol, { children: token.symbol }), _jsx(SwitchIcon, {})] }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { styled } from 'styled-components';\nimport { Num2Class } from '../Text';\nimport BigNumber from 'bignumber.js';\nimport { getDecimalSeparator } from '@tonkeeper/core/dist/utils/formatting';\nimport { replaceTypedDecimalSeparator, seeIfValueValid } from '../transfer/amountView/AmountViewUI';\nimport { formatNumberValue, formatSendValue, isNumeric, removeGroupSeparator } from '@tonkeeper/core/dist/utils/send';\nconst AmountInputWrapper = styled.input `\n    border: none;\n    background: none;\n    text-align: right;\n    outline: none;\n    width: 30px;\n    color: ${p => (p.isErrored ? p.theme.accentRed : p.theme.textPrimary)};\n    font-family: inherit;\n\n    ${Num2Class}\n\n    &::placeholder {\n        color: ${p => p.theme.textTertiary};\n    }\n`;\nexport const SwapAmountInput = ({ value, onChange, decimals, className, isErrored }) => {\n    const [input, setInput] = useState('');\n    const onInput = (newValue) => {\n        let inputValue = replaceTypedDecimalSeparator(newValue);\n        if (!inputValue) {\n            setInput('');\n            onChange(undefined);\n            return;\n        }\n        if (!seeIfValueValid(inputValue, decimals)) {\n            return;\n        }\n        if (isNumeric(inputValue)) {\n            if (!inputValue.endsWith(getDecimalSeparator())) {\n                const bnInput = new BigNumber(removeGroupSeparator(inputValue).replace(getDecimalSeparator(), '.'));\n                const prevBnInput = new BigNumber(removeGroupSeparator(input).replace(getDecimalSeparator(), '.'));\n                if (!bnInput.eq(prevBnInput)) {\n                    onChange(bnInput);\n                    inputValue = formatSendValue(inputValue);\n                }\n            }\n            setInput(inputValue);\n        }\n    };\n    useEffect(() => {\n        if (!value) {\n            setInput('');\n        }\n        else {\n            if (!input.endsWith(getDecimalSeparator())) {\n                try {\n                    const bnInput = new BigNumber(removeGroupSeparator(input).replace(getDecimalSeparator(), '.'));\n                    if (!bnInput.eq(value)) {\n                        setInput(formatNumberValue(value));\n                    }\n                }\n                catch (_) {\n                    // ignore\n                }\n            }\n        }\n    }, [value]);\n    const decimalSeparator = getDecimalSeparator();\n    return (_jsx(AmountInputWrapper, { value: input, onChange: e => onInput(e.target.value), placeholder: `0${decimalSeparator}00`, className: className, isErrored: isErrored, inputMode: \"decimal\" }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport BigNumber from 'bignumber.js';\nimport { useRate } from '../../state/rates';\nimport { tonAssetAddressToString } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { Skeleton } from '../shared/Skeleton';\nimport { Body3 } from '../Text';\nimport { styled } from 'styled-components';\nimport { formatFiatCurrency } from '../../hooks/balance';\nimport { useAppContext } from '../../hooks/appContext';\nconst Body3Styled = styled(Body3) `\n    color: ${p => p.theme.textSecondary};\n    cursor: default;\n`;\nexport const SwapAmountFiat = ({ amount, asset }) => {\n    const { fiat } = useAppContext();\n    const { data: rate, isLoading } = useRate(tonAssetAddressToString(asset.address));\n    if (!amount) {\n        return _jsx(\"div\", {});\n    }\n    if (!isLoading && !rate?.prices) {\n        return _jsx(\"div\", {});\n    }\n    if (isLoading) {\n        return _jsx(Skeleton, { width: \"80px\", height: \"12px\", margin: \"2px 0\" });\n    }\n    const inFiat = formatFiatCurrency(fiat, new BigNumber(rate.prices).multipliedBy(amount));\n    return _jsxs(Body3Styled, { children: [\"\\u2248\\u00A0\", inFiat] });\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Skeleton } from '../shared/Skeleton';\nimport { Body3, Label3 } from '../Text';\nimport { styled } from 'styled-components';\nimport { useFormatCoinValue } from '../../hooks/balance';\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { useMaxSwapValue, useSwapFromAmount, useSwapFromAsset, useSwapToAsset } from '../../state/swap/useSwapForm';\nimport { useAssetWeiBalance } from '../../state/home';\nimport { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nimport { useTranslation } from '../../hooks/translation';\nconst Body3Styled = styled(Body3) `\n    color: ${p => p.theme.textSecondary};\n`;\nconst BalanceContainer = styled.div `\n    display: flex;\n    height: 16px;\n    align-items: center;\n`;\nconst MaxButton = styled.button `\n    border: none;\n    background: none;\n    color: ${p => p.theme.accentBlue};\n    height: fit-content;\n    margin-left: 0.5rem;\n\n    > * {\n        display: block;\n        height: fit-content;\n    }\n\n    &:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n    }\n`;\nexport const SwapFromAmountBalance = () => {\n    const [_, setSwapAmount] = useSwapFromAmount();\n    const [asset] = useSwapFromAsset();\n    const { data: balance } = useMaxSwapValue();\n    return (_jsx(SwapAmountContent, { balance: balance, decimals: asset.decimals, onMax: () => setSwapAmount(shiftedDecimals(balance, asset.decimals)) }));\n};\nexport const SwapToAmountBalance = () => {\n    const [asset] = useSwapToAsset();\n    const balance = useAssetWeiBalance({ address: asset.address, blockchain: BLOCKCHAIN_NAME.TON });\n    return _jsx(SwapAmountContent, { balance: balance, decimals: asset.decimals });\n};\nconst SwapAmountContent = ({ balance, decimals = 0, onMax }) => {\n    const { t } = useTranslation();\n    const format = useFormatCoinValue();\n    return (_jsxs(BalanceContainer, { children: [_jsxs(Body3Styled, { children: [t('swap_balance'), \":\\u00A0\"] }), balance ? (_jsx(Body3Styled, { children: format(balance, decimals) })) : (_jsx(Skeleton, { width: \"80px\", height: \"12px\", margin: \"2px 0\" })), onMax && (_jsx(MaxButton, { disabled: !balance || balance.isZero(), onClick: onMax, children: _jsx(Label3, { children: t('swap_max') }) }))] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { Body3 } from '../Text';\nimport { SwapTokenSelect } from './SwapTokenSelect';\nimport { SwapAmountInput } from './SwapAmountInput';\nimport { useMaxSwapValue, useSwapFromAmount, useSwapFromAsset } from '../../state/swap/useSwapForm';\nimport { SwapAmountFiat } from './SwapAmountFiat';\nimport { SwapFromAmountBalance } from './SwapAmountBalance';\nimport { debounce } from '@tonkeeper/core/dist/utils/common';\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { useTranslation } from '../../hooks/translation';\nconst FiledContainerStyled = styled.div `\n    position: relative;\n    background: ${p => p.theme.backgroundContent};\n    border-radius: ${p => p.theme.displayType === 'full-width' ? p.theme.corner2xSmall : p.theme.cornerSmall};\n    padding: 6px 12px;\n`;\nconst FiledHeader = styled.div `\n    color: ${p => p.theme.textSecondary};\n    gap: 8px;\n    display: flex;\n\n    padding: 4px 0;\n\n    > *:first-child {\n        margin-right: auto;\n    }\n\n    > * {\n        cursor: default;\n    }\n`;\nconst FieldBody = styled.div `\n    display: flex;\n    gap: 8px;\n    padding: 6px 0;\n`;\nconst FieldFooter = styled.div `\n    display: flex;\n    gap: 8px;\n    padding: 4px 0;\n    align-items: center;\n    height: 16px;\n\n    > * {\n        margin-left: auto;\n    }\n`;\nconst SwapTokenSelectStyled = styled(SwapTokenSelect) `\n    flex-shrink: 0;\n`;\nconst SwapAmountInputStyled = styled(SwapAmountInput) `\n    flex: 1;\n`;\nexport const SwapFromField = ({ children }) => {\n    const { t } = useTranslation();\n    const [swapAmount, setSwapAmount] = useSwapFromAmount();\n    const [fromAsset, setFromAsset] = useSwapFromAsset();\n    const { data: max } = useMaxSwapValue();\n    return (_jsxs(FiledContainerStyled, { children: [_jsxs(FiledHeader, { children: [_jsx(Body3, { children: t('swap_send') }), _jsx(SwapFromAmountBalance, {})] }), _jsxs(FieldBody, { children: [_jsx(SwapTokenSelectStyled, { token: fromAsset, onTokenChange: setFromAsset }), _jsx(SwapAmountInputStyled, { value: swapAmount, onChange: debounce(setSwapAmount), decimals: fromAsset.decimals, isErrored: !!max &&\n                            !!swapAmount &&\n                            swapAmount.gt(shiftedDecimals(max, fromAsset.decimals)) })] }), _jsx(FieldFooter, { children: _jsx(SwapAmountFiat, { amount: swapAmount, asset: fromAsset }) }), children] }));\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { isTon } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nimport { JettonsApi } from '@tonkeeper/core/dist/tonApiV2';\nimport { TON_ASSET } from '@tonkeeper/core/dist/entries/crypto/asset/constants';\nimport { packAssetId } from '@tonkeeper/core/dist/entries/crypto/asset/basic-asset';\nimport { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nimport { Address } from '@ton/core';\nimport { eqAddresses } from '@tonkeeper/core/dist/utils/address';\nimport { useMemo } from 'react';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useSwapFromAmount, useSwapFromAsset, useSelectedSwap, useSwapToAsset, useIsSwapFormNotCompleted } from './useSwapForm';\nimport { QueryKey } from '../../libs/queryKey';\nimport { unShiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { atom, useAtom } from '../../libs/atom';\nimport { useSwapsConfig } from './useSwapsConfig';\nconst swapAssetsCache = new Map();\nexport const swapProviders = ['stonfi', 'dedust'];\nconst fetchedSwaps$ = atom([]);\nlet calculationId = 0;\nexport function useCalculatedSwap() {\n    const { api } = useAppContext();\n    const [fetchedSwaps, setFetchedSwaps] = useAtom(fetchedSwaps$);\n    const [fromAsset] = useSwapFromAsset();\n    const [toAsset] = useSwapToAsset();\n    const [fromAmountRelative] = useSwapFromAmount();\n    const [_, setSelectedSwap] = useSelectedSwap();\n    const isNotCompleted = useIsSwapFormNotCompleted();\n    const { swapService } = useSwapsConfig();\n    const query = useQuery({\n        queryKey: [\n            QueryKey.swapCalculate,\n            fromAsset.id,\n            toAsset.id,\n            fromAmountRelative?.shiftedBy(fromAsset.decimals).toFixed(0)\n        ],\n        queryFn: async ({ signal }) => {\n            setFetchedSwaps([]);\n            setSelectedSwap(undefined);\n            calculationId = calculationId + 1;\n            const currentCalulationId = calculationId;\n            if (isNotCompleted) {\n                return [];\n            }\n            addAssetToCache(fromAsset);\n            addAssetToCache(toAsset);\n            const fromAmountWei = unShiftedDecimals(fromAmountRelative, fromAsset.decimals);\n            let totalFetchedSwaps = [];\n            return new Promise((res, rej) => {\n                let fetchedProvidersNumber = 0;\n                swapProviders.forEach(async (provider) => {\n                    try {\n                        const swapPromise = swapService.calculateSwap(toTradeAssetId(fromAsset.address), toTradeAssetId(toAsset.address), fromAmountWei.toFixed(0), provider);\n                        if (signal) {\n                            signal.onabort = () => swapPromise.cancel();\n                        }\n                        const providerSwap = await swapPromise;\n                        const swap = await providerSwapToSwap(providerSwap, api, fromAsset, toAsset);\n                        if (currentCalulationId !== calculationId) {\n                            rej(new Error('Calculation cancelled'));\n                            return;\n                        }\n                        const providerBestSwap = sortSwaps(swap)[0];\n                        totalFetchedSwaps = sortSwaps(totalFetchedSwaps.concat(providerBestSwap));\n                        if (totalFetchedSwaps[0].trade) {\n                            setSelectedSwap(totalFetchedSwaps[0]);\n                        }\n                        setFetchedSwaps(s => sortSwaps([...s, providerBestSwap]));\n                        fetchedProvidersNumber = fetchedProvidersNumber + 1;\n                        if (fetchedProvidersNumber === swapProviders.length) {\n                            res(totalFetchedSwaps);\n                        }\n                    }\n                    catch (e) {\n                        if (currentCalulationId !== calculationId) {\n                            rej(new Error('Calculation cancelled'));\n                            return;\n                        }\n                        console.error(e);\n                        const swap = {\n                            provider,\n                            trade: null\n                        };\n                        totalFetchedSwaps = sortSwaps(totalFetchedSwaps.concat(swap));\n                        if (totalFetchedSwaps[0].trade) {\n                            setSelectedSwap(totalFetchedSwaps[0]);\n                        }\n                        setFetchedSwaps(s => sortSwaps([...s, swap]));\n                        fetchedProvidersNumber = fetchedProvidersNumber + 1;\n                        if (fetchedProvidersNumber === swapProviders.length) {\n                            res(totalFetchedSwaps);\n                        }\n                    }\n                });\n            });\n        },\n        cacheTime: 0\n    });\n    return useMemo(() => ({\n        ...query,\n        fetchedSwaps\n    }), [query, fetchedSwaps]);\n}\nconst toTradeAssetId = (address) => {\n    return isTon(address) ? 'ton' : address.toRawString();\n};\nconst fromTradeAssetId = (address) => {\n    return address === 'ton' ? 'TON' : Address.parse(address);\n};\nconst sortSwaps = (swaps) => {\n    return swaps.slice().sort((a, b) => {\n        if (!a.trade) {\n            return 1;\n        }\n        if (!b.trade) {\n            return -1;\n        }\n        return b.trade.to.weiAmount.comparedTo(a.trade.to.weiAmount);\n    });\n};\nconst providerSwapToSwap = async (providerSwap, api, fromAsset, toAsset) => {\n    const assetsInfo = await getPathAssets(providerSwap.trades, api);\n    if (providerSwap.provider === 'dedust') {\n        if (providerSwap.trades.length === 0) {\n            return [\n                {\n                    provider: 'dedust',\n                    trade: null\n                }\n            ];\n        }\n        return providerSwap.trades.map(t => ({\n            provider: 'dedust',\n            trade: {\n                from: new AssetAmount({\n                    asset: fromAsset,\n                    weiAmount: t.fromAmount\n                }),\n                to: new AssetAmount({\n                    asset: toAsset,\n                    weiAmount: t.toAmount\n                }),\n                path: t.path.map(address => assetsInfo.find(a => eqAddresses(a.address, fromTradeAssetId(address)))),\n                blockchainFee: new AssetAmount({\n                    asset: TON_ASSET,\n                    weiAmount: t.blockchainFee\n                }),\n                rawTrade: t.dedustRawTrade\n            }\n        }));\n    }\n    if (providerSwap.provider === 'stonfi') {\n        const trade = providerSwap.trades[0];\n        if (!trade) {\n            return [{ provider: 'stonfi', trade: null }];\n        }\n        return [\n            {\n                provider: 'stonfi',\n                trade: {\n                    from: new AssetAmount({\n                        asset: fromAsset,\n                        weiAmount: trade.fromAmount\n                    }),\n                    to: new AssetAmount({\n                        asset: toAsset,\n                        weiAmount: trade.toAmount\n                    }),\n                    blockchainFee: new AssetAmount({\n                        asset: TON_ASSET,\n                        weiAmount: trade.blockchainFee\n                    }),\n                    rawTrade: trade.stonfiRawTrade,\n                    path: trade.path.map(address => assetsInfo.find(a => eqAddresses(a.address, fromTradeAssetId(address))))\n                }\n            }\n        ];\n    }\n    return [];\n};\nconst getPathAssets = async (trades, api) => {\n    const addresses = trades.flatMap(trade => trade.path.map(fromTradeAssetId));\n    return Promise.all(addresses.map(address => getAsset(api, address)));\n};\nconst addAssetToCache = (asset) => {\n    if (!swapAssetsCache.has(asset.address)) {\n        swapAssetsCache.set(asset.address, Promise.resolve(asset));\n    }\n};\nconst getAsset = async (api, address) => {\n    if (isTon(address)) {\n        return TON_ASSET;\n    }\n    if (swapAssetsCache.has(address)) {\n        return swapAssetsCache.get(address);\n    }\n    const tonapi = new JettonsApi(api.tonApiV2);\n    const p = tonapi.getJettonInfo({ accountId: address.toRawString() }).then(response => ({\n        symbol: response.metadata.symbol,\n        decimals: Number(response.metadata.decimals),\n        name: response.metadata.name,\n        blockchain: BLOCKCHAIN_NAME.TON,\n        address,\n        id: packAssetId(BLOCKCHAIN_NAME.TON, address),\n        image: response.metadata.image\n    }));\n    swapAssetsCache.set(address, p);\n    return p;\n};\n","import { useAppSdk } from '../../hooks/appSdk';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { AppKey } from '@tonkeeper/core/dist/Keys';\nconst defaultSwapOptions = {\n    slippagePercent: 1,\n    maxPriceImpact: 0.3\n};\nexport const useSwapOptions = () => {\n    const sdk = useAppSdk();\n    return useQuery([AppKey.SWAP_OPTIONS], async () => {\n        const options = await sdk.storage.get(AppKey.SWAP_OPTIONS);\n        return {\n            slippagePercent: options?.slippagePercent || defaultSwapOptions.slippagePercent,\n            maxPriceImpact: options?.maxPriceImpact || defaultSwapOptions.maxPriceImpact\n        };\n    });\n};\nexport const useMutateSwapOptions = () => {\n    const sdk = useAppSdk();\n    const client = useQueryClient();\n    return useMutation(async (newOptions) => {\n        const options = await sdk.storage.get(AppKey.SWAP_OPTIONS);\n        await sdk.storage.set(AppKey.SWAP_OPTIONS, { ...options, ...newOptions });\n        await client.invalidateQueries([AppKey.SWAP_OPTIONS]);\n    });\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { css, styled } from 'styled-components';\nimport { Body2Class, Body3 } from '../Text';\nimport { IconButton } from '../fields/IconButton';\nimport { useRef, useState } from 'react';\nimport { ChevronDownIcon, InfoCircleIcon } from '../Icon';\nimport { Skeleton } from '../shared/Skeleton';\nimport { priceImpactStatus, useIsSwapFormNotCompleted, useSelectedSwap, useSwapPriceImpact } from '../../state/swap/useSwapForm';\nimport { useCalculatedSwap } from '../../state/swap/useCalculatedSwap';\nimport { getDecimalSeparator } from '@tonkeeper/core/dist/utils/formatting';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nimport { useSwapOptions } from '../../state/swap/useSwapOptions';\nimport { useTranslation } from '../../hooks/translation';\nimport { BorderSmallResponsive } from '../shared/Styles';\nconst TxInfoContainer = styled.div ``;\nconst TxInfoHeader = styled.div `\n    cursor: pointer;\n    padding: 4px 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: ${p => p.theme.textSecondary};\n\n    svg {\n        color: ${p => p.theme.textSecondary};\n    }\n`;\nconst AccordionContent = styled.div `\n    transform: translateY(-100%);\n    visibility: hidden;\n    transition: transform 0.2s ease-in-out, visibility 0.2s ease-in-out;\n`;\nconst AccordionAnimation = styled.div `\n    display: grid;\n    grid-template-rows: ${p => (p.isOpened ? '1fr' : '0fr')};\n    overflow: ${p => (p.animationCompleted && p.isOpened ? 'visible' : 'hidden')};\n    transition: grid-template-rows 0.2s ease-in-out;\n\n    ${AccordionContent} {\n        ${p => p.isOpened &&\n    css `\n                transform: translateY(0);\n                visibility: visible;\n            `}\n    }\n`;\nconst AccordionBody = styled.div `\n    min-height: 0;\n`;\nconst AccordionButton = styled(IconButton) `\n    transform: ${p => (p.isOpened ? 'rotate(180deg)' : 'rotate(0deg)')};\n    transition: transform 0.2s ease-in-out;\n    border: none;\n`;\nconst InfoRow = styled.div `\n    position: relative;\n    display: flex;\n    padding: 4px 0;\n    gap: 6px;\n    align-items: center;\n\n    > * {\n        cursor: default;\n    }\n`;\nconst Tooltip = styled.div `\n    pointer-events: none;\n    transform: translate3d(0, -10px, 0);\n    z-index: 100;\n    left: 0;\n    right: 0;\n    transition: all 0.15s ease-in-out;\n    opacity: 0;\n    position: absolute;\n    background-color: ${p => p.theme.backgroundContentTint};\n    padding: 8px 12px;\n    ${BorderSmallResponsive};\n    ${Body2Class};\n\n    ${p => p.placement === 'top'\n    ? css `\n                  transform: translate3d(0, 10px, 0);\n                  bottom: 30px;\n              `\n    : css `\n                  transform: translate3d(0, -10px, 0);\n                  top: 30px;\n              `}\n`;\nconst TooltipHost = styled.div `\n    cursor: pointer;\n\n    &:hover + ${Tooltip} {\n        opacity: 1;\n        transform: translate3d(0, 0, 0);\n    }\n`;\nconst InfoRowLabel = styled(Body3) `\n    color: ${p => p.theme.textSecondary};\n`;\nconst InfoRowRight = styled(Body3) `\n    margin-left: auto;\n`;\nconst InfoSkeleton = () => {\n    return _jsx(Skeleton, { width: \"60px\", height: \"12px\", margin: \"2px 0\" });\n};\nconst PriceImpact = styled(Body3) `\n    color: ${p => p.status === 'low'\n    ? p.theme.accentGreen\n    : p.status === 'medium' || p.status === 'unknown'\n        ? p.theme.accentOrange\n        : p.theme.accentRed};\n`;\nexport const SwapTransactionInfo = () => {\n    const { t } = useTranslation();\n    const [isOpened, setIsOpened] = useState(false);\n    const [isAnimationCompleted, setIsAnimationCompleted] = useState(false);\n    const timeoutRef = useRef();\n    const { isFetching } = useCalculatedSwap();\n    const [swap] = useSelectedSwap();\n    const priceImpact = useSwapPriceImpact();\n    const { data: swapOptions } = useSwapOptions();\n    const isNotCompleted = useIsSwapFormNotCompleted();\n    const trade = swap?.trade;\n    if ((!isFetching && !trade) || isNotCompleted) {\n        return null;\n    }\n    const onToggleAccordion = () => {\n        clearTimeout(timeoutRef.current);\n        if (isOpened) {\n            setIsAnimationCompleted(false);\n            setIsOpened(false);\n        }\n        else {\n            setIsOpened(true);\n            timeoutRef.current = setTimeout(() => setIsAnimationCompleted(true), 400);\n        }\n    };\n    return (_jsxs(TxInfoContainer, { children: [_jsxs(TxInfoHeader, { onClick: onToggleAccordion, children: [_jsx(Body3, { children: t('swap_tx_info') }), _jsx(AccordionButton, { transparent: true, isOpened: isOpened, children: _jsx(ChevronDownIcon, {}) })] }), _jsx(AccordionAnimation, { isOpened: isOpened, animationCompleted: isAnimationCompleted, children: _jsx(AccordionBody, { children: _jsxs(AccordionContent, { children: [_jsxs(InfoRow, { children: [_jsx(InfoRowLabel, { children: t('swap_price_impact') }), _jsx(TooltipHost, { children: _jsx(InfoCircleIcon, {}) }), _jsx(Tooltip, { placement: \"top\", children: t('swap_price_impact_tooltip') }), _jsx(InfoRowRight, { children: priceImpact === undefined || !trade ? (_jsx(InfoSkeleton, {})) : (_jsx(PriceImpact, { status: priceImpactStatus(priceImpact), children: priceImpact ? (_jsxs(_Fragment, { children: [\"\\u2248\\u00A0\", `${priceImpact\n                                                        .multipliedBy(100)\n                                                        .decimalPlaces(2)\n                                                        .toString()\n                                                        .replace('.', getDecimalSeparator())\n                                                        .replace('-', '+')}%`] })) : (t('swap_unknown_price_impact')) })) })] }), _jsxs(InfoRow, { children: [_jsx(InfoRowLabel, { children: t('swap_minimum_received') }), _jsx(TooltipHost, { children: _jsx(InfoCircleIcon, {}) }), _jsx(Tooltip, { placement: \"top\", children: t('swap_minimum_received_tooltip') }), _jsx(InfoRowRight, { children: !trade || !swapOptions ? (_jsx(InfoSkeleton, {})) : (_jsxs(Body3, { children: [\"\\u2248\\u00A0\", new AssetAmount({\n                                                    weiAmount: trade.to.weiAmount\n                                                        .multipliedBy(100 - swapOptions.slippagePercent)\n                                                        .div(100),\n                                                    asset: trade.to.asset\n                                                }).stringAssetRelativeAmount] })) })] }), _jsxs(InfoRow, { children: [_jsx(InfoRowLabel, { children: t('swap_slippage') }), _jsx(TooltipHost, { children: _jsx(InfoCircleIcon, {}) }), _jsx(Tooltip, { placement: \"top\", children: t('swap_slippage_tooltip') }), _jsx(InfoRowRight, { children: !trade || !swapOptions ? (_jsx(InfoSkeleton, {})) : (_jsxs(Body3, { children: [swapOptions.slippagePercent, \"%\"] })) })] }), _jsxs(InfoRow, { children: [_jsx(InfoRowLabel, { children: t('swap_blockchain_fee') }), _jsx(TooltipHost, { children: _jsx(InfoCircleIcon, {}) }), _jsx(Tooltip, { placement: \"top\", children: t('swap_blockchain_fee_tooltip') }), _jsx(InfoRowRight, { children: !trade ? (_jsx(InfoSkeleton, {})) : (_jsxs(Body3, { children: [\"\\u2248\\u00A0\", trade.blockchainFee.stringAssetRelativeAmount] })) })] }), _jsxs(InfoRow, { children: [_jsx(InfoRowLabel, { children: t('swap_route') }), _jsx(InfoRowRight, { children: !trade ? (_jsx(InfoSkeleton, {})) : (_jsx(Body3, { children: trade.path.map(ta => ta.symbol).join(' → ') })) })] })] }) }) })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { Skeleton } from '../shared/Skeleton';\nimport { Body3 } from '../Text';\nimport { css, styled } from 'styled-components';\nimport { priceImpactStatus, useSelectedSwap, useSwapPriceImpact } from '../../state/swap/useSwapForm';\nimport { useCalculatedSwap } from '../../state/swap/useCalculatedSwap';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nconst Body3Styled = styled(Body3) `\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    color: ${p => p.impact === 'medium'\n    ? p.theme.accentOrange\n    : p.impact === 'high'\n        ? p.theme.accentRed\n        : p.theme.textSecondary};\n    cursor: pointer;\n    transition: color 0.15s ease-in-out;\n\n    &:hover {\n        ${p => p.impact !== 'medium' &&\n    p.impact !== 'high' &&\n    css `\n                color: ${p.theme.textPrimary};\n            `};\n    }\n`;\nconst WarnIcon = () => {\n    return (_jsx(\"svg\", { width: \"12\", height: \"12\", viewBox: \"0 0 12 12\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M4.18144 1.65C4.63413 0.86592 4.86047 0.473881 5.11842 0.286474C5.64415 -0.0954914 6.35604 -0.0954914 6.88177 0.286474C7.13971 0.473881 7.36606 0.86592 7.81875 1.65L11.1096 7.35L11.1097 7.35001C11.5623 8.13408 11.7887 8.52612 11.822 8.84321C11.8899 9.48949 11.534 10.106 10.9403 10.3703C10.6491 10.5 10.1964 10.5 9.29099 10.5H2.7092C1.80382 10.5 1.35113 10.5 1.05986 10.3703C0.466204 10.106 0.110258 9.48949 0.178184 8.84321C0.211512 8.52612 0.437856 8.13408 0.890544 7.35L4.18144 1.65ZM5.1001 8.1C5.1001 7.60294 5.50304 7.2 6.0001 7.2C6.49715 7.2 6.9001 7.60294 6.9001 8.1C6.9001 8.59706 6.49715 9 6.0001 9C5.50304 9 5.1001 8.59706 5.1001 8.1ZM6.00002 2C5.53718 2 5.16822 2.38674 5.18997 2.84906L5.31946 5.60072C5.33656 5.96414 5.63619 6.25 6.00002 6.25C6.36384 6.25 6.66347 5.96414 6.68057 5.60072L6.81006 2.84906C6.83182 2.38674 6.46285 2 6.00002 2Z\", fill: \"currentColor\" }) }));\n};\nexport const SwapRate = () => {\n    const [measureUnit, setMeasureUnit] = useState('from');\n    const [selectedSwap] = useSelectedSwap();\n    const { isFetching } = useCalculatedSwap();\n    const priceImpact = useSwapPriceImpact();\n    const isLoading = (isFetching && !selectedSwap?.trade) || priceImpact === undefined;\n    const isHidden = !isFetching && !selectedSwap?.trade;\n    if (isHidden) {\n        return null;\n    }\n    if (isLoading) {\n        return _jsx(Skeleton, { width: \"100px\", height: \"12px\", margin: \"2px 0\" });\n    }\n    const trade = selectedSwap.trade;\n    const leftPart = measureUnit === 'from' ? trade.from : trade.to;\n    const rightPart = measureUnit === 'from' ? trade.to : trade.from;\n    if (leftPart.relativeAmount.isZero()) {\n        return null;\n    }\n    const rightPartAmount = rightPart.relativeAmount.div(leftPart.relativeAmount);\n    const rightPartAssetAmount = AssetAmount.fromRelativeAmount({\n        amount: rightPartAmount,\n        asset: rightPart.asset\n    });\n    const impact = priceImpactStatus(priceImpact);\n    return (_jsxs(Body3Styled, { impact: impact, onClick: () => setMeasureUnit(s => (s === 'from' ? 'to' : 'from')), children: [\"1\\u00A0\", leftPart.asset.symbol, \"\\u00A0\\u2248\\u00A0\", rightPartAssetAmount.stringAssetRelativeAmount, (impact === 'medium' || impact === 'high') && _jsx(WarnIcon, {})] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { Body3, Num2 } from '../Text';\nimport { SwapTokenSelect } from './SwapTokenSelect';\nimport { useSelectedSwap, useSwapToAsset } from '../../state/swap/useSwapForm';\nimport { SwapAmountFiat } from './SwapAmountFiat';\nimport { SwapToAmountBalance } from './SwapAmountBalance';\nimport { useCalculatedSwap } from '../../state/swap/useCalculatedSwap';\nimport { Skeleton } from '../shared/Skeleton';\nimport { SwapTransactionInfo } from './SwapTransactionInfo';\nimport { SwapRate } from './SwapRate';\nimport { useTranslation } from '../../hooks/translation';\nconst FiledContainerStyled = styled.div `\n    background: ${p => p.theme.backgroundContent};\n    border-radius: ${p => p.theme.displayType === 'full-width' ? p.theme.corner2xSmall : p.theme.cornerSmall};\n    padding: 6px 12px;\n`;\nconst FiledHeader = styled.div `\n    color: ${p => p.theme.textSecondary};\n    gap: 8px;\n    display: flex;\n\n    padding: 4px 0;\n\n    > *:first-child {\n        margin-right: auto;\n    }\n\n    > * {\n        cursor: default;\n    }\n`;\nconst FieldBody = styled.div `\n    display: flex;\n    gap: 8px;\n    padding: 6px 0;\n`;\nconst ToAmountField = styled.div `\n    margin-left: auto;\n    overflow: auto;\n\n    cursor: default;\n\n    &::-webkit-scrollbar {\n        display: none;\n    }\n\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n`;\nconst FieldFooter = styled.div `\n    display: flex;\n    gap: 8px;\n    padding: 4px 0;\n    align-items: center;\n    height: 16px;\n\n    > :last-child {\n        margin-left: auto;\n    }\n`;\nconst SwapTokenSelectStyled = styled(SwapTokenSelect) `\n    flex-shrink: 0;\n`;\nconst Num2Tertiary = styled(Num2) `\n    color: ${p => p.theme.textTertiary};\n`;\nexport const SwapToField = () => {\n    const { t } = useTranslation();\n    const [toAsset, setToAsset] = useSwapToAsset();\n    const { isFetching } = useCalculatedSwap();\n    const [selectedSwap] = useSelectedSwap();\n    return (_jsxs(FiledContainerStyled, { children: [_jsxs(FiledHeader, { children: [_jsx(Body3, { children: t('swap_receive') }), _jsx(SwapToAmountBalance, {})] }), _jsxs(FieldBody, { children: [_jsx(SwapTokenSelectStyled, { token: toAsset, onTokenChange: setToAsset }), _jsx(ToAmountField, { children: !selectedSwap?.trade && isFetching ? (_jsx(Skeleton, { width: \"100px\", height: \"28px\", margin: \"4px 0\" })) : selectedSwap?.trade ? (_jsx(Num2, { children: selectedSwap.trade.to.stringRelativeAmount })) : (_jsx(Num2Tertiary, { children: \"0\" })) })] }), _jsxs(FieldFooter, { children: [_jsx(SwapRate, {}), _jsx(SwapAmountFiat, { amount: selectedSwap?.trade?.to.relativeAmount, asset: toAsset })] }), _jsx(SwapTransactionInfo, {})] }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Button } from '../fields/Button';\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { useIsSwapFormNotCompleted, useMaxSwapValue, useSelectedSwap, useSwapFromAmount, useSwapFromAsset, useSwapPriceImpact } from '../../state/swap/useSwapForm';\nimport { useCalculatedSwap } from '../../state/swap/useCalculatedSwap';\nimport { useIsActiveWalletLedger } from '../../state/ledger';\nimport { useSwapOptions } from '../../state/swap/useSwapOptions';\nimport { useTranslation } from '../../hooks/translation';\nexport const SwapButton = ({ onClick, isEncodingProcess }) => {\n    const { t } = useTranslation();\n    const [swapAmount] = useSwapFromAmount();\n    const [fromAsset] = useSwapFromAsset();\n    const { data: max } = useMaxSwapValue();\n    const { isFetching, data: calculatedSwaps } = useCalculatedSwap();\n    const [selectedSwap] = useSelectedSwap();\n    const priceImpact = useSwapPriceImpact();\n    const { data: swapOptions } = useSwapOptions();\n    const isNotCompleted = useIsSwapFormNotCompleted();\n    const activeIsLedger = useIsActiveWalletLedger();\n    if (activeIsLedger) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, disabled: true, children: t('swap_ledger_not_supported') }));\n    }\n    if (isNotCompleted) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, disabled: true, children: t('swap_enter_amount') }));\n    }\n    if (!isFetching && calculatedSwaps?.every(s => !s.trade)) {\n        return (_jsx(Button, { size: \"medium\", disabled: true, children: t('swap_trade_is_not_available') }));\n    }\n    if ((isFetching && !selectedSwap?.trade) || !max || priceImpact === undefined || !swapOptions) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, loading: true, children: t('continue') }));\n    }\n    if (!selectedSwap || !selectedSwap.trade) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, disabled: true, children: t('swap_trade_is_not_available') }));\n    }\n    const isNotEnoughFunds = swapAmount?.gt(shiftedDecimals(max, fromAsset.decimals));\n    if (isNotEnoughFunds) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, disabled: true, children: t('swap_not_enough_funds') }));\n    }\n    const priceImpactTooHigh = priceImpact?.gt(swapOptions.maxPriceImpact);\n    if (priceImpactTooHigh) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, disabled: true, children: t('swap_price_impact_too_high') }));\n    }\n    return (_jsx(Button, { size: \"medium\", primary: true, onClick: onClick, loading: isEncodingProcess, children: t('continue') }));\n};\n","import { useMutation } from '@tanstack/react-query';\nimport { assertUnreachable } from '@tonkeeper/core/dist/utils/types';\nimport { Address } from '@ton/core';\nimport { useAppContext, useWalletContext } from '../../hooks/appContext';\nimport { useSwapsConfig } from './useSwapsConfig';\nimport BigNumber from 'bignumber.js';\nimport { useSwapOptions } from './useSwapOptions';\nexport function useEncodeSwap() {\n    const { active } = useWalletContext();\n    const { swapService } = useSwapsConfig();\n    const { config } = useAppContext();\n    const { data: swapOpaitons } = useSwapOptions();\n    const referral = config.web_swaps_referral_address;\n    return useMutation(swap => {\n        if (!swapOpaitons) {\n            throw new Error('SwapOptions query was not resolved yet');\n        }\n        return swapService.encodeSwap({\n            swap: swapToProviderSwap(swap),\n            options: {\n                senderAddress: active.rawAddress,\n                slippage: new BigNumber(swapOpaitons.slippagePercent)\n                    .div(100)\n                    .decimalPlaces(5)\n                    .toString(),\n                ...(referral && { referralAddress: Address.parse(referral).toRawString() })\n            }\n        });\n    });\n}\nconst swapToProviderSwap = (swap) => {\n    if (swap.provider === 'stonfi') {\n        return {\n            provider: 'stonfi',\n            stonfiTrade: swap.trade.rawTrade\n        };\n    }\n    if (swap.provider === 'dedust') {\n        return {\n            provider: 'dedust',\n            dedustTrade: swap.trade.rawTrade\n        };\n    }\n    assertUnreachable(swap);\n};\n","export function assertUnreachable(_) {\n    throw new Error(\"Didn't expect to get here\");\n}\nexport function notNullish(x) {\n    return x !== null && x !== undefined;\n}\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { Body3, Label2 } from '../Text';\nimport { useCalculatedSwap } from '../../state/swap/useCalculatedSwap';\nimport { useFormatFiat, useRate } from '../../state/rates';\nimport { tonAssetAddressToString } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { useIsSwapFormNotCompleted, useSelectedSwap, useSwapToAsset } from '../../state/swap/useSwapForm';\nimport { Skeleton } from '../shared/Skeleton';\nimport BigNumber from 'bignumber.js';\nimport { useTranslation } from '../../hooks/translation';\nconst SwapProvidersContainer = styled.div `\n    padding: 0 12px 12px;\n    background: ${p => p.theme.backgroundContent};\n    border-radius: ${p => p.theme.displayType === 'full-width' ? p.theme.corner2xSmall : p.theme.cornerSmall};\n    height: fit-content;\n`;\nconst Heading = styled.div `\n    color: ${p => p.theme.textSecondary};\n    padding: 10px 0;\n    display: flex;\n    align-items: center;\n    > * {\n        cursor: default;\n    }\n`;\nexport const SwapProviders = () => {\n    const { t } = useTranslation();\n    const isNotCompleted = useIsSwapFormNotCompleted();\n    if (isNotCompleted) {\n        return _jsx(\"div\", {});\n    }\n    return (_jsxs(SwapProvidersContainer, { children: [_jsx(Heading, { children: _jsx(Body3, { children: t('swap_provider') }) }), _jsx(ProviderCard, { provider: \"stonfi\" }), _jsx(ProviderCard, { provider: \"dedust\" })] }));\n};\nconst ProviderCardStyled = styled.div `\n    height: 56px;\n    border-radius: ${p => p.theme.displayType === 'full-width' ? p.theme.corner2xSmall : p.theme.cornerSmall};\n    border: 1px solid ${p => (p.isActive ? p.theme.accentBlue : p.theme.separatorCommon)};\n    padding: 0 12px;\n    display: flex;\n    gap: 0.5rem;\n    align-items: center;\n    cursor: ${p => (p.isDisabled ? 'not-allowed' : 'pointer')};\n\n    transition: border-color 0.15s ease-in-out;\n\n    &:not(:last-child) {\n        margin-bottom: 8px;\n    }\n`;\nconst ProviderImage = styled.img `\n    width: 24px;\n    height: 24px;\n    border-radius: 6px;\n`;\nconst ProviderLabelContainer = styled.div `\n    padding: 10px 0;\n    display: flex;\n    flex-direction: column;\n`;\nconst ProviderPriceContainer = styled.div `\n    padding: 10px 0;\n    margin-left: auto;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n`;\nconst Body3Styled = styled(Body3) `\n    color: ${p => p.theme.textSecondary};\n`;\nconst providersConfig = {\n    stonfi: {\n        imageUrl: 'https://wallet.tonkeeper.com/img/swap/stonfi.png',\n        label: 'STON.fi'\n    },\n    dedust: {\n        imageUrl: 'https://wallet.tonkeeper.com/img/swap/dedust.png',\n        label: 'DeDust'\n    }\n};\nconst ProviderCard = ({ provider }) => {\n    const { t } = useTranslation();\n    const [selectedSwap, setSelectedSwap] = useSelectedSwap();\n    const isActive = selectedSwap?.provider === provider;\n    const { fetchedSwaps, isFetching } = useCalculatedSwap();\n    const swap = fetchedSwaps.find(t => t.provider === provider);\n    const trade = swap?.trade;\n    const [toAsset] = useSwapToAsset();\n    const { data: rate, isFetching: isRateFetching } = useRate(tonAssetAddressToString(toAsset.address));\n    const isBest = fetchedSwaps.findIndex(t => t.provider === provider) === 0 && !!swap?.trade;\n    const providerConfig = providersConfig[provider];\n    const { fiatAmount } = useFormatFiat(rate, trade?.to.relativeAmount || new BigNumber(0));\n    return (_jsxs(ProviderCardStyled, { isDisabled: !swap || !trade, isActive: isActive, onClick: () => swap && trade && setSelectedSwap(swap), children: [_jsx(ProviderImage, { src: providerConfig.imageUrl }), _jsxs(ProviderLabelContainer, { children: [_jsx(Label2, { children: providerConfig.label }), isBest && _jsx(Body3Styled, { children: t('swap_best_price') })] }), _jsx(ProviderPriceContainer, { children: !isFetching && !trade ? (_jsx(Body3Styled, { children: t('swap_trade_is_not_available') })) : (_jsxs(_Fragment, { children: [trade ? (_jsx(Label2, { children: trade.to.stringAssetRelativeAmount })) : (_jsx(Skeleton, { width: \"60px\", height: \"14px\", margin: \"3px 0\" })), rate && trade ? (_jsxs(Body3Styled, { children: [\"\\u2248\\u00A0\", fiatAmount] })) : isRateFetching ? (_jsx(Skeleton, { width: \"60px\", height: \"12px\", margin: \"2px 0\" })) : (_jsx(\"div\", {}))] })) })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { styled, useTheme } from 'styled-components';\nimport { SwapFromField } from './SwapFromField';\nimport { SwapToField } from './SwapToField';\nimport { SwapButton } from './SwapButton';\nimport { TonTransactionNotification } from '../connect/TonTransactionNotification';\nimport { useEncodeSwap } from '../../state/swap/useEncodeSwap';\nimport { useState } from 'react';\nimport { useSelectedSwap, useSwapFromAmount, useSwapFromAsset, useSwapToAsset } from '../../state/swap/useSwapForm';\nimport { Address } from '@ton/core';\nimport { SwapTokensListNotification } from './tokens-list/SwapTokensListNotification';\nimport { IconButton } from '../fields/IconButton';\nimport { SwapIcon } from '../Icon';\nimport { useNavigate } from 'react-router-dom';\nimport { AppRoute } from '../../libs/routes';\nimport { SwapProviders } from './SwapProviders';\nimport { useSwapMobileNotification } from '../../state/swap/useSwapMobileNotification';\nconst MainFormWrapper = styled.div `\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n`;\nconst ChangeIconStyled = styled(IconButton) `\n    height: 32px;\n    width: 32px;\n    position: absolute;\n    right: calc(50% - 16px);\n    bottom: -20px;\n    border: none;\n\n    background-color: ${props => props.theme.buttonTertiaryBackground};\n\n    > svg {\n        transition: color 0.15s ease-in-out;\n    }\n\n    &:hover {\n        background-color: ${props => props.theme.buttonTertiaryBackgroundHighlighted};\n        > svg {\n            color: ${props => props.theme.iconPrimary};\n        }\n    }\n`;\nexport const SwapMainForm = ({ className }) => {\n    const theme = useTheme();\n    const { isLoading, mutateAsync: encode } = useEncodeSwap();\n    const [modalParams, setModalParams] = useState(null);\n    const [selectedSwap] = useSelectedSwap();\n    const [fromAsset, setFromAsset] = useSwapFromAsset();\n    const [toAsset, setToAsset] = useSwapToAsset();\n    const [_, setFromAmount] = useSwapFromAmount();\n    const navigate = useNavigate();\n    const [__, setIsMobileSwapOpen] = useSwapMobileNotification();\n    const onConfirm = async () => {\n        const result = await encode(selectedSwap);\n        setModalParams({\n            valid_until: (Date.now() + 10 * 60 * 1000) / 1000,\n            messages: [\n                {\n                    address: Address.parse(result.to).toString({ bounceable: true }),\n                    amount: result.value,\n                    payload: result.body\n                }\n            ]\n        });\n    };\n    const onChangeFields = () => {\n        setFromAsset(toAsset);\n        setToAsset(fromAsset);\n        if (selectedSwap?.trade) {\n            setFromAmount(selectedSwap.trade.to.relativeAmount);\n        }\n    };\n    const onCloseConfirmModal = (boc) => {\n        setModalParams(null);\n        if (boc) {\n            navigate(AppRoute.activity);\n            setIsMobileSwapOpen(false);\n        }\n    };\n    return (_jsxs(MainFormWrapper, { className: className, children: [_jsx(SwapFromField, { children: _jsx(ChangeIconStyled, { onClick: onChangeFields, children: _jsx(SwapIcon, {}) }) }), _jsx(SwapToField, {}), theme.displayType === 'compact' && _jsx(SwapProviders, {}), _jsx(SwapButton, { onClick: onConfirm, isEncodingProcess: isLoading || !!modalParams }), _jsx(TonTransactionNotification, { handleClose: onCloseConfirmModal, params: modalParams, waitInvalidation: true }), _jsx(SwapTokensListNotification, {})] }));\n};\n","'use client';\nimport { createContext, Component, createElement, isValidElement, useContext, useState, useMemo, forwardRef } from 'react';\n\nconst ErrorBoundaryContext = createContext(null);\n\nconst initialState = {\n  didCatch: false,\n  error: null\n};\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.resetErrorBoundary = this.resetErrorBoundary.bind(this);\n    this.state = initialState;\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      didCatch: true,\n      error\n    };\n  }\n  resetErrorBoundary() {\n    const {\n      error\n    } = this.state;\n    if (error !== null) {\n      var _this$props$onReset, _this$props;\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      (_this$props$onReset = (_this$props = this.props).onReset) === null || _this$props$onReset === void 0 ? void 0 : _this$props$onReset.call(_this$props, {\n        args,\n        reason: \"imperative-api\"\n      });\n      this.setState(initialState);\n    }\n  }\n  componentDidCatch(error, info) {\n    var _this$props$onError, _this$props2;\n    (_this$props$onError = (_this$props2 = this.props).onError) === null || _this$props$onError === void 0 ? void 0 : _this$props$onError.call(_this$props2, error, info);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      didCatch\n    } = this.state;\n    const {\n      resetKeys\n    } = this.props;\n\n    // There's an edge case where if the thing that triggered the error happens to *also* be in the resetKeys array,\n    // we'd end up resetting the error boundary immediately.\n    // This would likely trigger a second error to be thrown.\n    // So we make sure that we don't check the resetKeys on the first call of cDU after the error is set.\n\n    if (didCatch && prevState.error !== null && hasArrayChanged(prevProps.resetKeys, resetKeys)) {\n      var _this$props$onReset2, _this$props3;\n      (_this$props$onReset2 = (_this$props3 = this.props).onReset) === null || _this$props$onReset2 === void 0 ? void 0 : _this$props$onReset2.call(_this$props3, {\n        next: resetKeys,\n        prev: prevProps.resetKeys,\n        reason: \"keys\"\n      });\n      this.setState(initialState);\n    }\n  }\n  render() {\n    const {\n      children,\n      fallbackRender,\n      FallbackComponent,\n      fallback\n    } = this.props;\n    const {\n      didCatch,\n      error\n    } = this.state;\n    let childToRender = children;\n    if (didCatch) {\n      const props = {\n        error,\n        resetErrorBoundary: this.resetErrorBoundary\n      };\n      if (typeof fallbackRender === \"function\") {\n        childToRender = fallbackRender(props);\n      } else if (FallbackComponent) {\n        childToRender = createElement(FallbackComponent, props);\n      } else if (fallback === null || isValidElement(fallback)) {\n        childToRender = fallback;\n      } else {\n        throw error;\n      }\n    }\n    return createElement(ErrorBoundaryContext.Provider, {\n      value: {\n        didCatch,\n        error,\n        resetErrorBoundary: this.resetErrorBoundary\n      }\n    }, childToRender);\n  }\n}\nfunction hasArrayChanged() {\n  let a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]));\n}\n\nfunction assertErrorBoundaryContext(value) {\n  if (value == null || typeof value.didCatch !== \"boolean\" || typeof value.resetErrorBoundary !== \"function\") {\n    throw new Error(\"ErrorBoundaryContext not found\");\n  }\n}\n\nfunction useErrorBoundary() {\n  const context = useContext(ErrorBoundaryContext);\n  assertErrorBoundaryContext(context);\n  const [state, setState] = useState({\n    error: null,\n    hasError: false\n  });\n  const memoized = useMemo(() => ({\n    resetBoundary: () => {\n      context.resetErrorBoundary();\n      setState({\n        error: null,\n        hasError: false\n      });\n    },\n    showBoundary: error => setState({\n      error,\n      hasError: true\n    })\n  }), [context.resetErrorBoundary]);\n  if (state.hasError) {\n    throw state.error;\n  }\n  return memoized;\n}\n\nfunction withErrorBoundary(component, errorBoundaryProps) {\n  const Wrapped = forwardRef((props, ref) => createElement(ErrorBoundary, errorBoundaryProps, createElement(component, {\n    ...props,\n    ref\n  })));\n\n  // Format for display in DevTools\n  const name = component.displayName || component.name || \"Unknown\";\n  Wrapped.displayName = \"withErrorBoundary(\".concat(name, \")\");\n  return Wrapped;\n}\n\nexport { ErrorBoundary, ErrorBoundaryContext, useErrorBoundary, withErrorBoundary };\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { BorderSmallResponsive } from './Styles';\nimport { Body2Class } from '../Text';\nimport { forwardRef, useId } from 'react';\nconst LabelStyled = styled.label `\n    cursor: pointer;\n    ${BorderSmallResponsive};\n    ${Body2Class};\n    box-sizing: border-box;\n\n    text-align: center;\n\n    padding: 8px 12px;\n\n    background: ${p => p.theme.fieldBackground};\n    border: 1px solid transparent;\n    transition: border-color 0.15s ease-in-out;\n`;\nconst InputStyled = styled.input `\n    display: none;\n\n    &:checked + ${LabelStyled} {\n        border: 1px solid ${p => p.theme.accentBlue};\n    }\n`;\nexport const RadioFlatInput = forwardRef((props, ref) => {\n    const fallbackId = useId();\n    const id = props.id || fallbackId;\n    const { className, children, ...rest } = props;\n    return (_jsxs(_Fragment, { children: [_jsx(InputStyled, { type: \"radio\", ref: ref, id: id, ...rest }), _jsx(LabelStyled, { className: className, htmlFor: id, children: children })] }));\n});\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useLayoutEffect, useState } from 'react';\nimport { styled } from 'styled-components';\nimport { Body3, Label2 } from '../Text';\nimport { RadioFlatInput } from '../shared/RadioFlatInput';\nimport { Notification } from '../Notification';\nimport { Button } from '../fields/Button';\nimport { useMutateSwapOptions, useSwapOptions } from '../../state/swap/useSwapOptions';\nimport { SpinnerIcon } from '../Icon';\nimport { useTranslation } from '../../hooks/translation';\nexport const SwapSettingsNotification = ({ isOpen, onClose }) => {\n    const { t } = useTranslation();\n    return (_jsx(_Fragment, { children: _jsx(Notification, { isOpen: isOpen, handleClose: onClose, title: t('swap_settings'), children: () => _jsx(SwapSettingsNotificationContent, { onClose: onClose }) }) }));\n};\nconst SlippageToleranceTextWrapper = styled.div `\n    padding-bottom: 10px;\n\n    > * {\n        display: block;\n        cursor: default;\n    }\n\n    > ${Body3} {\n        color: ${p => p.theme.textSecondary};\n    }\n`;\nconst SlippageOptionsContainer = styled.div `\n    display: flex;\n    gap: 0.5rem;\n    margin-bottom: 2rem;\n`;\nconst RadioFlatInputStyled = styled(RadioFlatInput) `\n    height: 36px;\n    flex: 1;\n`;\nconst ButtonsContainer = styled.div `\n    display: flex;\n    gap: 0.5rem;\n    > * {\n        flex: 1;\n    }\n`;\nconst slippagePercentValues = [0.5, 1, 3, 5];\nconst defaultPercent = slippagePercentValues[1];\nconst LoadingContainer = styled.div `\n    height: 200px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst SwapSettingsNotificationContent = ({ onClose }) => {\n    const { t } = useTranslation();\n    const { data: swapOptions } = useSwapOptions();\n    const { mutate } = useMutateSwapOptions();\n    const [checkedRadioValue, setCheckedRadioValue] = useState();\n    useLayoutEffect(() => {\n        if (swapOptions?.slippagePercent) {\n            if (slippagePercentValues.includes(swapOptions?.slippagePercent)) {\n                setCheckedRadioValue(swapOptions?.slippagePercent);\n            }\n            else {\n                setCheckedRadioValue(defaultPercent);\n                mutate({ slippagePercent: defaultPercent });\n            }\n        }\n    }, [swapOptions?.slippagePercent]);\n    if (!swapOptions) {\n        return (_jsx(LoadingContainer, { children: _jsx(SpinnerIcon, {}) }));\n    }\n    const onSave = () => {\n        mutate({ slippagePercent: checkedRadioValue });\n        onClose?.();\n    };\n    return (_jsxs(_Fragment, { children: [_jsxs(SlippageToleranceTextWrapper, { children: [_jsx(Label2, { children: t('swap_slippage') }), _jsx(Body3, { children: t('swap_slippage_description') })] }), _jsx(SlippageOptionsContainer, { children: slippagePercentValues.map(value => (_jsxs(RadioFlatInputStyled, { name: \"slippage-percent\", value: value, checked: checkedRadioValue === value, onChange: () => setCheckedRadioValue(value), children: [value, \"%\"] }, value))) }), _jsxs(ButtonsContainer, { children: [_jsx(Button, { secondary: true, onClick: onClose, children: t('cancel') }), _jsx(Button, { primary: true, disabled: checkedRadioValue === swapOptions.slippagePercent, onClick: onSave, children: t('save') })] })] }));\n};\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { IconButtonTransparentBackground } from '../../fields/IconButton';\nimport { SlidersIcon } from '../../Icon';\nimport { SwapSettingsNotification } from '../SwapSettingsNotification';\nimport { useState } from 'react';\nexport const SwapSettingsButton = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    return (_jsxs(_Fragment, { children: [_jsx(IconButtonTransparentBackground, { onClick: () => setIsOpen(true), children: _jsx(SlidersIcon, {}) }), _jsx(SwapSettingsNotification, { isOpen: isOpen, onClose: () => setIsOpen(false) })] }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { IconButtonTransparentBackground } from '../../fields/IconButton';\nimport { RefreshIcon, RefreshIconAnimated } from '../../Icon';\nimport { useCalculatedSwap } from '../../../state/swap/useCalculatedSwap';\nimport { useEffect, useState } from 'react';\nlet isRefetchCalled = false;\nexport const SwapRefreshButton = () => {\n    const REFETCH_INTERVAL = 15000;\n    const { refetch, isFetching } = useCalculatedSwap();\n    const [isCounting, setIsCounting] = useState(false);\n    useEffect(() => {\n        isRefetchCalled = false;\n        if (isFetching) {\n            setIsCounting(false);\n        }\n        else {\n            setIsCounting(true);\n            const timeutId = setTimeout(() => {\n                // prevent double refresh from possible two component instances\n                if (isRefetchCalled) {\n                    return;\n                }\n                refetch();\n                isRefetchCalled = true;\n            }, REFETCH_INTERVAL);\n            return () => clearTimeout(timeutId);\n        }\n    }, [isFetching]);\n    return (_jsx(IconButtonTransparentBackground, { onClick: () => refetch(), children: isCounting ? _jsx(RefreshIconAnimated, {}) : _jsx(RefreshIcon, {}) }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Label2 } from '../../components/Text';\nimport { SwapMainForm } from '../../components/swap/SwapMainForm';\nimport { styled } from 'styled-components';\nimport { Notification } from '../../components/Notification';\nimport { useSwapMobileNotification } from '../../state/swap/useSwapMobileNotification';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { fallbackRenderOver } from '../../components/Error';\nimport { SwapSettingsButton } from '../../components/swap/icon-buttons/SwapSettingsButton';\nimport { SwapRefreshButton } from '../../components/swap/icon-buttons/SwapRefreshButton';\nimport { useTranslation } from '../../hooks/translation';\nconst SwapMobileNotification = () => {\n    const [isOpen, setIsOpen] = useSwapMobileNotification();\n    return (_jsx(ErrorBoundary, { fallbackRender: fallbackRenderOver('Failed to display Swap page'), children: _jsx(Notification, { isOpen: isOpen, handleClose: () => setIsOpen(false), title: _jsx(NotificationHeader, {}), children: () => _jsx(NotificationContent, {}) }) }));\n};\nconst NotificationHeaderContainer = styled.div `\n    position: relative;\n`;\nconst HeaderButtons = styled.div `\n    display: flex;\n`;\nconst HeaderLabel = styled(Label2) `\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 5rem;\n    right: 2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: transparent;\n`;\nconst NotificationHeader = () => {\n    const { t } = useTranslation();\n    return (_jsxs(NotificationHeaderContainer, { children: [_jsxs(HeaderButtons, { children: [_jsx(SwapRefreshButton, {}), _jsx(SwapSettingsButton, {})] }), _jsx(HeaderLabel, { children: t('wallet_swap') })] }));\n};\nconst SwapPageWrapper = styled.div `\n    overflow-y: auto;\n    min-height: calc(var(--app-height) - 7rem);\n`;\nconst NotificationContent = () => {\n    return (_jsx(SwapPageWrapper, { children: _jsx(SwapMainForm, {}) }));\n};\nexport default SwapMobileNotification;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function fallbackRenderOver(location) {\n    return ({ error }) => {\n        return (_jsxs(\"div\", { role: \"alert\", children: [_jsx(\"p\", { children: location }), _jsx(\"p\", { children: \"Something went wrong:\" }), _jsx(\"pre\", { style: { color: 'red' }, children: error.message })] }));\n    };\n}\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Address } from '@ton/core';\nimport { AppKey } from '@tonkeeper/core/dist/Keys';\nimport { BLOCKCHAIN_NAME, CryptoCurrency } from '@tonkeeper/core/dist/entries/crypto';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nimport { packAssetId } from '@tonkeeper/core/dist/entries/crypto/asset/basic-asset';\nimport { isTon, tonAssetAddressFromString, tonAssetAddressToString } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { JettonsApi } from '@tonkeeper/core/dist/tonApiV2';\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { seeIfValidTonAddress } from '@tonkeeper/core/dist/utils/common';\nimport BigNumber from 'bignumber.js';\nimport { useMemo } from 'react';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { atom, useAtom } from '../../libs/atom';\nimport { QueryKey } from '../../libs/queryKey';\nimport { useAssets } from '../home';\nimport { useJettonList } from '../jetton';\nimport { useRate } from '../rates';\nimport { useSwapsConfig } from './useSwapsConfig';\nexport function useAllSwapAssets() {\n    const { swapService } = useSwapsConfig();\n    const { data: customAssets } = useUserCustomSwapAssets();\n    return useQuery({\n        queryKey: [QueryKey.swapAllAssets, customAssets],\n        queryFn: async () => {\n            try {\n                const assets = await swapService.swapAssets();\n                const fetchedAssets = assets\n                    .map(asset => {\n                    const address = asset.address === 'ton' ? 'TON' : Address.parse(asset.address);\n                    return {\n                        id: packAssetId(BLOCKCHAIN_NAME.TON, address),\n                        symbol: asset.symbol,\n                        decimals: asset.decimals,\n                        name: asset.name,\n                        image: asset.image,\n                        blockchain: BLOCKCHAIN_NAME.TON,\n                        address\n                    };\n                })\n                    .filter(asset => !(customAssets || []).some(ca => ca.id === asset.id));\n                return fetchedAssets.concat(customAssets || []);\n            }\n            catch (e) {\n                console.error(e);\n                return [];\n            }\n        },\n        enabled: !!customAssets\n    });\n}\nconst swapTokensFilter = atom('');\nexport function useSwapTokensFilter() {\n    return useAtom(swapTokensFilter);\n}\nexport function useWalletSwapAssets() {\n    const [walletAssetsData] = useAssets();\n    const { data: allAssets } = useAllSwapAssets();\n    const { data: tonRate } = useRate(CryptoCurrency.TON);\n    const { fiat } = useAppContext();\n    return useQuery({\n        queryKey: [QueryKey.swapWalletAssets, allAssets, walletAssetsData, tonRate, fiat],\n        queryFn: async () => {\n            if (!walletAssetsData || !allAssets || !tonRate) {\n                return [];\n            }\n            const assetsAmounts = allAssets.map(asset => {\n                if (isTon(asset.address)) {\n                    return {\n                        assetAmount: new AssetAmount({\n                            asset,\n                            weiAmount: walletAssetsData.ton.info.balance\n                        }),\n                        fiatAmount: shiftedDecimals(new BigNumber(walletAssetsData.ton.info.balance)).multipliedBy(tonRate.prices)\n                    };\n                }\n                const balance = walletAssetsData.ton.jettons.balances.find(j => Address.parse(j.jetton.address).equals(asset.address));\n                return {\n                    assetAmount: new AssetAmount({\n                        asset,\n                        weiAmount: balance?.balance || 0\n                    }),\n                    fiatAmount: shiftedDecimals(new BigNumber(balance?.balance || 0), asset.decimals).multipliedBy(new BigNumber(balance?.price?.prices?.[fiat] || 0))\n                };\n            });\n            assetsAmounts.sort((a, b) => {\n                if (a.fiatAmount.isZero() && b.fiatAmount.isZero()) {\n                    return b.assetAmount.weiAmount.comparedTo(a.assetAmount.weiAmount);\n                }\n                return b.fiatAmount.comparedTo(a.fiatAmount);\n            });\n            return assetsAmounts;\n        },\n        enabled: !!walletAssetsData && !!allAssets && !!tonRate\n    });\n}\nexport const useWalletFilteredSwapAssets = () => {\n    const [filter] = useSwapTokensFilter();\n    const { data: walletSwapAssets } = useWalletSwapAssets();\n    return useMemo(() => {\n        if (!walletSwapAssets) {\n            return undefined;\n        }\n        return walletSwapAssets.filter(swapAsset => {\n            if (!filter) {\n                return true;\n            }\n            if (seeIfValidTonAddress(filter)) {\n                return Address.parse(filter).equals(swapAsset.assetAmount.asset.address);\n            }\n            const upperCaseFilter = filter.toUpperCase();\n            if (swapAsset.assetAmount.asset.symbol.toUpperCase().includes(upperCaseFilter) ||\n                swapAsset.assetAmount.asset.name?.toUpperCase().includes(upperCaseFilter)) {\n                return true;\n            }\n        });\n    }, [filter, walletSwapAssets]);\n};\nexport const useSwapCustomTokenSearch = () => {\n    const [filter] = useSwapTokensFilter();\n    const isAddress = seeIfValidTonAddress(filter);\n    const { api, fiat } = useAppContext();\n    const { data: jettons } = useJettonList();\n    return useQuery({\n        queryKey: [QueryKey.swapCustomToken, filter, jettons, fiat],\n        queryFn: async () => {\n            if (!isAddress) {\n                return null;\n            }\n            try {\n                const address = Address.parse(filter);\n                const response = await new JettonsApi(api.tonApiV2).getJettonInfo({\n                    accountId: address.toRawString()\n                });\n                const tonAsset = {\n                    address,\n                    image: response.metadata.image,\n                    blockchain: BLOCKCHAIN_NAME.TON,\n                    name: response.metadata.name,\n                    symbol: response.metadata.symbol,\n                    decimals: Number(response.metadata.decimals),\n                    id: packAssetId(BLOCKCHAIN_NAME.TON, address)\n                };\n                const jb = jettons?.balances.find(j => Address.parse(j.jetton.address).equals(address));\n                const assetAmount = new AssetAmount({\n                    asset: tonAsset,\n                    weiAmount: jb?.balance || new BigNumber(0)\n                });\n                return {\n                    assetAmount,\n                    fiatAmount: shiftedDecimals(new BigNumber(jb?.balance || 0), tonAsset.decimals).multipliedBy(new BigNumber(jb?.price?.prices?.[fiat] || 0))\n                };\n            }\n            catch (e) {\n                console.error(e);\n                return null;\n            }\n        },\n        enabled: isAddress && !!jettons\n    });\n};\nexport const useUserCustomSwapAssets = () => {\n    const sdk = useAppSdk();\n    return useQuery([AppKey.SWAP_CUSTOM_ASSETS], async () => {\n        const assetsSerialized = await sdk.storage.get(AppKey.SWAP_CUSTOM_ASSETS);\n        return (assetsSerialized?.map(s => ({\n            ...s,\n            blockchain: s.blockchain,\n            address: tonAssetAddressFromString(s.address),\n            id: packAssetId(s.blockchain, s.address)\n        })) || []);\n    });\n};\nexport const useAddUserCustomSwapAsset = () => {\n    const sdk = useAppSdk();\n    const client = useQueryClient();\n    return useMutation(async (asset) => {\n        const current = (await sdk.storage.get(AppKey.SWAP_CUSTOM_ASSETS)) || [];\n        await sdk.storage.set(AppKey.SWAP_CUSTOM_ASSETS, [\n            ...current,\n            { ...asset, address: tonAssetAddressToString(asset.address) }\n        ]);\n        await client.invalidateQueries([AppKey.SWAP_CUSTOM_ASSETS]);\n    });\n};\n"],"names":["SwapSearchInput","forwardRef","_ref","ref","className","isDisabled","t","useTranslation","value","setValue","useSwapTokensFilter","_jsx","Input","onChange","e","disabled","label","clearButton","size","ConfirmImportNotificationContent","styled","div","_templateObject","_taggedTemplateLiteral","DescriptionBlock","Body2","_templateObject2","p","theme","textSecondary","ButtonsBlock","_templateObject3","WrapperStyles","createGlobalStyle","_templateObject4","displayType","ConfirmImportNotification","isOpen","onClose","tokenSymbol","_jsxs","_Fragment","children","Notification","handleClose","wrapperClassName","Label2","replace","Button","primary","onClick","secondary","SwapTokensListWrapper","Divider","separatorCommon","SwapTokensList","walletSwapAssets","onSelect","displayingAssets","setDisplayingAssets","useState","slice","useRef","useEffect","onScroll","throttle","current","scrollHeight","clientHeight","scrollTop","d","length","map","swapAsset","index","Fragment","TokenListItem","assetAmount","asset","id","TokenNotFound","TokensNotFoundContainer","_ref2","data","isFetching","useSwapCustomTokenSearch","isOpened","setIsOpened","mutate","useAddUserCustomSwapAsset","SpinnerIcon","confirmed","symbol","TokenListItemWrapper","button","backgroundContent","TokenImage","img","_templateObject5","TokenInfo","_templateObject6","TokenInfoLine","_templateObject7","LinkOutIconWrapper","_templateObject8","iconSecondary","TokenInfoSecondLine","_templateObject9","BalanceLabel","_templateObject10","isZero","textTertiary","textPrimary","_ref3","isZeroBalance","relativeAmount","fiat","useAppContext","sdk","useAppSdk","src","image","explorerUrl","preventDefault","stopPropagation","isTon","address","concat","toString","urlSafe","openPage","LinkOutIcon","stringRelativeAmount","Body3","name","formatFiatCurrency","fiatAmount","swapTokensListOpened$","atom","undefined","SwapTokensListNotification","setIsOpen","useAtom","title","footer","SwapTokensListContent","SwapSearchInputStyled","SwapTokensListContentWrapper","css","SpinnerContainer","useWalletFilteredSwapAssets","inputRef","_","setFilter","setTimeout","_inputRef$current","focus","TokenSymbol","SelectContainer","SwapTokenSelect","token","onTokenChange","openList","useCallback","useOpenSwapTokensList","SwitchIcon","AmountInputWrapper","input","isErrored","accentRed","Num2Class","Body3Styled","SwapAmountFiat","amount","rate","isLoading","useRate","tonAssetAddressToString","prices","Skeleton","width","height","margin","inFiat","BigNumber","multipliedBy","BalanceContainer","MaxButton","accentBlue","SwapFromAmountBalance","setSwapAmount","useSwapFromAmount","useSwapFromAsset","balance","useMaxSwapValue","SwapAmountContent","decimals","onMax","shiftedDecimals","SwapToAmountBalance","useSwapToAsset","useAssetWeiBalance","blockchain","BLOCKCHAIN_NAME","TON","format","useFormatCoinValue","Label3","FiledContainerStyled","corner2xSmall","cornerSmall","FiledHeader","FieldBody","FieldFooter","SwapTokenSelectStyled","SwapAmountInputStyled","setInput","endsWith","getDecimalSeparator","removeGroupSeparator","eq","formatNumberValue","decimalSeparator","newValue","inputValue","replaceTypedDecimalSeparator","seeIfValueValid","isNumeric","bnInput","prevBnInput","formatSendValue","onInput","target","placeholder","inputMode","SwapFromField","swapAmount","fromAsset","setFromAsset","max","debounce","gt","swapAssetsCache","Map","swapProviders","fetchedSwaps$","calculationId","useCalculatedSwap","api","fetchedSwaps","setFetchedSwaps","toAsset","fromAmountRelative","setSelectedSwap","useSelectedSwap","isNotCompleted","useIsSwapFormNotCompleted","swapService","useSwapsConfig","query","useQuery","queryKey","QueryKey","swapCalculate","shiftedBy","toFixed","queryFn","async","signal","currentCalulationId","addAssetToCache","fromAmountWei","unShiftedDecimals","totalFetchedSwaps","Promise","res","rej","fetchedProvidersNumber","forEach","swapPromise","calculateSwap","toTradeAssetId","provider","onabort","cancel","providerSwap","swap","providerSwapToSwap","Error","providerBestSwap","sortSwaps","trade","s","console","error","cacheTime","useMemo","toRawString","fromTradeAssetId","Address","parse","swaps","sort","a","b","to","weiAmount","comparedTo","assetsInfo","getPathAssets","trades","from","AssetAmount","fromAmount","toAmount","path","find","eqAddresses","blockchainFee","TON_ASSET","rawTrade","dedustRawTrade","stonfiRawTrade","addresses","flatMap","all","getAsset","has","set","resolve","get","JettonsApi","tonApiV2","getJettonInfo","accountId","then","response","metadata","Number","packAssetId","defaultSwapOptions","useSwapOptions","AppKey","SWAP_OPTIONS","options","storage","slippagePercent","maxPriceImpact","TxInfoContainer","TxInfoHeader","AccordionContent","AccordionAnimation","animationCompleted","AccordionBody","AccordionButton","IconButton","InfoRow","Tooltip","backgroundContentTint","BorderSmallResponsive","Body2Class","placement","_templateObject11","TooltipHost","_templateObject12","InfoRowLabel","_templateObject13","InfoRowRight","_templateObject14","InfoSkeleton","PriceImpact","_templateObject15","status","accentGreen","accentOrange","SwapTransactionInfo","isAnimationCompleted","setIsAnimationCompleted","timeoutRef","priceImpact","useSwapPriceImpact","swapOptions","onToggleAccordion","clearTimeout","transparent","ChevronDownIcon","InfoCircleIcon","priceImpactStatus","decimalPlaces","stringAssetRelativeAmount","ta","join","impact","WarnIcon","viewBox","fill","xmlns","fillRule","clipRule","SwapRate","measureUnit","setMeasureUnit","selectedSwap","leftPart","rightPart","rightPartAmount","rightPartAssetAmount","fromRelativeAmount","ToAmountField","Num2Tertiary","Num2","SwapToField","_selectedSwap$trade","setToAsset","SwapButton","isEncodingProcess","calculatedSwaps","useIsActiveWalletLedger","every","loading","swapToProviderSwap","stonfiTrade","dedustTrade","assertUnreachable","SwapProvidersContainer","Heading","SwapProviders","ProviderCard","ProviderCardStyled","isActive","ProviderImage","ProviderLabelContainer","ProviderPriceContainer","providersConfig","stonfi","imageUrl","dedust","isRateFetching","isBest","findIndex","providerConfig","useFormatFiat","MainFormWrapper","ChangeIconStyled","props","buttonTertiaryBackground","buttonTertiaryBackgroundHighlighted","iconPrimary","SwapMainForm","useTheme","mutateAsync","encode","active","useWalletContext","config","swapOpaitons","referral","web_swaps_referral_address","useMutation","encodeSwap","senderAddress","rawAddress","slippage","referralAddress","useEncodeSwap","modalParams","setModalParams","setFromAmount","navigate","useNavigate","__","setIsMobileSwapOpen","useSwapMobileNotification","onChangeFields","SwapIcon","result","valid_until","Date","now","messages","bounceable","payload","body","TonTransactionNotification","boc","AppRoute","activity","params","waitInvalidation","ErrorBoundaryContext","createContext","initialState","didCatch","ErrorBoundary","Component","constructor","super","this","resetErrorBoundary","bind","state","getDerivedStateFromError","_this$props$onReset","_this$props","_len","arguments","args","Array","_key","onReset","call","reason","setState","componentDidCatch","info","_this$props$onError","_this$props2","onError","componentDidUpdate","prevProps","prevState","resetKeys","_this$props$onReset2","_this$props3","some","item","Object","is","hasArrayChanged","next","prev","render","fallbackRender","FallbackComponent","fallback","childToRender","createElement","isValidElement","Provider","LabelStyled","fieldBackground","InputStyled","RadioFlatInput","fallbackId","useId","rest","type","htmlFor","SwapSettingsNotification","SwapSettingsNotificationContent","SlippageToleranceTextWrapper","SlippageOptionsContainer","RadioFlatInputStyled","ButtonsContainer","slippagePercentValues","defaultPercent","LoadingContainer","useMutateSwapOptions","client","useQueryClient","newOptions","invalidateQueries","checkedRadioValue","setCheckedRadioValue","useLayoutEffect","includes","checked","onSave","SwapSettingsButton","IconButtonTransparentBackground","SlidersIcon","isRefetchCalled","SwapRefreshButton","refetch","isCounting","setIsCounting","timeutId","RefreshIconAnimated","RefreshIcon","NotificationHeaderContainer","HeaderButtons","HeaderLabel","NotificationHeader","SwapPageWrapper","NotificationContent","SwapMobileNotification","location","role","style","color","message","useAllSwapAssets","customAssets","useUserCustomSwapAssets","swapAllAssets","assets","swapAssets","filter","ca","enabled","swapTokensFilter","walletAssetsData","useAssets","allAssets","tonRate","CryptoCurrency","swapWalletAssets","assetsAmounts","_balance$price","ton","jettons","balances","j","jetton","equals","price","useWalletSwapAssets","_swapAsset$assetAmoun","seeIfValidTonAddress","upperCaseFilter","toUpperCase","isAddress","useJettonList","swapCustomToken","_jb$price","tonAsset","jb","SWAP_CUSTOM_ASSETS","assetsSerialized","tonAssetAddressFromString"],"sourceRoot":""}
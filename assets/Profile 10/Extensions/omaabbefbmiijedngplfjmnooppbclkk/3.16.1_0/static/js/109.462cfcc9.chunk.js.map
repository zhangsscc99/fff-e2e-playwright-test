{"version":3,"file":"static/js/109.462cfcc9.chunk.js","mappings":"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","sources":["../../../packages/uikit/dist/components/PairKeystoneNotification.js","../../../packages/uikit/dist/hooks/navigate.js","../../../packages/core/dist/service/keystone/ur.js","../../../packages/uikit/dist/components/home/AccountView.js","../../../packages/uikit/dist/components/home/qrCodeView.js","../../../packages/uikit/dist/hooks/keystoneScanner.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { KeystoneTonSDK } from '@keystonehq/keystone-sdk/dist/chains/ton';\nimport { constructKeystoneSignRequest } from '@tonkeeper/core/dist/service/keystone/ur';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useAppContext, useWalletContext } from '../hooks/appContext';\nimport { useAppSdk } from '../hooks/appSdk';\nimport { useKeystoneScanner } from '../hooks/keystoneScanner';\nimport { useNavigate } from '../hooks/navigate';\nimport { useTranslation } from '../hooks/translation';\nimport { Notification, NotificationBlock } from './Notification';\nimport { Button } from './fields/Button';\nimport { Background, HeaderBlock } from './home/AccountView';\nimport { KeystoneAnimatedQRCode } from './home/qrCodeView';\nexport const SignerContent = ({ sdk, transactionParams, onClose, handleResult }) => {\n    const wallet = useWalletContext();\n    const { t } = useTranslation();\n    const { extension } = useAppContext();\n    useNavigate(sdk, onClose);\n    const onSubmit = useCallback((ur) => {\n        const signature = new KeystoneTonSDK().parseSignature(ur);\n        handleResult(signature.signature);\n    }, []);\n    const openScanner = useKeystoneScanner(null, onSubmit);\n    const ur = useMemo(() => {\n        return constructKeystoneSignRequest(transactionParams.message, transactionParams.messageType, wallet.active.friendlyAddress, transactionParams.pathInfo);\n    }, [transactionParams]);\n    return (_jsxs(NotificationBlock, { onSubmit: e => {\n            e.preventDefault();\n            e.stopPropagation();\n            openScanner();\n        }, children: [_jsx(HeaderBlock, { title: t('keystone_sign_title'), description: t('keystone_sign_subtitle') }), _jsx(Background, { extension: extension, margin: true, children: _jsx(KeystoneAnimatedQRCode, { data: ur }) }), _jsx(Button, { primary: true, size: \"large\", fullWidth: true, type: \"submit\", children: t('signer_scan_result') })] }));\n};\nconst PairKeystoneNotification = () => {\n    const sdk = useAppSdk();\n    const [transactionParams, setTransactionParams] = useState(undefined);\n    const [requestId, setId] = useState(undefined);\n    const close = useCallback(() => {\n        setTransactionParams(undefined);\n        setId(undefined);\n    }, []);\n    const handleResult = useCallback((result) => {\n        sdk.uiEvents.emit('response', {\n            method: 'response',\n            id: requestId,\n            params: result\n        });\n        close();\n    }, [sdk, requestId, close]);\n    const onCancel = useCallback(() => {\n        if (requestId) {\n            sdk.uiEvents.emit('response', {\n                method: 'response',\n                id: requestId,\n                params: new Error('Cancel auth request')\n            });\n        }\n        close();\n    }, [requestId, sdk, close]);\n    useEffect(() => {\n        const handler = (options) => {\n            setTransactionParams(options.params);\n            setId(options.id);\n        };\n        sdk.uiEvents.on('keystone', handler);\n        return () => {\n            sdk.uiEvents.off('keystone', handler);\n        };\n    }, [sdk]);\n    const Content = useCallback(() => {\n        if (!transactionParams || !requestId)\n            return undefined;\n        return (_jsx(SignerContent, { sdk: sdk, transactionParams: transactionParams, onClose: onCancel, handleResult: handleResult }));\n    }, [sdk, transactionParams, requestId, onCancel, handleResult]);\n    return (_jsx(Notification, { isOpen: transactionParams != null && requestId != null, handleClose: onCancel, children: Content }));\n};\nexport default PairKeystoneNotification;\n","import { useEffect } from 'react';\nexport const useNavigate = (sdk, onNavigate) => {\n    useEffect(() => {\n        sdk.uiEvents.on('navigate', onNavigate);\n        return () => {\n            sdk.uiEvents.off('navigate', onNavigate);\n        };\n    }, [sdk, onNavigate]);\n};\n","import { KeystoneTonSDK } from '@keystonehq/keystone-sdk/dist/chains/ton';\nexport const constructKeystoneSignRequest = (message, messageType, address, pathInfo) => {\n    const tonSdk = new KeystoneTonSDK({ origin: 'TonKeeper' });\n    return tonSdk.generateSignRequest({\n        signData: message.toString('hex'),\n        dataType: messageType === 'transaction' ? 1 : 2,\n        address,\n        xfp: pathInfo?.mfp,\n        derivationPath: pathInfo?.path\n    });\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nimport { formatAddress, formatTransferUrl } from '@tonkeeper/core/dist/utils/common';\nimport { useRef, useState } from 'react';\nimport { QRCode } from 'react-qrcode-logo';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport styled, { css } from 'styled-components';\nimport { useAppContext, useWalletContext } from '../../hooks/appContext';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { useTranslation } from '../../hooks/translation';\nimport { useTronWalletState } from '../../state/tron/tron';\nimport { CopyIcon } from '../Icon';\nimport { FullHeightBlockResponsive, NotificationBlock, NotificationHeader, NotificationHeaderPortal, NotificationTitleRow } from '../Notification';\nimport { Body1, H3 } from '../Text';\nimport { Button } from '../fields/Button';\nimport { Wrapper, childFactoryCreator, duration } from '../transfer/common';\nimport { QrWrapper } from './qrCodeView';\nconst CopyBlock = styled.div `\n    display: flex;\n    align-items: center;\n`;\nexport const Background = styled.div `\n    padding: 20px;\n    width: 100%;\n    box-sizing: border-box;\n    border-radius: 20px;\n    background: white;\n    max-width: 300px;\n\n    ${props => props.margin &&\n    css `\n            margin-bottom: 16px;\n        `}\n\n    ${props => props.extension &&\n    css `\n            @media (max-width: 768px) {\n                max-width: 217px;\n                padding: 16px;\n            }\n        `}\n\n    canvas {\n        width: 100% !important;\n        height: 100% !important;\n        position: absolute;\n    }\n`;\nexport const AddressText = styled(Body1) `\n    display: inline-block;\n    word-break: break-all;\n    color: black;\n    margin: 16px 4px 0;\n    text-align: center;\n    ${props => props.extension &&\n    css `\n            @media (max-width: 768px) {\n                margin-top: 8px;\n            }\n        `}\n`;\nconst TextBlock = styled.div `\n    display: flex;\n    padding-bottom: 16px;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n\n    ${props => props.extension &&\n    css `\n            @media (max-width: 768px) {\n                padding-bottom: 0;\n            }\n        `}\n`;\nconst Title = styled(H3) `\n    text-align: center;\n`;\nconst Description = styled(Body1) `\n    text-align: center;\n    color: ${props => props.theme.textSecondary};\n`;\nconst values = [\n    { name: BLOCKCHAIN_NAME.TON, id: BLOCKCHAIN_NAME.TON },\n    { name: 'TRC20', id: BLOCKCHAIN_NAME.TRON }\n];\nexport const HeaderBlock = ({ title, description }) => {\n    const { extension } = useAppContext();\n    return (_jsxs(TextBlock, { extension: extension, children: [title && _jsx(Title, { children: title }), _jsx(Description, { children: description })] }));\n};\nconst CopyButton = ({ address }) => {\n    const sdk = useAppSdk();\n    const { t } = useTranslation();\n    return (_jsx(CopyBlock, { children: _jsxs(Button, { secondary: true, onClick: e => {\n                e.preventDefault();\n                sdk.copyToClipboard(address, t('address_copied'));\n            }, children: [_jsx(CopyIcon, {}), _jsx(\"span\", { children: t('Copy_address') })] }) }));\n};\nconst ReceiveTon = ({ jetton }) => {\n    const sdk = useAppSdk();\n    const { extension } = useAppContext();\n    const wallet = useWalletContext();\n    const { t } = useTranslation();\n    const address = formatAddress(wallet.active.rawAddress, wallet.network);\n    return (_jsxs(NotificationBlock, { children: [_jsx(HeaderBlock, { title: t('receive_ton'), description: t('receive_ton_description') }), _jsxs(Background, { extension: extension, onClick: e => {\n                    e.preventDefault();\n                    sdk.copyToClipboard(address, t('address_copied'));\n                }, children: [_jsx(QrWrapper, { children: _jsx(QRCode, { size: 400, value: formatTransferUrl({\n                                address,\n                                jetton\n                            }), logoImage: \"https://wallet.tonkeeper.com/img/toncoin.svg\", logoPadding: 8, qrStyle: \"dots\", eyeRadius: {\n                                inner: 2,\n                                outer: 16\n                            } }) }), _jsx(AddressText, { extension: extension, children: address })] }), _jsx(CopyButton, { address: address })] }));\n};\nconst ReceiveTron = ({ tron }) => {\n    const sdk = useAppSdk();\n    const { t } = useTranslation();\n    const { extension } = useAppContext();\n    return (_jsxs(NotificationBlock, { children: [_jsx(HeaderBlock, { title: t('receive_trc20'), description: t('receive_trc20_description') }), _jsxs(Background, { extension: extension, onClick: e => {\n                    e.preventDefault();\n                    sdk.copyToClipboard(tron.walletAddress, t('address_copied'));\n                }, children: [_jsx(QrWrapper, { children: _jsx(QRCode, { size: 400, value: tron.walletAddress, logoImage: \"https://wallet-dev.tonkeeper.com/img/usdt.svg\", logoPadding: 8, qrStyle: \"dots\", eyeRadius: {\n                                inner: 2,\n                                outer: 16\n                            } }) }), _jsx(AddressText, { extension: extension, children: tron.walletAddress })] }), _jsx(CopyButton, { address: tron.walletAddress })] }));\n};\nexport const ReceiveContent = ({ chain = BLOCKCHAIN_NAME.TON, jetton, handleClose }) => {\n    const { standalone } = useAppContext();\n    const [active, setActive] = useState(chain);\n    const { data: tron } = useTronWalletState(active === BLOCKCHAIN_NAME.TRON);\n    const tonRef = useRef(null);\n    const tronRef = useRef(null);\n    const isTon = active === BLOCKCHAIN_NAME.TON || !tron;\n    const nodeRef = isTon ? tonRef : tronRef;\n    const state = isTon ? 'ton' : 'tron';\n    return (_jsxs(FullHeightBlockResponsive, { standalone: standalone, children: [_jsx(NotificationHeaderPortal, { children: _jsx(NotificationHeader, { children: _jsx(NotificationTitleRow, { handleClose: handleClose, center: true }) }) }), _jsx(Wrapper, { standalone: false, extension: true, fullWidth: true, children: _jsx(TransitionGroup, { childFactory: childFactoryCreator(!isTon), children: _jsx(CSSTransition, { nodeRef: nodeRef, classNames: \"right-to-left\", addEndListener: done => {\n                            setTimeout(done, duration);\n                        }, children: _jsx(\"div\", { ref: nodeRef, children: isTon ? _jsx(ReceiveTon, { jetton: jetton }) : _jsx(ReceiveTron, { tron: tron }) }) }, state) }) })] }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport UREncoder from '@ngraveio/bc-ur/dist/urEncoder';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { QRCode } from 'react-qrcode-logo';\nimport { styled } from 'styled-components';\nexport const QrWrapper = styled.div `\n    width: 100%;\n    padding-bottom: 100%;\n    position: relative;\n`;\nfunction chunks(arr, len) {\n    var chunks = [], i = 0, n = arr.length;\n    while (i < n) {\n        chunks.push(arr.slice(i, (i += len)));\n    }\n    return chunks;\n}\nexport const AnimatedQrCode = React.memo(({ message }) => {\n    const [value, setValue] = useState('');\n    useEffect(() => {\n        let arr = [...message];\n        const items = chunks(arr, 256);\n        if (items.length === 1) {\n            setValue(message);\n        }\n        else {\n            let count = 0;\n            setInterval(() => {\n                let current = items[count];\n                setValue(current.join(''));\n                // increment our counter\n                count++;\n                // reset counter if we reach end of array\n                if (count === items.length) {\n                    count = 0;\n                }\n            }, 100);\n        }\n    }, [message]);\n    return (_jsx(QrWrapper, { children: _jsx(QRCode, { size: 400, value: value, qrStyle: \"dots\", eyeRadius: {\n                inner: 2,\n                outer: 16\n            } }) }));\n});\nexport const KeystoneAnimatedQRCode = ({ data }) => {\n    const urEncoder = useMemo(() => {\n        return new UREncoder(data);\n    }, []);\n    const [value, setValue] = useState(urEncoder.nextPart());\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setValue(urEncoder.nextPart().toUpperCase());\n        }, 200);\n        return () => {\n            clearInterval(interval);\n        };\n    }, []);\n    return (_jsx(QrWrapper, { children: _jsx(QRCode, { size: 400, value: value, qrStyle: \"dots\", eyeRadius: {\n                inner: 2,\n                outer: 16\n            } }) }));\n};\n","import URDecoder from '@ngraveio/bc-ur/dist/urDecoder';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useAppSdk } from './appSdk';\nexport const useKeystoneScanner = (initScan, onSubmit) => {\n    const sdk = useAppSdk();\n    const [scanId, setScanId] = useState(initScan);\n    const urDecoder = useMemo(() => new URDecoder(), []);\n    const requestQrCode = useCallback(() => {\n        if (scanId) {\n            sdk.uiEvents.emit('scan', {\n                method: 'scan',\n                id: scanId,\n                params: undefined\n            });\n        }\n    }, [sdk, scanId]);\n    useEffect(() => {\n        requestQrCode();\n    }, [requestQrCode]);\n    useEffect(() => {\n        const handler = (options) => {\n            if (options.id === scanId) {\n                // keystoneSdk.\n                urDecoder.receivePart(options.params);\n                if (urDecoder.isComplete()) {\n                    onSubmit(urDecoder.resultUR());\n                }\n                else {\n                    requestQrCode();\n                }\n            }\n        };\n        sdk.uiEvents.on('response', handler);\n        return () => {\n            sdk.uiEvents.off('response', handler);\n        };\n    }, [sdk, scanId, onSubmit, requestQrCode]);\n    return useCallback(() => {\n        setScanId(Date.now());\n    }, [setScanId]);\n};\n"],"names":["SignerContent","_ref","sdk","transactionParams","onClose","handleResult","wallet","useWalletContext","t","useTranslation","extension","useAppContext","useNavigate","onNavigate","useEffect","uiEvents","on","off","onSubmit","useCallback","ur","signature","KeystoneTonSDK","parseSignature","openScanner","useKeystoneScanner","useMemo","message","messageType","address","active","friendlyAddress","pathInfo","origin","generateSignRequest","signData","toString","dataType","xfp","mfp","derivationPath","path","constructKeystoneSignRequest","_jsxs","NotificationBlock","e","preventDefault","stopPropagation","children","_jsx","HeaderBlock","title","description","Background","margin","KeystoneAnimatedQRCode","data","Button","primary","size","fullWidth","type","PairKeystoneNotification","useAppSdk","setTransactionParams","useState","undefined","requestId","setId","close","result","emit","method","id","params","onCancel","Error","handler","options","Content","Notification","isOpen","handleClose","CopyBlock","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","props","css","_templateObject3","_templateObject4","AddressText","Body1","_templateObject5","_templateObject6","TextBlock","_templateObject7","_templateObject8","Title","H3","_templateObject9","Description","_templateObject10","theme","textSecondary","BLOCKCHAIN_NAME","TON","TRON","CopyButton","_ref2","secondary","onClick","copyToClipboard","CopyIcon","ReceiveTon","_ref3","jetton","formatAddress","rawAddress","network","QrWrapper","QRCode","value","formatTransferUrl","logoImage","logoPadding","qrStyle","eyeRadius","inner","outer","ReceiveTron","_ref4","tron","walletAddress","ReceiveContent","_ref5","chain","standalone","setActive","useTronWalletState","tonRef","useRef","tronRef","isTon","nodeRef","state","FullHeightBlockResponsive","NotificationHeaderPortal","NotificationHeader","NotificationTitleRow","center","Wrapper","TransitionGroup","childFactory","childFactoryCreator","CSSTransition","classNames","addEndListener","done","setTimeout","duration","ref","React","setValue","items","arr","len","chunks","i","n","length","push","slice","count","setInterval","current","join","urEncoder","UREncoder","nextPart","interval","toUpperCase","clearInterval","initScan","scanId","setScanId","urDecoder","URDecoder","requestQrCode","receivePart","isComplete","resultUR","Date","now"],"sourceRoot":""}
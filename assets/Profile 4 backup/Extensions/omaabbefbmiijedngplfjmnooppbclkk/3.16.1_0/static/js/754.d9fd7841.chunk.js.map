{"version":3,"file":"static/js/754.d9fd7841.chunk.js","mappings":"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","sources":["../../../packages/uikit/dist/components/transfer/Confirm.js","../../../packages/uikit/dist/components/transfer/ConfirmView.js","../../../packages/uikit/dist/components/fields/InputWithScanner.js","../../../packages/uikit/dist/components/transfer/ShowAddress.js","../../../packages/uikit/dist/components/transfer/SuggestionList.js","../../../packages/uikit/dist/components/transfer/RecipientView.js","../../../packages/uikit/dist/hooks/textWidth.js","../../../packages/uikit/dist/libs/errors/UserCancelledError.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Body1, H3 } from '../Text';\nexport const Info = styled.div `\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 1rem;\n`;\nexport const Image = styled.img `\n    width: 96px;\n    height: 96px;\n    border-radius: ${props => (props.full ? props.theme.cornerFull : props.theme.cornerMedium)};\n`;\nexport const ImageMock = styled.div `\n    width: 96px;\n    height: 96px;\n    border-radius: ${props => (props.full ? props.theme.cornerFull : props.theme.cornerMedium)};\n    background: ${props => props.theme.backgroundContent};\n`;\nexport const SendingTitle = styled(Body1) `\n    user-select: none;\n    color: ${props => props.theme.textSecondary};\n    margin: 20px 0 4px;\n`;\nexport const Title = styled(H3) `\n    user-select: none;\n    text-align: center;\n`;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useQueryClient } from '@tanstack/react-query';\nimport { TON_ASSET, TRON_USDT_ASSET } from '@tonkeeper/core/dist/entries/crypto/asset/constants';\nimport { isTonRecipientData } from '@tonkeeper/core/dist/entries/send';\nimport { Children, createContext, isValidElement, useContext, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { formatFiatCurrency } from '../../hooks/balance';\nimport { useTranslation } from '../../hooks/translation';\nimport { useAssetAmountFiatEquivalent, useAssetImage } from '../../state/asset';\nimport { CheckmarkCircleIcon, ChevronLeftIcon, ExclamationMarkCircleIcon } from '../Icon';\nimport { Gap } from '../Layout';\nimport { ListBlock } from '../List';\nimport { FullHeightBlockResponsive, NotificationCancelButton, NotificationTitleBlock } from '../Notification';\nimport { Label2 } from '../Text';\nimport { TransferComment } from '../activity/ActivityDetailsLayout';\nimport { ActionFeeDetailsUniversal } from '../activity/NotificationCommon';\nimport { RoundedButton } from '../fields/RoundedButton';\nimport { Image, ImageMock, Info, SendingTitle, Title } from './Confirm';\nimport { AmountListItem, RecipientListItem } from './ConfirmListItem';\nimport { ButtonBlock, ConfirmMainButton, ResultButton } from './common';\nimport { UserCancelledError } from '../../libs/errors/UserCancelledError';\nimport { TxConfirmationCustomError } from '../../libs/errors/TxConfirmationCustomError';\nexport const ConfirmViewContext = createContext({});\nexport function useConfirmViewContext() {\n    return useContext(ConfirmViewContext);\n}\nexport function ConfirmView({ children, estimation, recipient, onBack, onClose, assetAmount, fitContent, ...mutation }) {\n    const { mutateAsync, isLoading, reset } = mutation;\n    const client = useQueryClient();\n    const error = mutation.error || estimation.error;\n    let titleBlock = (_jsx(ConfirmViewTitleSlot, { children: _jsx(ConfirmViewTitle, {}) }));\n    let heading = (_jsx(ConfirmViewHeadingSlot, { children: _jsx(ConfirmViewHeading, {}) }));\n    let details = (_jsxs(ConfirmViewDetailsSlot, { children: [_jsx(ConfirmViewDetailsRecipient, {}), _jsx(ConfirmViewDetailsAmount, {}), _jsx(ConfirmViewDetailsFee, {}), _jsx(ConfirmViewDetailsComment, {})] }));\n    let buttons = (_jsx(ConfirmViewButtonsSlot, { children: _jsx(ConfirmViewButtons, { MainButton: ConfirmMainButton }) }));\n    Children.map(children, child => {\n        if (isValidElement(child)) {\n            switch (child.type) {\n                case ConfirmViewTitleSlot:\n                    titleBlock = child;\n                    return;\n                case ConfirmViewHeadingSlot:\n                    heading = child;\n                    return;\n                case ConfirmViewDetailsSlot:\n                    details = child;\n                    return;\n                case ConfirmViewButtonsSlot:\n                    buttons = child;\n                    return;\n            }\n        }\n    });\n    const [done, setDone] = useState(false);\n    const { standalone } = useAppContext();\n    const handleSubmit = async () => {\n        if (isLoading)\n            return false;\n        reset();\n        try {\n            const isDone = await mutateAsync();\n            if (isDone) {\n                setDone(true);\n                setTimeout(() => {\n                    setTimeout(() => client.invalidateQueries(), 100);\n                    onClose(true);\n                }, 2000);\n            }\n            return isDone;\n        }\n        catch (e) {\n            console.error(e);\n            return false;\n        }\n    };\n    const onSubmit = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        handleSubmit();\n    };\n    return (_jsx(ConfirmViewContext.Provider, { value: {\n            recipient,\n            assetAmount,\n            estimation,\n            formState: { done, isLoading, error },\n            onClose: () => onClose(),\n            onBack,\n            handleSubmit\n        }, children: _jsxs(FullHeightBlockResponsive, { onSubmit: onSubmit, standalone: standalone, fitContent: fitContent, children: [titleBlock, heading, _jsx(ListBlock, { margin: false, fullWidth: true, children: details }), _jsx(Gap, {}), _jsx(ButtonBlock, { children: buttons })] }) }));\n}\nconst ConfirmViewHeadingStyled = styled.div `\n    margin-bottom: 1rem;\n`;\nexport const ConfirmViewTitleSlot = ({ children }) => _jsx(_Fragment, { children: children });\nexport const ConfirmViewTitle = () => {\n    const { onClose, onBack } = useConfirmViewContext();\n    return (_jsxs(NotificationTitleBlock, { children: [onBack ? (_jsx(RoundedButton, { onClick: onBack, children: _jsx(ChevronLeftIcon, {}) })) : (_jsx(\"div\", {})), _jsx(NotificationCancelButton, { handleClose: () => onClose() })] }));\n};\nexport const ConfirmViewHeadingSlot = ({ children, className }) => _jsx(ConfirmViewHeadingStyled, { className: className, children: children });\nexport const ConfirmViewHeading = ({ className, title }) => {\n    const { t } = useTranslation();\n    const { recipient, assetAmount } = useConfirmViewContext();\n    const image = useAssetImage(assetAmount.asset);\n    const fallbackTitles = {\n        [TON_ASSET.id]: t('txActions_signRaw_types_tonTransfer'),\n        [TRON_USDT_ASSET.id]: t('txActions_USDT_transfer')\n    };\n    title ||= isTonRecipientData(recipient)\n        ? recipient.toAccount.name\n        : fallbackTitles[assetAmount.asset.id] || t('txActions_signRaw_types_jettonTransfer');\n    const icon = isTonRecipientData(recipient) ? recipient.toAccount.icon || image : image;\n    return (_jsxs(Info, { className: className, children: [icon ? _jsx(Image, { full: true, src: image }) : _jsx(ImageMock, { full: true }), _jsx(SendingTitle, { children: t('confirm_sending_title') }), _jsx(Title, { children: title })] }));\n};\nexport const ConfirmViewDetailsSlot = ({ children }) => _jsx(_Fragment, { children: children });\nexport const ConfirmViewDetailsRecipient = () => {\n    const { recipient } = useConfirmViewContext();\n    return _jsx(RecipientListItem, { recipient: recipient });\n};\nexport const ConfirmViewDetailsAmount = () => {\n    const { fiat } = useAppContext();\n    const { assetAmount } = useConfirmViewContext();\n    const { data: fiatAmountBN } = useAssetAmountFiatEquivalent(assetAmount);\n    const fiatAmount = fiatAmountBN ? formatFiatCurrency(fiat, fiatAmountBN) : undefined;\n    return (_jsx(AmountListItem, { coinAmount: assetAmount.stringAssetRelativeAmount, fiatAmount: fiatAmount }));\n};\nexport const ConfirmViewDetailsFee = () => {\n    const { estimation } = useConfirmViewContext();\n    return (_jsx(ActionFeeDetailsUniversal, { fee: estimation.isFetching ? undefined : estimation.data?.fee }));\n};\nexport const ConfirmViewDetailsComment = () => {\n    const { recipient } = useConfirmViewContext();\n    if (!isTonRecipientData(recipient)) {\n        return null;\n    }\n    return _jsx(TransferComment, { comment: recipient.comment });\n};\nconst ExclamationMarkCircleIconStyled = styled(ExclamationMarkCircleIcon) `\n    min-width: 32px;\n    min-height: 32px;\n`;\nconst ErrorLabelStyled = styled(Label2) `\n    text-align: center;\n`;\nconst ResultErrorButtonStyled = styled(ResultButton) `\n    height: unset;\n    min-height: 56px;\n`;\nexport const ConfirmViewButtonsSlot = ({ children }) => _jsx(_Fragment, { children: children });\nexport const ConfirmViewButtons = ({ MainButton }) => {\n    const sdk = useAppSdk();\n    const { formState: { done, error, isLoading }, estimation: { isFetching: estimationLoading }, onClose, handleSubmit } = useConfirmViewContext();\n    const { t } = useTranslation();\n    const isValid = !isLoading && !estimationLoading;\n    useEffect(() => {\n        if (done) {\n            sdk.hapticNotification('success');\n        }\n    }, [done]);\n    useEffect(() => {\n        if (error) {\n            sdk.hapticNotification('error');\n        }\n    }, [error]);\n    if (done) {\n        return (_jsxs(ResultButton, { done: true, children: [_jsx(CheckmarkCircleIcon, {}), _jsx(Label2, { children: t('send_screen_steps_done_done_label') })] }));\n    }\n    if (error && !(error instanceof UserCancelledError)) {\n        return (_jsxs(ResultErrorButtonStyled, { children: [_jsx(ExclamationMarkCircleIconStyled, {}), _jsx(ErrorLabelStyled, { children: error instanceof TxConfirmationCustomError\n                        ? error.message\n                        : t('send_publish_tx_error') })] }));\n    }\n    return (_jsx(MainButton, { isDisabled: !isValid, isLoading: isLoading, onClick: handleSubmit, onClose: onClose }));\n};\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { ScanIcon, XmarkIcon } from '../Icon';\nimport { InputBlock, Label } from './Input';\nimport { TextareaAutosize } from './TextareaAutosize';\nconst ClearBlock = styled.div `\n    position: absolute;\n    right: 1rem;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    color: ${props => props.theme.textSecondary};\n\n    &:hover {\n        color: ${props => props.theme.textTertiary};\n    }\n`;\nconst ScanBlock = styled.div `\n    position: absolute;\n    right: 1rem;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n\n    color: ${props => props.theme.accentBlue};\n`;\nexport const InputWithScanner = React.forwardRef(({ value, onChange, isValid = true, label, disabled, onScan, onSubmit }, ref) => {\n    const [focus, setFocus] = useState(false);\n    const [scanId, setScanId] = useState(undefined);\n    const sdk = useAppSdk();\n    const { hideQrScanner } = useAppContext();\n    const onClear = e => {\n        e.stopPropagation();\n        e.preventDefault();\n        if (disabled)\n            return;\n        onChange?.('');\n    };\n    const onClick = e => {\n        e.stopPropagation();\n        e.preventDefault();\n        if (disabled)\n            return;\n        const id = Date.now();\n        sdk.uiEvents.emit('scan', {\n            method: 'scan',\n            id: id,\n            params: undefined\n        });\n        setScanId(id);\n    };\n    useEffect(() => {\n        const handler = (options) => {\n            if (options.id === scanId) {\n                onScan(options.params);\n            }\n        };\n        sdk.uiEvents.on('response', handler);\n        return () => {\n            sdk.uiEvents.off('response', handler);\n        };\n    }, [sdk, scanId, onScan]);\n    return (_jsxs(InputBlock, { focus: focus, valid: isValid, scanner: true, children: [_jsx(TextareaAutosize, { onSubmit: onSubmit, ref: ref, disabled: disabled, value: value, onChange: e => onChange && onChange(e.target.value), onFocus: () => setFocus(true), onBlur: () => setFocus(false) }), label && _jsx(Label, { active: value !== '', children: label }), value === '' ? (hideQrScanner === true ? (_jsx(_Fragment, {})) : (_jsx(ScanBlock, { onClick: onClick, children: _jsx(ScanIcon, {}) }))) : (_jsx(ClearBlock, { onClick: onClear, children: _jsx(XmarkIcon, {}) }))] }));\n});\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { formatAddress, toShortValue } from '@tonkeeper/core/dist/utils/common';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useWalletContext } from '../../hooks/appContext';\nimport useTextWidth from '../../hooks/textWidth';\nimport { Body1 } from '../Text';\nexport const useShowAddress = (ref, value, toAccount) => {\n    const wallet = useWalletContext();\n    const address = toAccount?.address ?? undefined;\n    const [showAddress, setShowAddress] = useState(undefined);\n    const inputTextWidth = useTextWidth({\n        text: value,\n        font: '16px sans-serif'\n    });\n    const addressTextWidth = useTextWidth({\n        text: address ? toShortValue(address) : undefined,\n        font: '16px sans-serif'\n    });\n    useEffect(() => {\n        if (ref.current &&\n            toAccount &&\n            !isNaN(inputTextWidth) &&\n            !isNaN(addressTextWidth) &&\n            ref.current.clientWidth - 16 * 3 - inputTextWidth - addressTextWidth > 0) {\n            setShowAddress({\n                inputTextWidth,\n                addressTextWidth,\n                value: toShortValue(formatAddress(toAccount.address, wallet.network))\n            });\n        }\n        else {\n            setShowAddress(undefined);\n        }\n    }, [ref.current, toAccount, inputTextWidth, addressTextWidth]);\n    return showAddress;\n};\nconst ShowAddressBlock = styled.div `\n    position: relative;\n    width: 100%;\n`;\nconst ShowAddressLabel = styled(Body1) `\n    position: absolute;\n    bottom: 0;\n    line-height: 46px;\n    left: ${props => Math.ceil(props.inputTextWidth) + 46}px;\n    color: ${props => props.theme.textSecondary};\n    user-select: none;\n`;\nexport const ShowAddress = ({ value, children }) => {\n    return (_jsxs(ShowAddressBlock, { children: [children, value && (_jsx(ShowAddressLabel, { inputTextWidth: value.inputTextWidth, children: value.value }))] }));\n};\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { intlLocale } from '@tonkeeper/core/dist/entries/language';\nimport { deleteFavoriteSuggestion, getSuggestionsList, hideSuggestions } from '@tonkeeper/core/dist/service/suggestionService';\nimport { toShortValue } from '@tonkeeper/core/dist/utils/common';\nimport styled from 'styled-components';\nimport { useAppContext, useWalletContext } from '../../hooks/appContext';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { useTranslation } from '../../hooks/translation';\nimport { QueryKey } from '../../libs/queryKey';\nimport { DropDown } from '../DropDown';\nimport { EllipsisIcon, StarIcon } from '../Icon';\nimport { ColumnText } from '../Layout';\nimport { ListBlock, ListItem, ListItemPayload } from '../List';\nimport { SkeletonList } from '../Skeleton';\nimport { Label1 } from '../Text';\nimport { useSuggestionAddress } from './SuggestionAddress';\nconst Label = styled(Label1) `\n    user-select: none;\n    width: 100%;\n    margin-top: 12px;\n    margin-bottom: -4px;\n`;\nconst useLatestSuggestion = (acceptBlockchains) => {\n    const sdk = useAppSdk();\n    const { api } = useAppContext();\n    const wallet = useWalletContext();\n    return useQuery([wallet.active.rawAddress, QueryKey.activity, 'suggestions', acceptBlockchains], () => getSuggestionsList(sdk, api, wallet, acceptBlockchains), { keepPreviousData: true });\n};\nconst Icon = styled.span `\n    display: flex;\n    color: ${props => props.theme.iconSecondary};\n\n    padding: 8px;\n    margin: -8px;\n`;\nconst IconBlue = styled.span `\n    display: inline-flex;\n    color: ${props => props.theme.accentBlue};\n`;\nconst getLatestDate = (language, timestamp) => {\n    return new Intl.DateTimeFormat(intlLocale(language), {\n        day: 'numeric',\n        month: 'long'\n    }).format(new Date(timestamp));\n};\nconst useDeleteFavorite = (item) => {\n    const sdk = useAppSdk();\n    const wallet = useWalletContext();\n    const queryClient = useQueryClient();\n    return useMutation(async () => {\n        await deleteFavoriteSuggestion(sdk.storage, wallet.publicKey, item.address);\n        await queryClient.invalidateQueries([\n            wallet.active.rawAddress,\n            QueryKey.activity,\n            'suggestions'\n        ]);\n    });\n};\nconst FavoriteItem = ({ item, onSelect, onEdit }) => {\n    const sdk = useAppSdk();\n    const { mutateAsync } = useDeleteFavorite(item);\n    const { t } = useTranslation();\n    const address = useSuggestionAddress(item);\n    return (_jsx(ListItem, { onClick: () => onSelect(item), children: _jsxs(ListItemPayload, { children: [_jsx(ColumnText, { noWrap: true, text: _jsxs(_Fragment, { children: [item.name, ' ', _jsx(IconBlue, { children: _jsx(StarIcon, {}) })] }), secondary: toShortValue(address) }), _jsx(DropDown, { payload: onClose => (_jsxs(ListBlock, { margin: false, dropDown: true, children: [_jsx(ListItem, { dropDown: true, onClick: e => {\n                                    e.stopPropagation();\n                                    onEdit(item);\n                                    onClose();\n                                }, children: _jsx(ListItemPayload, { children: _jsx(Label1, { children: t('add_edit_favorite_edit_title') }) }) }), _jsx(ListItem, { dropDown: true, onClick: e => {\n                                    e.stopPropagation();\n                                    sdk.confirm(t('send_screen_steps_address_delete_alert_text').replace('%{name}', item.name))\n                                        .then(value => {\n                                        if (value) {\n                                            return mutateAsync();\n                                        }\n                                    })\n                                        .finally(() => {\n                                        onClose();\n                                    });\n                                }, children: _jsx(ListItemPayload, { children: _jsx(Label1, { children: t('add_edit_favorite_delete') }) }) })] })), children: _jsx(Icon, { children: _jsx(EllipsisIcon, {}) }) })] }) }, item.address));\n};\nconst useHideSuggestion = (item) => {\n    const sdk = useAppSdk();\n    const wallet = useWalletContext();\n    const queryClient = useQueryClient();\n    return useMutation(async () => {\n        await hideSuggestions(sdk.storage, wallet.publicKey, item.address);\n        await queryClient.invalidateQueries([\n            wallet.active.rawAddress,\n            QueryKey.activity,\n            'suggestions'\n        ]);\n    });\n};\nconst LatestItem = ({ item, onSelect, onAddFavorite }) => {\n    const { mutateAsync } = useHideSuggestion(item);\n    const { t, i18n } = useTranslation();\n    const address = useSuggestionAddress(item);\n    return (_jsx(ListItem, { onClick: () => onSelect(item), children: _jsxs(ListItemPayload, { children: [_jsx(ColumnText, { text: toShortValue(address), secondary: getLatestDate(intlLocale(i18n.language), item.timestamp) }), _jsx(DropDown, { payload: onClose => (_jsxs(ListBlock, { margin: false, dropDown: true, children: [_jsx(ListItem, { dropDown: true, onClick: e => {\n                                    e.stopPropagation();\n                                    onAddFavorite(item);\n                                    onClose();\n                                }, children: _jsx(ListItemPayload, { children: _jsx(Label1, { children: t('send_screen_steps_address_suggest_actions_add') }) }) }), _jsx(ListItem, { dropDown: true, onClick: e => {\n                                    e.stopPropagation();\n                                    mutateAsync().finally(() => onClose());\n                                }, children: _jsx(ListItemPayload, { children: _jsx(Label1, { children: t('send_screen_steps_address_suggest_actions_hide') }) }) })] })), children: _jsx(Icon, { children: _jsx(EllipsisIcon, {}) }) })] }) }, item.address));\n};\nexport const SuggestionList = ({ onSelect, disabled, acceptBlockchains }) => {\n    const sdk = useAppSdk();\n    const { t } = useTranslation();\n    const { data } = useLatestSuggestion(acceptBlockchains);\n    if (!data) {\n        return (_jsxs(_Fragment, { children: [_jsx(Label, { children: t('send_screen_steps_address_suggests_label') }), _jsx(SkeletonList, { size: 4, margin: false, fullWidth: true })] }));\n    }\n    return (_jsxs(_Fragment, { children: [data.length > 0 ? (_jsx(Label, { children: t('send_screen_steps_address_suggests_label') })) : undefined, _jsx(ListBlock, { margin: false, fullWidth: true, noUserSelect: true, children: data.map(item => {\n                    if (item.isFavorite) {\n                        return (_jsx(FavoriteItem, { item: item, onSelect: value => !disabled && onSelect(value), onEdit: value => {\n                                if (!disabled) {\n                                    sdk.uiEvents.emit('editSuggestion', {\n                                        method: 'editSuggestion',\n                                        params: value\n                                    });\n                                }\n                            } }, item.address));\n                    }\n                    return (_jsx(LatestItem, { item: item, onSelect: value => !disabled && onSelect(value), onAddFavorite: value => {\n                            if (!disabled) {\n                                sdk.uiEvents.emit('addSuggestion', {\n                                    method: 'addSuggestion',\n                                    params: value\n                                });\n                            }\n                        } }, item.address));\n                }) })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useMutation, useQuery } from '@tanstack/react-query';\nimport { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nimport { AccountsApi, DNSApi } from '@tonkeeper/core/dist/tonApiV2';\nimport { debounce, formatAddress, seeIfValidTonAddress, seeIfValidTronAddress } from '@tonkeeper/core/dist/utils/common';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useAppContext, useWalletContext } from '../../hooks/appContext';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { openIosKeyboard } from '../../hooks/ios';\nimport { useTranslation } from '../../hooks/translation';\nimport { scrollToTop } from '../../libs/common';\nimport { QueryKey } from '../../libs/queryKey';\nimport { Gap } from '../Layout';\nimport { FullHeightBlock, NotificationFooter, NotificationFooterPortal, NotificationHeader, NotificationHeaderPortal } from '../Notification';\nimport { Body2 } from '../Text';\nimport { TextArea } from '../fields/Input';\nimport { InputWithScanner } from '../fields/InputWithScanner';\nimport { ShowAddress, useShowAddress } from './ShowAddress';\nimport { SuggestionList } from './SuggestionList';\nimport { MainButton } from './common';\nimport { useIsFullWidthMode } from '../../hooks/useIsFullWidthMode';\nimport { useIsActiveWalletLedger } from '../../state/ledger';\nconst Warning = styled(Body2) `\n    user-select: none;\n    display: block;\n    width: 100%;\n    margin-top: -4px;\n    color: ${props => props.theme.accentOrange};\n`;\nexport const useGetToAccount = () => {\n    const { api } = useAppContext();\n    return useMutation(recipient => {\n        const accountId = 'dns' in recipient ? recipient.dns.address : recipient.address;\n        return new AccountsApi(api.tonApiV2).getAccount({ accountId });\n    });\n};\nconst useToAccount = (isValid, recipient) => {\n    const { api } = useAppContext();\n    const accountId = 'dns' in recipient ? recipient.dns.address : recipient.address;\n    return useQuery([QueryKey.account, accountId], () => new AccountsApi(api.tonApiV2).getAccount({ accountId }), { enabled: isValid });\n};\nexport const seeIfInvalidDns = (value) => {\n    return (value.length < 8 ||\n        value.length === 48 ||\n        value.length === 52 ||\n        seeIfValidTonAddress(value) ||\n        seeIfValidTronAddress(value));\n};\nconst useDnsWallet = (value) => {\n    const { api } = useAppContext();\n    const [name, setName] = useState('');\n    const update = useMemo(() => {\n        return debounce(v => setName(v), 400);\n    }, [setName]);\n    update(value);\n    return useQuery([QueryKey.dns, value, name], async () => {\n        if (value !== name) {\n            return null;\n        }\n        let dns = name.trim();\n        if (seeIfInvalidDns(dns)) {\n            return null;\n        }\n        dns = dns.toString().toLowerCase();\n        const result = await new DNSApi(api.tonApiV2).dnsResolve({ domainName: dns });\n        if (!result.wallet) {\n            return null;\n        }\n        return result.wallet;\n    }, {\n        retry: 0,\n        keepPreviousData: false\n    });\n};\nconst seeIfValidTonRecipient = (recipient) => {\n    return 'dns' in recipient || seeIfValidTonAddress(recipient.address);\n};\nconst defaultRecipient = { address: '' };\nexport const RecipientView = ({ data, setRecipient, keyboard, onScan, isExternalLoading, acceptBlockchains, HeaderBlock, fitContent, isAnimationProcess }) => {\n    const sdk = useAppSdk();\n    const [submitted, setSubmit] = useState(false);\n    const wallet = useWalletContext();\n    const { t } = useTranslation();\n    const { standalone, ios } = useAppContext();\n    const ref = useRef(null);\n    const isFullWidth = useIsFullWidthMode();\n    const shouldHideHeaderAndFooter = isFullWidth && isAnimationProcess;\n    const [comment, setComment] = useState(data && 'comment' in data ? data.comment : '');\n    const [recipient, setAddress] = useState(data?.address ?? defaultRecipient);\n    const { data: dnsWallet, isFetching: isDnsFetching } = useDnsWallet(recipient.address);\n    useEffect(() => {\n        const timer = setTimeout(() => scrollToTop(), 300);\n        return () => {\n            clearTimeout(timer);\n        };\n    }, []);\n    useEffect(() => {\n        if (dnsWallet) {\n            setAddress(r => ({\n                address: r.address,\n                dns: dnsWallet,\n                dnsName: r.address.toLowerCase()\n            }));\n        }\n        if (dnsWallet == null) {\n            setAddress(r => {\n                if ('dns' in r) {\n                    return { address: r.address };\n                }\n                return r;\n            });\n        }\n    }, [setAddress, dnsWallet]);\n    const isValidForBlockchain = useMemo(() => {\n        if (acceptBlockchains && acceptBlockchains.length === 1) {\n            return acceptBlockchains[0];\n        }\n        let validForBlockchain;\n        if (seeIfValidTonRecipient(recipient)) {\n            validForBlockchain = BLOCKCHAIN_NAME.TON;\n        }\n        else if (seeIfValidTronAddress(recipient.address)) {\n            validForBlockchain = BLOCKCHAIN_NAME.TRON;\n        }\n        if (!acceptBlockchains ||\n            (validForBlockchain && acceptBlockchains.includes(validForBlockchain))) {\n            return validForBlockchain;\n        }\n        return null;\n    }, [recipient]);\n    const isValidAddress = useMemo(() => {\n        if (acceptBlockchains && acceptBlockchains.length === 1) {\n            return acceptBlockchains[0] === BLOCKCHAIN_NAME.TON\n                ? seeIfValidTonRecipient(recipient)\n                : seeIfValidTronAddress(recipient.address);\n        }\n        else {\n            return true;\n        }\n    }, [acceptBlockchains, recipient]);\n    const { data: toAccount, isFetching: isAccountFetching } = useToAccount(isValidForBlockchain === BLOCKCHAIN_NAME.TON && seeIfValidTonRecipient(recipient), recipient);\n    const isFetching = isAccountFetching || isExternalLoading;\n    const isLedger = useIsActiveWalletLedger();\n    const isMemoValid = useMemo(() => {\n        if (isLedger) {\n            // only ascii symbols are supported by ledger\n            return /^[ -~]*$/gm.test(comment);\n        }\n        if (!toAccount)\n            return true;\n        if (toAccount.memoRequired) {\n            return comment.length > 0;\n        }\n        return true;\n    }, [toAccount, comment, isLedger]);\n    useEffect(() => {\n        if (sdk.isIOs()) {\n            return;\n        }\n        if (ref.current) {\n            ref.current.focus();\n        }\n    }, [ref.current]);\n    const formatted = useMemo(() => {\n        if ('isFavorite' in recipient) {\n            if (recipient.blockchain === BLOCKCHAIN_NAME.TRON) {\n                return recipient.address;\n            }\n            else {\n                return formatAddress(recipient.address, wallet.network);\n            }\n        }\n        if ('dnsName' in recipient && typeof recipient.dnsName === 'string') {\n            return recipient.dnsName;\n        }\n        return recipient.address;\n    }, [recipient]);\n    const showAddress = useShowAddress(ref, formatted, toAccount);\n    const handleSubmit = () => {\n        setSubmit(true);\n        let isValid;\n        switch (isValidForBlockchain) {\n            case BLOCKCHAIN_NAME.TON:\n                isValid = isMemoValid && toAccount;\n                break;\n            case BLOCKCHAIN_NAME.TRON:\n                isValid = seeIfValidTronAddress(recipient.address);\n        }\n        if (isValid) {\n            if (ios && keyboard)\n                openIosKeyboard(keyboard);\n            if (isValidForBlockchain === BLOCKCHAIN_NAME.TON) {\n                setRecipient({\n                    address: { ...recipient, blockchain: BLOCKCHAIN_NAME.TON },\n                    toAccount: toAccount,\n                    comment,\n                    done: true\n                });\n            }\n            else {\n                setRecipient({\n                    address: { ...recipient, blockchain: BLOCKCHAIN_NAME.TRON },\n                    done: true\n                });\n            }\n        }\n        else {\n            sdk.hapticNotification('error');\n        }\n    };\n    const onSubmit = e => {\n        e.stopPropagation();\n        e.preventDefault();\n        handleSubmit();\n    };\n    const onSelect = async (item) => {\n        if (item.blockchain === BLOCKCHAIN_NAME.TON) {\n            item.address = formatAddress(item.address, wallet.network);\n        }\n        setAddress(item);\n        ref.current?.focus();\n        // if (ios && keyboard) openIosKeyboard(keyboard);\n        // if (seeIfValidTronAddress(item.address)) {\n        //     setRecipient({\n        //         address: { ...item, blockchain: BLOCKCHAIN_NAME.TRON },\n        //         done: false\n        //     });\n        // } else {\n        //     const to = await getAccountAsync(item);\n        //     if (to.memoRequired) return;\n        //     setRecipient({\n        //         address: { ...item, blockchain: BLOCKCHAIN_NAME.TON },\n        //         toAccount: to,\n        //         comment,\n        //         done: false\n        //     });\n        // }\n    };\n    return (_jsxs(FullHeightBlock, { onSubmit: onSubmit, standalone: standalone, fitContent: fitContent, noPadding: true, children: [!shouldHideHeaderAndFooter && (_jsx(NotificationHeaderPortal, { children: _jsx(NotificationHeader, { children: _jsx(HeaderBlock, {}) }) })), _jsx(ShowAddress, { value: showAddress, children: _jsx(InputWithScanner, { onSubmit: handleSubmit, ref: ref, value: formatted, onScan: onScan, onChange: address => setAddress({ address }), label: t('transaction_recipient_address'), isValid: !submitted || (!!isValidForBlockchain && isValidAddress), disabled: isExternalLoading }) }), isValidForBlockchain !== BLOCKCHAIN_NAME.TRON && (_jsx(TextArea, { onSubmit: handleSubmit, value: comment, onChange: setComment, label: t('txActions_signRaw_comment'), isValid: !submitted || isMemoValid, disabled: isExternalLoading })), toAccount && toAccount.memoRequired && (_jsx(Warning, { children: t('send_screen_steps_comfirm_comment_required_text') })), _jsx(SuggestionList, { onSelect: onSelect, disabled: isExternalLoading, acceptBlockchains: acceptBlockchains }), _jsx(Gap, {}), !shouldHideHeaderAndFooter && (_jsx(NotificationFooterPortal, { children: _jsx(NotificationFooter, { children: _jsx(MainButton, { isLoading: isFetching || isDnsFetching, onClick: handleSubmit }) }) }))] }));\n};\n","import { useMemo } from 'react';\nconst getContext = () => {\n    const fragment = document.createDocumentFragment();\n    const canvas = document.createElement('canvas');\n    fragment.appendChild(canvas);\n    return canvas.getContext('2d');\n};\nexport const getTextWidth = (currentText, font) => {\n    const context = getContext();\n    context.font = font;\n    if (Array.isArray(currentText)) {\n        return Math.max(...currentText.map(t => context.measureText(t).width));\n    }\n    else {\n        const metrics = context.measureText(currentText);\n        return metrics.width;\n    }\n};\nconst useTextWidth = options => {\n    const textOptions = useMemo(() => ('text' in options ? options : undefined), [options]);\n    const refOptions = useMemo(() => ('ref' in options ? options : undefined), [options]);\n    return useMemo(() => {\n        if (refOptions?.ref.current?.textContent) {\n            const context = getContext();\n            const computedStyles = window.getComputedStyle(refOptions.ref.current);\n            context.font = computedStyles.font;\n            const metrics = context.measureText(refOptions.ref.current.textContent);\n            return metrics.width;\n        }\n        else if (textOptions?.text) {\n            return getTextWidth(textOptions.text, textOptions.font ?? '16px times');\n        }\n        return NaN;\n    }, [textOptions?.text, textOptions?.font, refOptions?.ref]);\n};\nexport default useTextWidth;\n","export class UserCancelledError extends Error {\n    cause;\n    constructor(message, cause) {\n        super(message);\n        this.name = 'UserCancelledError';\n        this.cause = cause;\n    }\n}\n"],"names":["Info","styled","div","_templateObject","_taggedTemplateLiteral","Image","img","_templateObject2","props","full","theme","cornerFull","cornerMedium","ImageMock","_templateObject3","backgroundContent","SendingTitle","Body1","_templateObject4","textSecondary","Title","H3","_templateObject5","ConfirmViewContext","createContext","useConfirmViewContext","useContext","ConfirmView","_ref","children","estimation","recipient","onBack","onClose","assetAmount","fitContent","mutation","mutateAsync","isLoading","reset","client","useQueryClient","error","titleBlock","_jsx","ConfirmViewTitleSlot","ConfirmViewTitle","heading","ConfirmViewHeadingSlot","ConfirmViewHeading","details","_jsxs","ConfirmViewDetailsSlot","ConfirmViewDetailsRecipient","ConfirmViewDetailsAmount","ConfirmViewDetailsFee","ConfirmViewDetailsComment","buttons","ConfirmViewButtonsSlot","ConfirmViewButtons","MainButton","ConfirmMainButton","Children","map","child","isValidElement","type","done","setDone","useState","standalone","useAppContext","handleSubmit","async","isDone","setTimeout","invalidateQueries","e","console","Provider","value","formState","FullHeightBlockResponsive","onSubmit","stopPropagation","preventDefault","ListBlock","margin","fullWidth","Gap","ButtonBlock","ConfirmViewHeadingStyled","_ref2","_Fragment","NotificationTitleBlock","RoundedButton","onClick","ChevronLeftIcon","NotificationCancelButton","handleClose","_ref3","className","_ref4","title","t","useTranslation","image","useAssetImage","asset","fallbackTitles","TON_ASSET","id","TRON_USDT_ASSET","isTonRecipientData","toAccount","name","icon","src","_ref5","RecipientListItem","fiat","data","fiatAmountBN","useAssetAmountFiatEquivalent","fiatAmount","formatFiatCurrency","undefined","AmountListItem","coinAmount","stringAssetRelativeAmount","_estimation$data","ActionFeeDetailsUniversal","fee","isFetching","TransferComment","comment","ExclamationMarkCircleIconStyled","ExclamationMarkCircleIcon","ErrorLabelStyled","Label2","ResultErrorButtonStyled","ResultButton","_ref6","_ref7","sdk","useAppSdk","estimationLoading","isValid","useEffect","hapticNotification","CheckmarkCircleIcon","UserCancelledError","isDisabled","TxConfirmationCustomError","message","ClearBlock","textTertiary","ScanBlock","accentBlue","InputWithScanner","React","ref","onChange","label","disabled","onScan","focus","setFocus","scanId","setScanId","hideQrScanner","handler","options","params","uiEvents","on","off","InputBlock","valid","scanner","TextareaAutosize","target","onFocus","onBlur","Label","active","Date","now","emit","method","ScanIcon","XmarkIcon","ShowAddressBlock","ShowAddressLabel","Math","ceil","inputTextWidth","ShowAddress","Label1","Icon","span","iconSecondary","IconBlue","FavoriteItem","item","onSelect","onEdit","wallet","useWalletContext","queryClient","useMutation","deleteFavoriteSuggestion","storage","publicKey","address","rawAddress","QueryKey","activity","useDeleteFavorite","useSuggestionAddress","ListItem","ListItemPayload","ColumnText","noWrap","text","StarIcon","secondary","toShortValue","DropDown","payload","dropDown","confirm","replace","then","finally","EllipsisIcon","LatestItem","onAddFavorite","hideSuggestions","useHideSuggestion","i18n","language","intlLocale","timestamp","Intl","DateTimeFormat","day","month","format","getLatestDate","SuggestionList","acceptBlockchains","api","useQuery","getSuggestionsList","keepPreviousData","useLatestSuggestion","length","noUserSelect","isFavorite","SkeletonList","size","Warning","Body2","accentOrange","useGetToAccount","accountId","dns","AccountsApi","tonApiV2","getAccount","useDnsWallet","setName","useMemo","debounce","v","update","trim","seeIfValidTonAddress","seeIfValidTronAddress","seeIfInvalidDns","toString","toLowerCase","result","DNSApi","dnsResolve","domainName","retry","seeIfValidTonRecipient","defaultRecipient","RecipientView","_data$address","setRecipient","keyboard","isExternalLoading","HeaderBlock","isAnimationProcess","submitted","setSubmit","ios","useRef","shouldHideHeaderAndFooter","useIsFullWidthMode","setComment","setAddress","dnsWallet","isDnsFetching","timer","scrollToTop","clearTimeout","r","dnsName","isValidForBlockchain","validForBlockchain","BLOCKCHAIN_NAME","TON","TRON","includes","isValidAddress","isAccountFetching","useToAccount","account","enabled","isLedger","useIsActiveWalletLedger","isMemoValid","test","memoRequired","isIOs","current","formatted","blockchain","formatAddress","network","showAddress","useShowAddress","_toAccount$address","setShowAddress","useTextWidth","font","addressTextWidth","isNaN","clientWidth","openIosKeyboard","FullHeightBlock","noPadding","NotificationHeaderPortal","NotificationHeader","TextArea","_ref$current","NotificationFooterPortal","NotificationFooter","getContext","fragment","document","createDocumentFragment","canvas","createElement","appendChild","getTextWidth","currentText","context","Array","isArray","max","measureText","width","textOptions","refOptions","_refOptions$ref$curre","_textOptions$font","textContent","computedStyles","window","getComputedStyle","NaN","Error","constructor","cause","super","_defineProperty","this"],"sourceRoot":""}
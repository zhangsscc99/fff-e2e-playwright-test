{"version":3,"file":"static/js/653.e1bb3c91.chunk.js","mappings":"qQAQA,MAAMA,EAAQC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+LAQlBC,GAASA,EAAMC,MACjBC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4GA6CP,EAvCkBK,KACd,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,eAASC,GAC/BC,GAAMC,EAAAA,EAAAA,OACN,WAAEC,EAAU,IAAEV,IAAQW,EAAAA,EAAAA,OACtB,EAAEC,IAAMC,EAAAA,EAAAA,MACdC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAWC,IACbX,EAAUW,EAAQC,GAAG,EAGzB,OADAT,EAAIU,SAASC,GAAG,OAAQJ,GACjB,KACHP,EAAIU,SAASE,IAAI,OAAQL,EAAQ,CACpC,GACF,IACH,MAGMM,GAASC,EAAAA,EAAAA,UAAQ,IACZC,IAAmB,IAAlB,UAAEC,GAAWD,EACjBC,EAAYA,EAAUC,MAAM,GAC5BjB,EAAIU,SAASQ,KAAK,WAAY,CAC1BC,OAAQ,WACRV,GAAIb,EACJwB,OAAQJ,IAEZnB,OAAUE,EAAU,GAEzB,CAACC,EAAKJ,EAAQC,IACXwB,GAAUC,EAAAA,EAAAA,cAAY,KAChBC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAAEtB,WAAYA,EAAYuB,UAAUF,EAAAA,EAAAA,KAAKrC,EAAO,CAAEM,IAAKkC,OAAOC,YAAc,IAAKF,UAAUF,EAAAA,EAAAA,KAAKK,EAAAA,EAAiB,CAAEf,OAAQA,EAAQgB,QAASC,IAC1J9B,EAAIU,SAASQ,KAAK,OAAQ,CACtBC,OAAQ,OACRV,GAAIb,EACJwB,OAAQU,EAAEC,SACZ,SAEnB,CAAClB,EAAQX,EAAYV,IACxB,OAAQ+B,EAAAA,EAAAA,KAAKS,EAAAA,GAAc,CAAEC,YAAmBlC,IAAXH,EAAsBsC,YAvB1CC,KACbtC,OAAUE,EAAU,EAsB0DqC,MAAOhC,EAAE,iBAAkBqB,SAAUJ,GAAU,C","sources":["../../../packages/uikit/dist/components/QrScanner.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { QrScanSignature } from '@polkadot/react-qr/ScanSignature';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useAppContext } from '../hooks/appContext';\nimport { useAppSdk } from '../hooks/appSdk';\nimport { useTranslation } from '../hooks/translation';\nimport { FullHeightBlock, Notification } from './Notification';\nconst Block = styled.div `\n    margin: 0 -1rem;\n    width: calc(100% + 2rem);\n\n    .ui--qr-Scan section > div {\n        box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 0px 5px inset !important;\n    }\n\n    ${props => props.ios &&\n    css `\n            .ui--qr-Scan {\n                transform: none !important;\n            }\n        `}\n`;\nconst QrScanner = () => {\n    const [scanId, setScanId] = useState(undefined);\n    const sdk = useAppSdk();\n    const { standalone, ios } = useAppContext();\n    const { t } = useTranslation();\n    useEffect(() => {\n        const handler = (options) => {\n            setScanId(options.id);\n        };\n        sdk.uiEvents.on('scan', handler);\n        return () => {\n            sdk.uiEvents.off('scan', handler);\n        };\n    }, []);\n    const onCancel = () => {\n        setScanId(undefined);\n    };\n    const onScan = useMemo(() => {\n        return ({ signature }) => {\n            signature = signature.slice(2);\n            sdk.uiEvents.emit('response', {\n                method: 'response',\n                id: scanId,\n                params: signature\n            });\n            setScanId(undefined);\n        };\n    }, [sdk, scanId, setScanId]);\n    const Content = useCallback(() => {\n        return (_jsx(FullHeightBlock, { standalone: standalone, children: _jsx(Block, { ios: window.innerWidth <= 440, children: _jsx(QrScanSignature, { onScan: onScan, onError: e => {\n                        sdk.uiEvents.emit('copy', {\n                            method: 'copy',\n                            id: scanId,\n                            params: e.message\n                        });\n                    } }) }) }));\n    }, [onScan, standalone, ios]);\n    return (_jsx(Notification, { isOpen: scanId !== undefined, handleClose: onCancel, title: t('scan_qr_title'), children: Content }));\n};\nexport default QrScanner;\n"],"names":["Block","styled","div","_templateObject","_taggedTemplateLiteral","props","ios","css","_templateObject2","QrScanner","scanId","setScanId","useState","undefined","sdk","useAppSdk","standalone","useAppContext","t","useTranslation","useEffect","handler","options","id","uiEvents","on","off","onScan","useMemo","_ref","signature","slice","emit","method","params","Content","useCallback","_jsx","FullHeightBlock","children","window","innerWidth","QrScanSignature","onError","e","message","Notification","isOpen","handleClose","onCancel","title"],"sourceRoot":""}
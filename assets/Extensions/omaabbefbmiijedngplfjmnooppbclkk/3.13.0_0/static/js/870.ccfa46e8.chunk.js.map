{"version":3,"file":"static/js/870.ccfa46e8.chunk.js","mappings":"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","sources":["../../../packages/uikit/dist/components/create/Words.js","../../../packages/uikit/dist/components/fields/Checkbox.js","../../../packages/uikit/dist/components/shared/emoji/EmojisList.js","../../../packages/uikit/dist/components/create/CreateAuth.js","../../../packages/uikit/dist/components/create/WalletName.js","../../../packages/uikit/dist/components/lottie/LottieIcons.js","../../../packages/uikit/dist/pages/import/Password.js","../../../packages/uikit/dist/pages/import/Subscribe.js","../../../packages/uikit/dist/state/subscribe.js","../../../packages/uikit/dist/pages/import/Create.js","../../../packages/uikit/dist/pages/import/Import.js","../../../packages/uikit/dist/pages/import/Signer.js","../../../packages/uikit/dist/state/signer.js","../../../packages/uikit/dist/hooks/scanner.js","../../../packages/uikit/dist/pages/import/Ledger.js","../../../packages/uikit/dist/pages/import/index.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { mnemonicValidate } from '@ton/crypto';\nimport { wordlist } from '@ton/crypto/dist/mnemonic/wordlist';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { openIosKeyboard } from '../../hooks/ios';\nimport { useTranslation } from '../../hooks/translation';\nimport { AppRoute } from '../../libs/routes';\nimport { BackButtonBlock } from '../BackButton';\nimport { CenterContainer } from '../Layout';\nimport { Body1, Body2, H2 } from '../Text';\nimport { Button } from '../fields/Button';\nconst Block = styled.div `\n    display: flex;\n    text-align: center;\n    gap: 1rem;\n    flex-direction: column;\n\n    & + & {\n        margin-top: 2rem;\n    }\n`;\nconst Header = styled(H2) `\n    user-select: none;\n`;\nconst Body = styled(Body1) `\n    user-select: none;\n\n    text-align: center;\n    color: ${props => props.theme.textSecondary};\n`;\nexport const WorldsGrid = styled.div `\n    display: grid;\n    grid-template-rows: repeat(12, minmax(0, 1fr));\n    grid-auto-flow: column;\n    gap: 0.5rem;\n    place-content: space-evenly;\n    margin: 1rem 0;\n\n    white-space: normal;\n`;\nconst World = styled(Body1) ``;\nexport const WorldNumber = styled(Body2) `\n    display: inline-block;\n    width: 24px;\n    line-height: 24px;\n    color: ${props => props.theme.textSecondary};\n\n    user-select: none;\n`;\nconst Number1 = styled(Body1) `\n    display: inline-block;\n    width: 26px;\n    text-align: right;\n\n    font-size: 15px;\n\n    color: ${props => props.theme.textSecondary};\n`;\nexport const ButtonRow = styled.div `\n    display: flex;\n`;\nexport const Worlds = ({ mnemonic, onBack, onCheck }) => {\n    const sdk = useAppSdk();\n    const { t } = useTranslation();\n    useEffect(() => {\n        if (sdk.twaExpand) {\n            sdk.twaExpand();\n        }\n    }, []);\n    return (_jsxs(CenterContainer, { children: [_jsx(BackButtonBlock, { onClick: onBack }), _jsx(Block, { children: _jsxs(\"div\", { children: [_jsx(Header, { children: t('secret_words_title') }), _jsx(Body, { children: t('secret_words_caption') })] }) }), _jsx(WorldsGrid, { children: mnemonic.map((world, index) => (_jsxs(World, { children: [_jsxs(WorldNumber, { children: [\" \", index + 1, \".\"] }), \" \", world, ' '] }, index))) }), _jsx(Button, { size: \"large\", fullWidth: true, primary: true, marginTop: true, onClick: onCheck, children: t('continue') })] }));\n};\nconst Input = styled.input `\n    outline: none;\n    border: none;\n    background: transparent;\n    flex-grow: 1;\n    font-weight: 500;\n    font-size: 16px;\n\n    color: ${props => props.theme.textPrimary};\n`;\nconst InputBlock = styled.label `\n    width: 100%;\n    line-height: 54px;\n    border-radius: ${props => props.theme.cornerSmall};\n    padding: 0 1rem;\n    box-sizing: border-box;\n    text-align: left;\n\n    ${props => {\n    if (props.submitted) {\n        return !props.valid\n            ? css `\n                      border: 1px solid ${props.theme.fieldErrorBorder};\n                      background: ${props.theme.fieldErrorBackground};\n                  `\n            : props.active\n                ? css `\n                      border: 1px solid ${props.theme.fieldActiveBorder};\n                      background: ${props.theme.fieldBackground};\n                  `\n                : css `\n                      border: 1px solid ${props.theme.fieldBackground};\n                      background: ${props.theme.fieldBackground};\n                  `;\n    }\n    else {\n        return props.active\n            ? css `\n                      border: 1px solid ${props.theme.fieldActiveBorder};\n                      background: ${props.theme.fieldBackground};\n                  `\n            : !props.valid\n                ? css `\n                      border: 1px solid ${props.theme.fieldErrorBorder};\n                      background: ${props.theme.fieldErrorBackground};\n                  `\n                : css `\n                      border: 1px solid ${props.theme.fieldBackground};\n                      background: ${props.theme.fieldBackground};\n                  `;\n    }\n}}\n\n    ${Number1} {\n        display: inline-block;\n        line-height: 54px;\n        padding-right: 0.35rem;\n    }\n    ${Input} {\n        display: inline-block;\n        width: calc(100% - 38px);\n        height: 54px;\n        line-height: 54px;\n        box-sizing: border-box;\n    }\n`;\nconst WordInput = ({ value, test, onChange, focusNext, isValid, tabIndex }) => {\n    const [active, setActive] = useState(false);\n    const [touched, setTouched] = useState(false);\n    const valid = touched ? isValid === true : isValid || active;\n    const handleKeyDown = useCallback(event => {\n        if (event.key === 'Enter') {\n            focusNext();\n        }\n    }, [focusNext]);\n    return (_jsxs(InputBlock, { submitted: touched, active: active, valid: valid, children: [_jsxs(Number1, { children: [test, \":\"] }), _jsx(Input, { tabIndex: tabIndex, autoComplete: \"off\", value: value, onChange: e => onChange(e.target.value.toLocaleLowerCase()), onFocus: () => setActive(true), onKeyDown: handleKeyDown, onBlur: () => {\n                    setTouched(true);\n                    setActive(false);\n                } })] }));\n};\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nconst formatOrdinals = (lang, n) => {\n    if (lang === 'en') {\n        const pr = new Intl.PluralRules(lang, { type: 'ordinal' });\n        const suffixes = new Map([\n            ['one', 'st'],\n            ['two', 'nd'],\n            ['few', 'rd'],\n            ['other', 'th']\n        ]);\n        const rule = pr.select(n);\n        const suffix = suffixes.get(rule);\n        return `${n}${suffix}`;\n    }\n    else {\n        return `${n}`;\n    }\n};\nconst seeIfValid = (value, mnemonic) => {\n    return value === '' || value.toLowerCase().trim() === mnemonic;\n};\nexport const Check = ({ onBack, onConfirm, mnemonic, isLoading }) => {\n    const { t, i18n } = useTranslation();\n    const [one, setOne] = useState('');\n    const [two, setTwo] = useState('');\n    const [three, setThree] = useState('');\n    const ref = useRef(null);\n    const [test1, test2, test3] = useMemo(() => {\n        return [getRandomInt(1, 8), getRandomInt(8, 16), getRandomInt(16, 24)];\n    }, []);\n    const description = useMemo(() => {\n        return t('check_words_caption')\n            .replace('%1%', formatOrdinals(i18n.language, test1))\n            .replace('%2%', formatOrdinals(i18n.language, test2))\n            .replace('%3%', formatOrdinals(i18n.language, test3));\n    }, [t, test1, test2, test3]);\n    const isValid = one.toLowerCase().trim() === mnemonic[test1 - 1] &&\n        two.toLowerCase().trim() === mnemonic[test2 - 1] &&\n        three.toLowerCase().trim() === mnemonic[test3 - 1];\n    return (_jsxs(CenterContainer, { children: [_jsx(BackButtonBlock, { onClick: onBack }), _jsx(Block, { children: _jsxs(\"div\", { children: [_jsx(Header, { children: t('check_words_title') }), _jsx(Body, { children: description })] }) }), _jsxs(Block, { ref: ref, children: [_jsx(WordInput, { tabIndex: 1, test: test1, value: one, onChange: setOne, isValid: seeIfValid(one, mnemonic[test1 - 1]), focusNext: () => focusInput(ref.current, 1) }), _jsx(WordInput, { tabIndex: 2, test: test2, value: two, onChange: setTwo, isValid: seeIfValid(two, mnemonic[test2 - 1]), focusNext: () => focusInput(ref.current, 2) }), _jsx(WordInput, { tabIndex: 3, test: test3, value: three, onChange: setThree, isValid: seeIfValid(three, mnemonic[test3 - 1]), focusNext: () => (isValid ? onConfirm() : undefined) })] }), _jsx(Block, { children: _jsx(Button, { tabIndex: 4, size: \"large\", fullWidth: true, primary: true, loading: isLoading, disabled: !isValid, onClick: onConfirm, children: t('continue') }) })] }));\n};\nconst Inputs = styled.div `\n    display: grid;\n    grid-template-rows: repeat(12, minmax(0, 1fr));\n    grid-auto-flow: column;\n    gap: 0.5rem;\n\n    @media (max-width: 768px) {\n        grid-template-rows: repeat(24, minmax(0, 1fr));\n    }\n\n    ${p => p.theme.displayType === 'full-width' &&\n    css `\n            grid-template-rows: repeat(8, minmax(0, 1fr));\n        `}\n`;\nconst seeIfValidWord = (word) => {\n    return wordlist.includes(word);\n};\nconst focusInput = (current, index) => {\n    if (!current)\n        return;\n    const wrapper = current.childNodes[index];\n    if (!wrapper)\n        return;\n    wrapper.querySelector('input')?.focus();\n};\nexport const ImportWords = ({ isLoading, onMnemonic }) => {\n    const sdk = useAppSdk();\n    const { standalone } = useAppContext();\n    const ref = useRef(null);\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n    const [mnemonic, setMnemonic] = useState(Array(24).fill(''));\n    const onChange = useCallback((newValue, index) => {\n        if (newValue.includes(' ')) {\n            let values = newValue.trim().split(' ');\n            if (values.length === 1) {\n                setMnemonic(items => items.map((v, i) => (i === index ? values[0] : v)));\n                focusInput(ref.current, index + 1);\n            }\n            else {\n                const max = Math.min(24 - index, values.length);\n                values = values.slice(0, max);\n                setMnemonic(items => {\n                    items = [...items];\n                    items.splice(index, max, ...values);\n                    return items;\n                });\n                focusInput(ref.current, max - 1);\n            }\n            return;\n        }\n        else {\n            return setMnemonic(items => items.map((v, i) => (i === index ? newValue : v)));\n        }\n    }, [ref.current]);\n    const validations = useMemo(() => {\n        return mnemonic.map(item => item === '' || wordlist.includes(item));\n    }, [mnemonic]);\n    const notify = () => {\n        sdk.topMessage(t('import_wallet_wrong_words_err'));\n        sdk.hapticNotification('error');\n    };\n    const onSubmit = async () => {\n        const invalid = mnemonic.findIndex(work => !seeIfValidWord(work));\n        if (invalid !== -1) {\n            focusInput(ref.current, invalid);\n            notify();\n        }\n        if (mnemonic.length < 24) {\n            focusInput(ref.current, mnemonic.length - 1);\n            notify();\n        }\n        if (sdk.isIOs()) {\n            openIosKeyboard('text');\n        }\n        const valid = await mnemonicValidate(mnemonic);\n        if (!valid) {\n            notify();\n        }\n        else {\n            onMnemonic(mnemonic);\n        }\n    };\n    return (_jsxs(_Fragment, { children: [_jsx(BackButtonBlock, { onClick: () => navigate(AppRoute.home) }), _jsx(Block, { children: _jsxs(\"div\", { children: [_jsx(Header, { children: t('import_wallet_title') }), _jsx(Body, { children: t('import_wallet_caption') })] }) }), _jsx(Block, { children: _jsx(Inputs, { ref: ref, children: mnemonic.map((item, index) => (_jsx(WordInput, { value: item, test: index + 1, isValid: validations[index], onChange: newValue => onChange(newValue, index), tabIndex: index + 1, focusNext: () => focusInput(ref.current, index + 1) }, index))) }) }), _jsx(Block, { children: _jsx(Button, { size: \"large\", fullWidth: true, primary: true, loading: isLoading, onClick: onSubmit, bottom: standalone, children: t('continue') }) })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled, { css } from 'styled-components';\nimport { CheckboxIcon } from '../Icon';\nimport { Body1 } from '../Text';\nconst Wrapper = styled.div `\n    display: inline-flex;\n    gap: 15px;\n    align-items: center;\n\n    cursor: pointer;\n`;\nconst IconBase = styled.div `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    border-width: 2px;\n    border-style: solid;\n    box-sizing: border-box;\n\n    ${props => props.disabled\n    ? css `\n                  opacity: 0.48;\n              `\n    : undefined}\n\n    ${props => props.checked\n    ? css `\n                  color: ${props.theme.buttonPrimaryForeground};\n                  background: ${props.theme.buttonPrimaryBackground};\n                  border-color: ${props.theme.buttonPrimaryBackground};\n              `\n    : css `\n                  color: transparent;\n                  background: transparent;\n                  border-color: ${props.theme.backgroundContentTint};\n              `}\n`;\nconst CheckboxItem = styled(IconBase) `\n    width: 22px;\n    height: 22px;\n\n    border-radius: 6px;\n`;\nconst RadioItem = styled(IconBase) `\n    width: 24px;\n    height: 24px;\n\n    border-radius: ${props => props.theme.cornerFull};\n`;\nconst Text = styled(Body1) `\n    color: ${props => (props.light ? props.theme.textPrimary : props.theme.textSecondary)};\n`;\nexport const Checkbox = ({ checked, onChange, disabled, children, light, className }) => {\n    return (_jsxs(Wrapper, { onClick: () => onChange(!checked), className: className, children: [_jsx(CheckboxItem, { checked: checked, disabled: disabled, children: checked ? _jsx(CheckboxIcon, {}) : undefined }), children && _jsx(Text, { light: light, children: children })] }));\n};\nexport const Radio = ({ checked, onChange, disabled, children }) => {\n    return (_jsxs(Wrapper, { onClick: e => {\n            e.stopPropagation();\n            e.preventDefault();\n            onChange(!checked);\n        }, children: [_jsx(RadioItem, { checked: checked, disabled: disabled, children: checked ? _jsx(CheckboxIcon, {}) : undefined }), children && _jsx(Text, { children: children })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { emojis } from '@tonkeeper/core/dist/utils/emojis';\nimport React, { useEffect, useState } from 'react';\nimport { emojiIcons } from './emojiIcons';\nimport styled from 'styled-components';\nconst EmojisListScroll = styled.div `\n    max-height: 240px;\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    overflow: auto;\n    position: relative;\n\n    &::-webkit-scrollbar {\n        display: none;\n        width: 0;\n        background: transparent;\n        height: 0;\n    }\n\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n\n    /* optimise large emojis list rendering avoiding styled components */\n    > .emoji-button {\n        height: 32px;\n        width: 32px;\n        line-height: 24px;\n        font-size: 24px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        cursor: pointer;\n    }\n`;\nconst Shadow = styled.div `\n    position: sticky;\n    width: 100%;\n    height: 16px;\n`;\nconst ShadowBottom = styled(Shadow) `\n    bottom: -1px;\n    background: ${props => props.theme.gradientBackgroundBottom};\n`;\nconst ShadowTop = styled(Shadow) `\n    top: 0;\n    background: ${props => props.theme.gradientBackgroundTop};\n`;\nconst shortEmojisList = emojis.slice(0, 150);\nexport const EmojisList = React.memo(({ onClick, keepShortListForMS }) => {\n    const [emojisList, setEmojisList] = useState(keepShortListForMS ? shortEmojisList : emojis);\n    useEffect(() => {\n        if (keepShortListForMS) {\n            setTimeout(() => setEmojisList(emojis), keepShortListForMS);\n        }\n    }, []);\n    return (_jsxs(EmojisListScroll, { children: [_jsx(ShadowTop, {}), emojiIcons.map(item => (_jsx(\"div\", { className: \"emoji-button\", onClick: () => onClick(item.name), children: _jsx(item.icon, {}) }, item.name))), emojisList.map(emoji => (_jsx(\"div\", { className: \"emoji-button\", onClick: () => onClick(emoji), children: emoji }, emoji))), _jsx(ShadowBottom, {})] }));\n});\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useMutation } from '@tanstack/react-query';\nimport { AppKey } from '@tonkeeper/core/dist/Keys';\nimport { MinPasswordLength } from '@tonkeeper/core/dist/service/accountService';\nimport { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { useTranslation } from '../../hooks/translation';\nimport { CenterContainer } from '../Layout';\nimport { H2 } from '../Text';\nimport { Button } from '../fields/Button';\nimport { Input } from '../fields/Input';\nconst Block = styled.form `\n    display: flex;\n    text-align: center;\n    gap: 1rem;\n    flex-direction: column;\n`;\nconst useSetNoneAuthMutation = () => {\n    const sdk = useAppSdk();\n    return useMutation(async () => {\n        const state = {\n            kind: 'none'\n        };\n        await sdk.storage.set(AppKey.GLOBAL_AUTH_STATE, state);\n    });\n};\nconst SelectAuthType = ({ onSelect, isLoading }) => {\n    const { t } = useTranslation();\n    return (_jsxs(Block, { children: [_jsx(Button, { size: \"large\", fullWidth: true, onClick: () => onSelect('none'), loading: isLoading, children: t('Without_authentication') }), _jsx(Button, { size: \"large\", fullWidth: true, primary: true, onClick: () => onSelect('password'), disabled: isLoading, children: t('Password') })] }));\n};\nconst useCreatePassword = () => {\n    const sdk = useAppSdk();\n    return useMutation(async ({ password, confirm }) => {\n        if (password.length < MinPasswordLength) {\n            sdk.hapticNotification('error');\n            return 'password';\n        }\n        if (password !== confirm) {\n            sdk.hapticNotification('error');\n            return 'confirm';\n        }\n        const state = {\n            kind: 'password'\n        };\n        await sdk.storage.set(AppKey.GLOBAL_AUTH_STATE, state);\n    });\n};\nconst FillPassword = ({ afterCreate, isLoading }) => {\n    const { t } = useTranslation();\n    const { mutateAsync, isLoading: isCreating, reset } = useCreatePassword();\n    const ref = useRef(null);\n    const [error, setError] = useState(undefined);\n    const [password, setPassword] = useState('');\n    const [confirm, setConfirm] = useState('');\n    const onCreate = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        reset();\n        const result = await mutateAsync({ password, confirm });\n        if (result === undefined) {\n            return afterCreate(password);\n        }\n        else {\n            setError(result);\n        }\n    };\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.focus();\n        }\n    }, [ref]);\n    return (_jsx(CenterContainer, { children: _jsxs(Block, { onSubmit: onCreate, children: [_jsx(H2, { children: t('Create_password') }), _jsx(Input, { ref: ref, type: \"password\", label: t('Password'), value: password, onChange: value => {\n                        setError(undefined);\n                        setPassword(value);\n                    }, isValid: error == null, helpText: error === 'confirm' ? t('PasswordDoNotMatch') : t('MinPassword') }), _jsx(Input, { type: \"password\", label: t('ConfirmPassword'), value: confirm, onChange: value => {\n                        setError(undefined);\n                        setConfirm(value);\n                    }, isValid: error !== 'confirm' }), _jsx(Button, { size: \"large\", fullWidth: true, primary: true, marginTop: true, loading: isLoading || isCreating, disabled: isCreating || error != null, type: \"submit\", children: t('continue') })] }) }));\n};\nexport const CreateAuthState = ({ afterCreate, isLoading }) => {\n    const [authType, setAuthType] = useState('password');\n    const { mutateAsync: setNoneAuth, isLoading: isNoneLoading } = useSetNoneAuthMutation();\n    const onSelect = async (_authType) => {\n        if (_authType === 'none') {\n            await setNoneAuth();\n            afterCreate();\n        }\n        else {\n            setAuthType(_authType);\n        }\n    };\n    if (authType === undefined) {\n        return _jsx(SelectAuthType, { onSelect: onSelect, isLoading: isNoneLoading });\n    }\n    else if (authType === 'password') {\n        return _jsx(FillPassword, { afterCreate: afterCreate, isLoading: isLoading });\n    }\n    else {\n        return _jsx(_Fragment, { children: \"TODO: WithAuthn case \" });\n    }\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { getWalletState } from '@tonkeeper/core/dist/service/wallet/storeService';\nimport { updateWalletProperty } from '@tonkeeper/core/dist/service/walletService';\nimport { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { useTranslation } from '../../hooks/translation';\nimport { QueryKey } from '../../libs/queryKey';\nimport { CenterContainer } from '../Layout';\nimport { Body2, H2 } from '../Text';\nimport { Button } from '../fields/Button';\nimport { Input } from '../fields/Input';\nimport { EmojisList } from '../shared/emoji/EmojisList';\nimport { WalletEmoji } from '../shared/emoji/WalletEmoji';\nconst Block = styled.form `\n    display: flex;\n    text-align: center;\n    gap: 1rem;\n    flex-direction: column;\n`;\nconst Body = styled(Body2) `\n    text-align: center;\n    color: ${props => props.theme.textSecondary};\n`;\nconst useUpdateNameMutation = () => {\n    const sdk = useAppSdk();\n    const client = useQueryClient();\n    return useMutation(async ({ name, emoji, account }) => {\n        if (name.length < 3) {\n            throw new Error('Missing name');\n        }\n        if (!account.activePublicKey) {\n            throw new Error('Missing activePublicKey');\n        }\n        const wallet = await getWalletState(sdk.storage, account.activePublicKey);\n        if (!wallet) {\n            throw new Error('Missing wallet');\n        }\n        await updateWalletProperty(sdk.storage, wallet, { name, emoji });\n        await client.invalidateQueries([QueryKey.account]);\n        return account;\n    });\n};\nexport const UpdateWalletName = props => {\n    const { t } = useTranslation();\n    const ref = useRef(null);\n    const { mutateAsync, isError, isLoading, reset } = useUpdateNameMutation();\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.focus();\n        }\n    }, [ref.current]);\n    const [name, setName] = useState('');\n    const [emoji, setEmoji] = useState(props.walletEmoji);\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if ('submitHandler' in props) {\n            props.submitHandler({ name, emoji });\n        }\n        else {\n            props.onUpdate(await mutateAsync({ name, emoji, account: props.account }));\n        }\n    };\n    const onChange = (value) => {\n        reset();\n        setName(value);\n    };\n    return (_jsx(CenterContainer, { children: _jsxs(Block, { onSubmit: onSubmit, children: [_jsxs(\"div\", { children: [_jsx(H2, { children: t('Name_your_wallet') }), _jsx(Body, { children: t('Name_your_wallet_description') })] }), _jsx(Input, { ref: ref, value: name, onChange: onChange, label: t('Wallet_name'), disabled: isLoading, isValid: !isError, rightElement: emoji ? _jsx(WalletEmoji, { emoji: emoji }) : null }), _jsx(EmojisList, { keepShortListForMS: 500, onClick: setEmoji }), _jsx(Button, { size: \"large\", fullWidth: true, marginTop: true, primary: true, loading: isLoading, disabled: isLoading, type: \"submit\", children: t('add_edit_favorite_save') })] }) }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Lottie from 'react-lottie';\nimport animationCheckData from './Check.json';\nimport animationConfettiData from './Confetti.json';\nimport animationGearData from './Gear.json';\nimport animationWriteData from './Write.json';\nconst defaultCheckOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationCheckData,\n    rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n    }\n};\nexport const CheckLottieIcon = () => {\n    return _jsx(Lottie, { options: defaultCheckOptions, height: 160, width: 160 });\n};\nconst defaultGearOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationGearData,\n    rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n    }\n};\nexport const GearLottieIcon = () => {\n    return _jsx(Lottie, { options: defaultGearOptions, height: 160, width: 160 });\n};\nconst defaultWriteOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationWriteData,\n    rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n    }\n};\nexport const WriteLottieIcon = () => {\n    return _jsx(Lottie, { options: defaultWriteOptions, height: 160, width: 160 });\n};\nconst defaultConfettiOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationConfettiData,\n    rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n    }\n};\nexport const ConfettiLottieIcon = ({ width, height }) => {\n    return _jsx(Lottie, { options: defaultConfettiOptions, height: height, width: width });\n};\nexport const NotificationIcon = () => {\n    return (_jsxs(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"128\", height: \"128\", viewBox: \"0 0 128 128\", fill: \"none\", children: [_jsx(\"path\", { d: \"M107.965 41.8795C105.62 43.2285 102.9 44 100 44C91.1634 44 84 36.8366 84 28C84 25.1 84.7715 22.3802 86.1205 20.0347C84.1104 20 81.8262 20 79.2 20L48.8 20C38.7191 20 33.6786 20 29.8282 21.9619C26.4413 23.6876 23.6876 26.4413 21.9619 29.8282C20 33.6786 20 38.7191 20 48.8L20 79.2C20 89.2809 20 94.3214 21.9619 98.1718C23.6876 101.559 26.4413 104.312 29.8282 106.038C33.6786 108 38.7191 108 48.8 108H79.2C89.2809 108 94.3214 108 98.1718 106.038C101.559 104.312 104.312 101.559 106.038 98.1718C108 94.3214 108 89.2809 108 79.2V48.8C108 46.1738 108 43.8896 107.965 41.8795Z\", fill: \"#45AEF5\" }), _jsx(\"circle\", { opacity: \"0.32\", cx: \"100\", cy: \"28\", r: \"16\", fill: \"#45AEF5\" })] }));\n};\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { mnemonicValidate } from '@ton/crypto';\nimport { AppKey } from '@tonkeeper/core/dist/Keys';\nimport { addWalletWithCustomAuthState, addWalletWithGlobalAuthState, getAccountState } from '@tonkeeper/core/dist/service/accountService';\nimport { createNewWalletState, encryptWalletMnemonic } from '@tonkeeper/core/dist/service/walletService';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { IconPage } from '../../components/Layout';\nimport { CheckLottieIcon, ConfettiLottieIcon } from '../../components/lottie/LottieIcons';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useAfterImportAction, useAppSdk } from '../../hooks/appSdk';\nimport { useTranslation } from '../../hooks/translation';\nimport { QueryKey } from '../../libs/queryKey';\nimport { getPasswordByNotification } from '../../state/mnemonic';\nconst createWalletWithKeychain = async (client, api, sdk, mnemonic) => {\n    if (!sdk.keychain) {\n        throw new Error('Keychain is not define');\n    }\n    const state = await createNewWalletState(api, mnemonic);\n    state.auth = { kind: 'keychain' };\n    await sdk.keychain.setPassword(state.publicKey, mnemonic.join(' '));\n    await addWalletWithCustomAuthState(sdk.storage, state);\n    await client.invalidateQueries([QueryKey.account]);\n    return getAccountState(sdk.storage);\n};\nconst createWallet = async (client, api, sdk, mnemonic, auth, password) => {\n    const key = auth.kind === 'none' ? 'none' : password;\n    if (!key) {\n        throw new Error('Missing encrypt password key');\n    }\n    const state = await createNewWalletState(api, mnemonic);\n    const encryptedMnemonic = await encryptWalletMnemonic(mnemonic, key);\n    await addWalletWithGlobalAuthState(sdk.storage, state, auth, encryptedMnemonic);\n    await client.invalidateQueries([QueryKey.account]);\n    return getAccountState(sdk.storage);\n};\nexport const useAddWalletMutation = () => {\n    const sdk = useAppSdk();\n    const { api } = useAppContext();\n    const client = useQueryClient();\n    return useMutation(async ({ mnemonic, password, listOfAuth }) => {\n        const valid = await mnemonicValidate(mnemonic);\n        if (!valid) {\n            throw new Error('Mnemonic is not valid.');\n        }\n        if (listOfAuth && listOfAuth.length === 1 && listOfAuth[0] == 'keychain') {\n            return createWalletWithKeychain(client, api, sdk, mnemonic);\n        }\n        const auth = await sdk.storage.get(AppKey.GLOBAL_AUTH_STATE);\n        if (auth === null) {\n            return false;\n        }\n        const account = await getAccountState(sdk.storage);\n        if (account.publicKeys.length === 0 && password == undefined) {\n            return false;\n        }\n        if (auth.kind === 'none') {\n            return createWallet(client, api, sdk, mnemonic, auth);\n        }\n        if (!password) {\n            password = await getPasswordByNotification(sdk, auth);\n        }\n        return createWallet(client, api, sdk, mnemonic, auth, password);\n    });\n};\nconst ConfettiBlock = styled.div `\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 10;\n`;\nexport const FinalView = () => {\n    const { t } = useTranslation();\n    const afterImport = useAfterImportAction();\n    const client = useQueryClient();\n    const [size, setSize] = useState(undefined);\n    useEffect(() => {\n        client.invalidateQueries([]);\n        setTimeout(afterImport, 3000);\n    }, []);\n    useEffect(() => {\n        const { innerWidth: width, innerHeight: height } = window;\n        setSize({ width, height });\n    }, []);\n    return (_jsxs(_Fragment, { children: [size && (_jsx(ConfettiBlock, { children: _jsx(ConfettiLottieIcon, { ...size }) })), _jsx(IconPage, { icon: _jsx(CheckLottieIcon, {}), title: t('check_words_success') })] }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { IconPage } from '../../components/Layout';\nimport { Button } from '../../components/fields/Button';\nimport { NotificationIcon } from '../../components/lottie/LottieIcons';\nimport { useTranslation } from '../../hooks/translation';\nimport { useSubscribeMutation } from '../../state/subscribe';\nexport const Subscribe = ({ wallet, mnemonic, onDone }) => {\n    const { t } = useTranslation();\n    const { mutate, reset, isLoading } = useSubscribeMutation(wallet, mnemonic, onDone);\n    return (_jsx(IconPage, { skip: onDone, icon: _jsx(NotificationIcon, {}), title: t('reminder_notifications_title'), description: t('reminder_notifications_caption'), button: _jsx(Button, { size: \"large\", fullWidth: true, primary: true, marginTop: true, loading: isLoading, onClick: () => {\n                reset();\n                mutate();\n            }, children: t('reminder_notifications_enable_button') }) }));\n};\n","import { useMutation } from '@tanstack/react-query';\nimport { useAppSdk } from '../hooks/appSdk';\nexport const useSubscribeMutation = (wallet, mnemonic, onDone) => {\n    const sdk = useAppSdk();\n    return useMutation(async () => {\n        const { notifications } = sdk;\n        if (!notifications) {\n            throw new Error('Missing notifications');\n        }\n        try {\n            await notifications.subscribe(wallet, mnemonic);\n            onDone();\n        }\n        catch (e) {\n            if (e instanceof Error) {\n                sdk.topMessage(e.message);\n            }\n            throw e;\n        }\n    });\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { mnemonicNew } from '@ton/crypto';\nimport { useEffect, useState } from 'react';\nimport { IconPage } from '../../components/Layout';\nimport { CreateAuthState } from '../../components/create/CreateAuth';\nimport { UpdateWalletName } from '../../components/create/WalletName';\nimport { Check, Worlds } from '../../components/create/Words';\nimport { Button } from '../../components/fields/Button';\nimport { CheckLottieIcon, GearLottieIcon, WriteLottieIcon } from '../../components/lottie/LottieIcons';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { useTranslation } from '../../hooks/translation';\nimport { useActiveWallet } from '../../state/wallet';\nimport { FinalView, useAddWalletMutation } from './Password';\nimport { Subscribe } from './Subscribe';\nconst Create = ({ listOfAuth }) => {\n    const sdk = useAppSdk();\n    const { t } = useTranslation();\n    const { mutateAsync: checkPasswordAndCreateWalletAsync, isLoading: isConfirmLoading, reset } = useAddWalletMutation();\n    const { data: wallet } = useActiveWallet();\n    const [mnemonic, setMnemonic] = useState([]);\n    const [account, setAccount] = useState(undefined);\n    const [create, setCreate] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [check, setCheck] = useState(false);\n    const [checked, setChecked] = useState(false);\n    const [hasPassword, setHasPassword] = useState(false);\n    const [passNotifications, setPassNotification] = useState(false);\n    useEffect(() => {\n        setTimeout(() => {\n            mnemonicNew(24).then(value => setMnemonic(value));\n        }, 1500);\n    }, []);\n    useEffect(() => {\n        if (mnemonic.length) {\n            setTimeout(() => {\n                setCreate(true);\n            }, 1500);\n        }\n    }, [mnemonic]);\n    if (mnemonic.length === 0) {\n        return _jsx(IconPage, { icon: _jsx(GearLottieIcon, {}), title: t('create_wallet_generating') });\n    }\n    if (!create) {\n        return _jsx(IconPage, { icon: _jsx(CheckLottieIcon, {}), title: t('create_wallet_generated') });\n    }\n    if (!open) {\n        return (_jsx(IconPage, { logOut: true, icon: _jsx(WriteLottieIcon, {}), title: t('create_wallet_title'), description: t('create_wallet_caption'), button: _jsx(Button, { size: \"large\", fullWidth: true, primary: true, marginTop: true, onClick: () => setOpen(true), children: t('continue') }) }));\n    }\n    if (!check) {\n        return (_jsx(Worlds, { mnemonic: mnemonic, onBack: () => setOpen(false), onCheck: () => setCheck(true) }));\n    }\n    if (!checked) {\n        return (_jsx(Check, { mnemonic: mnemonic, onBack: () => setCheck(false), onConfirm: () => checkPasswordAndCreateWalletAsync({ mnemonic, listOfAuth }).then(state => {\n                setChecked(true);\n                if (state === false) {\n                    setHasPassword(false);\n                }\n                else {\n                    setHasPassword(true);\n                    setAccount(state);\n                }\n            }), isLoading: isConfirmLoading }));\n    }\n    if (!hasPassword) {\n        return (_jsx(CreateAuthState, { afterCreate: (password) => {\n                reset();\n                checkPasswordAndCreateWalletAsync({ mnemonic, password }).then(state => {\n                    if (state !== false) {\n                        setHasPassword(true);\n                        setAccount(state);\n                    }\n                });\n            }, isLoading: isConfirmLoading }));\n    }\n    if (account && account.publicKeys.length > 1 && wallet && wallet.name == null) {\n        return (_jsx(UpdateWalletName, { account: account, onUpdate: setAccount, walletEmoji: wallet.emoji }));\n    }\n    if (sdk.notifications && !passNotifications) {\n        return (_jsx(Subscribe, { wallet: wallet, mnemonic: mnemonic, onDone: () => setPassNotification(true) }));\n    }\n    return _jsx(FinalView, {});\n};\nexport default Create;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { CreateAuthState } from '../../components/create/CreateAuth';\nimport { UpdateWalletName } from '../../components/create/WalletName';\nimport { ImportWords } from '../../components/create/Words';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { useActiveWallet } from '../../state/wallet';\nimport { FinalView, useAddWalletMutation } from './Password';\nimport { Subscribe } from './Subscribe';\nconst Import = ({ listOfAuth }) => {\n    const sdk = useAppSdk();\n    const [mnemonic, setMnemonic] = useState([]);\n    const [account, setAccount] = useState(undefined);\n    const [hasPassword, setHasPassword] = useState(false);\n    const [passNotifications, setPassNotification] = useState(false);\n    const { data: wallet } = useActiveWallet();\n    const { mutateAsync: checkPasswordAndCreateWalletAsync, isLoading: isConfirmLoading, reset } = useAddWalletMutation();\n    if (mnemonic.length === 0) {\n        return (_jsx(ImportWords, { isLoading: isConfirmLoading, onMnemonic: m => {\n                checkPasswordAndCreateWalletAsync({ mnemonic: m, listOfAuth }).then(state => {\n                    setMnemonic(m);\n                    if (state === false) {\n                        setHasPassword(false);\n                    }\n                    else {\n                        setHasPassword(true);\n                        setAccount(state);\n                    }\n                });\n            } }));\n    }\n    if (!hasPassword) {\n        return (_jsx(CreateAuthState, { afterCreate: (password) => {\n                reset();\n                checkPasswordAndCreateWalletAsync({ mnemonic, password }).then(state => {\n                    if (state !== false) {\n                        setHasPassword(true);\n                        setAccount(state);\n                    }\n                });\n            }, isLoading: isConfirmLoading }));\n    }\n    if (account && account.publicKeys.length > 1 && wallet && wallet.name == null) {\n        return (_jsx(UpdateWalletName, { account: account, onUpdate: setAccount, walletEmoji: wallet.emoji }));\n    }\n    if (sdk.notifications && !passNotifications) {\n        return (_jsx(Subscribe, { wallet: wallet, mnemonic: mnemonic, onDone: () => setPassNotification(true) }));\n    }\n    return _jsx(FinalView, {});\n};\nexport default Import;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback } from 'react';\nimport { styled } from 'styled-components';\nimport { IconPage } from '../../components/Layout';\nimport { SignerIcon } from '../../components/create/ImportIcons';\nimport { Button } from '../../components/fields/Button';\nimport { useScanner } from '../../hooks/scanner';\nimport { useTranslation } from '../../hooks/translation';\nimport { usePairSignerMutation } from '../../state/signer';\nconst IconBlock = styled.div `\n    color: ${props => props.theme.accentBlue};\n`;\nexport const PairSigner = () => {\n    const { t } = useTranslation();\n    const { mutate, reset, isLoading } = usePairSignerMutation();\n    const onSubmit = useCallback((result) => {\n        reset();\n        mutate(result);\n    }, [reset, mutate]);\n    const openScanner = useScanner(Date.now(), onSubmit);\n    return (_jsx(IconPage, { logOut: true, icon: _jsx(IconBlock, { children: _jsx(SignerIcon, { size: 144 }) }), title: t('import_signer'), description: t('import_signer_description'), button: _jsx(Button, { size: \"large\", fullWidth: true, primary: true, loading: isLoading, marginTop: true, onClick: openScanner, children: t('scan_qr_title') }) }));\n};\n","import { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { addWalletWithCustomAuthState } from '@tonkeeper/core/dist/service/accountService';\nimport { walletStateFromSignerQr } from '@tonkeeper/core/dist/service/walletService';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppContext } from '../hooks/appContext';\nimport { useAppSdk } from '../hooks/appSdk';\nimport { QueryKey } from '../libs/queryKey';\nimport { AppRoute } from '../libs/routes';\nexport const usePairSignerMutation = () => {\n    const sdk = useAppSdk();\n    const { api } = useAppContext();\n    const client = useQueryClient();\n    const navigate = useNavigate();\n    return useMutation(async (qrCode) => {\n        try {\n            const state = await walletStateFromSignerQr(api, qrCode);\n            await addWalletWithCustomAuthState(sdk.storage, state);\n            await client.invalidateQueries([QueryKey.account]);\n            navigate(AppRoute.home);\n        }\n        catch (e) {\n            if (e instanceof Error)\n                sdk.alert(e.message);\n            throw e;\n        }\n    });\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { useAppSdk } from './appSdk';\nexport const useScanner = (initScan, onSubmit) => {\n    const sdk = useAppSdk();\n    const [scanId, setScanId] = useState(initScan);\n    useEffect(() => {\n        if (scanId) {\n            sdk.uiEvents.emit('scan', {\n                method: 'scan',\n                id: scanId,\n                params: undefined\n            });\n        }\n    }, [scanId]);\n    useEffect(() => {\n        const handler = (options) => {\n            if (options.id === scanId) {\n                onSubmit(options.params);\n            }\n        };\n        sdk.uiEvents.on('response', handler);\n        return () => {\n            sdk.uiEvents.off('response', handler);\n        };\n    }, [sdk, scanId, onSubmit]);\n    return useCallback(() => {\n        setScanId(Date.now());\n    }, [setScanId]);\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { Button } from '../../components/fields/Button';\nimport { useTranslation } from '../../hooks/translation';\nimport { useAddLedgerAccountsMutation, useConnectLedgerMutation, useLedgerAccounts } from '../../state/ledger';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Body2, H2 } from '../../components/Text';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { AppRoute } from '../../libs/routes';\nimport { useNativeBackButton } from '../../components/BackButton';\nimport { SpinnerIcon } from '../../components/Icon';\nimport { ListBlock, ListItem } from '../../components/List';\nimport { formatAddress } from '@tonkeeper/core/dist/utils/common';\nimport { formatter } from '../../hooks/balance';\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { Checkbox } from '../../components/fields/Checkbox';\nimport { LedgerConnectionSteps } from '../../components/ledger/LedgerConnectionSteps';\nimport { UpdateWalletName } from '../../components/create/WalletName';\nimport { getFallbackWalletEmoji } from '@tonkeeper/core/dist/service/wallet/storeService';\nconst ConnectLedgerWrapper = styled.div `\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n`;\nconst H2Styled = styled(H2) `\n    margin-bottom: 1rem;\n`;\nconst LedgerConnectionStepsStyled = styled(LedgerConnectionSteps) `\n    margin: 1rem 0;\n`;\nconst ButtonsBlock = styled.div `\n    margin-top: 1rem;\n    display: flex;\n    gap: 8px;\n    max-width: 368px;\n    width: 100%;\n\n    > * {\n        flex: 1;\n    }\n`;\nexport const PairLedger = () => {\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n    const sdk = useAppSdk();\n    const back = useCallback(() => navigate(AppRoute.home), [navigate]);\n    useNativeBackButton(sdk, back);\n    const [moveNext, setMoveNext] = useState(false);\n    const { isDeviceConnected, mutate: connectLedger, isLoading: isLedgerConnecting, reset: resetConnection, data: tonTransport } = useConnectLedgerMutation();\n    const onStartConnection = useCallback(() => {\n        resetConnection();\n        connectLedger();\n    }, []);\n    useEffect(() => {\n        onStartConnection();\n        return resetConnection;\n    }, []);\n    useEffect(() => {\n        if (tonTransport) {\n            setTimeout(() => setMoveNext(true), 500);\n        }\n    }, [tonTransport]);\n    if (moveNext) {\n        return _jsx(ChooseLedgerAccounts, { onCancel: back, tonTransport: tonTransport });\n    }\n    let currentStep = 'connect';\n    if (isDeviceConnected) {\n        currentStep = 'open-ton';\n    }\n    if (tonTransport) {\n        currentStep = 'all-completed';\n    }\n    return (_jsxs(ConnectLedgerWrapper, { children: [_jsx(H2Styled, { children: t('ledger_connect_header') }), _jsx(LedgerConnectionStepsStyled, { currentStep: currentStep }), _jsxs(ButtonsBlock, { children: [_jsx(Button, { secondary: true, onClick: back, children: t('cancel') }), _jsx(Button, { primary: true, loading: isLedgerConnecting || !!tonTransport, onClick: onStartConnection, children: t('try_again') })] })] }));\n};\nconst AccountsListWrapper = styled.div `\n    width: 100%;\n    max-width: 368px;\n`;\nconst AccountsLoadingWrapper = styled.div `\n    height: 549px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst ListItemStyled = styled(ListItem) `\n    padding: 16px 12px;\n    font-family: ${props => props.theme.fontMono};\n\n    &:not(:first-child) {\n        border-top: 1px solid ${props => props.theme.separatorCommon};\n    }\n`;\nconst Dot = styled(Body2) `\n    color: ${props => props.theme.textTertiary};\n`;\nconst Body2Secondary = styled(Body2) `\n    color: ${props => props.theme.textSecondary};\n`;\nconst CheckboxStyled = styled(Checkbox) `\n    margin-left: auto;\n    border-top: none !important;\n    padding-top: 0 !important;\n`;\nconst ChooseLedgerAccounts = ({ tonTransport, onCancel }) => {\n    const { t } = useTranslation();\n    const totalAccounts = 10;\n    const { mutate: getLedgerAccounts, data: ledgerAccounts } = useLedgerAccounts(totalAccounts);\n    const [selectedIndexes, setSelectedIndexes] = useState({});\n    const { mutate: addAccountsMutation, isLoading: isAdding } = useAddLedgerAccountsMutation();\n    const [accountsToAdd, setAccountsToAdd] = useState();\n    useEffect(() => {\n        getLedgerAccounts(tonTransport);\n    }, [tonTransport]);\n    const chosenSomeAccounts = !!Object.values(selectedIndexes).filter(Boolean).length;\n    const toFormattedAddress = (address) => {\n        const userFriendlyAddress = formatAddress(address);\n        return `${userFriendlyAddress.slice(0, 8)}...${userFriendlyAddress.slice(-8)}`;\n    };\n    const toFormattedBalance = (weiBalance) => {\n        return formatter.format(shiftedDecimals(weiBalance, 9));\n    };\n    const onAdd = () => {\n        const chosenIndexes = Object.entries(selectedIndexes)\n            .filter(([, v]) => v)\n            .map(([k]) => Number(k));\n        setAccountsToAdd(ledgerAccounts.filter(account => chosenIndexes.includes(account.accountIndex)));\n    };\n    if (accountsToAdd) {\n        const fallbackEmoji = getFallbackWalletEmoji(accountsToAdd[0].publicKey.toString('hex'));\n        return (_jsx(UpdateWalletName, { walletEmoji: fallbackEmoji, submitHandler: ({ name, emoji }) => addAccountsMutation({ name, emoji, accounts: accountsToAdd }) }));\n    }\n    return (_jsxs(ConnectLedgerWrapper, { children: [_jsx(H2Styled, { children: t('ledger_choose_wallets') }), _jsx(AccountsListWrapper, { children: !ledgerAccounts ? (_jsx(AccountsLoadingWrapper, { children: _jsx(SpinnerIcon, {}) })) : (_jsx(ListBlock, { margin: false, children: ledgerAccounts.map(account => (_jsxs(ListItemStyled, { hover: false, children: [_jsx(Body2, { children: toFormattedAddress(account.address) }), \"\\u00A0\", _jsx(Dot, { children: \"\\u00B7\" }), \"\\u00A0\", _jsxs(Body2Secondary, { children: [toFormattedBalance(account.balance), \"\\u00A0TON\"] }), _jsx(CheckboxStyled, { checked: selectedIndexes[account.accountIndex], onChange: () => setSelectedIndexes(s => ({\n                                    ...s,\n                                    [account.accountIndex]: !s[account.accountIndex]\n                                })) })] }, account.accountIndex))) })) }), _jsxs(ButtonsBlock, { children: [_jsx(Button, { secondary: true, onClick: onCancel, children: t('cancel') }), _jsx(Button, { primary: true, loading: !ledgerAccounts || isAdding, disabled: !chosenSomeAccounts, onClick: onAdd, children: t('continue') })] })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Route, Routes } from 'react-router-dom';\nimport { ImportRoute } from '../../libs/routes';\nimport Create from './Create';\nimport Import from './Import';\nimport { PairSigner } from './Signer';\nimport { PairLedger } from './Ledger';\nconst ImportRouter = ({ listOfAuth }) => {\n    return (_jsxs(Routes, { children: [_jsx(Route, { path: ImportRoute.create, element: _jsx(Create, { listOfAuth: listOfAuth }) }), _jsx(Route, { path: ImportRoute.import, element: _jsx(Import, { listOfAuth: listOfAuth }) }), _jsx(Route, { path: ImportRoute.signer, element: _jsx(PairSigner, {}) }), _jsx(Route, { path: ImportRoute.ledger, element: _jsx(PairLedger, {}) })] }));\n};\nexport default ImportRouter;\n"],"names":["Block","styled","div","_templateObject","_taggedTemplateLiteral","Header","H2","_templateObject2","Body","Body1","_templateObject3","props","theme","textSecondary","WorldsGrid","_templateObject4","World","_templateObject5","WorldNumber","Body2","_templateObject6","Number1","_templateObject7","Worlds","_templateObject8","_ref","mnemonic","onBack","onCheck","sdk","useAppSdk","t","useTranslation","useEffect","twaExpand","_jsxs","CenterContainer","children","_jsx","BackButtonBlock","onClick","map","world","index","Button","size","fullWidth","primary","marginTop","Input","input","_templateObject9","textPrimary","InputBlock","label","_templateObject10","cornerSmall","submitted","valid","active","css","_templateObject12","fieldActiveBorder","fieldBackground","_templateObject13","_templateObject11","fieldErrorBorder","fieldErrorBackground","_templateObject14","_templateObject16","_templateObject15","WordInput","_ref2","value","test","onChange","focusNext","isValid","tabIndex","setActive","useState","touched","setTouched","handleKeyDown","useCallback","event","key","autoComplete","e","target","toLocaleLowerCase","onFocus","onKeyDown","onBlur","getRandomInt","min","max","Math","floor","random","formatOrdinals","lang","n","pr","Intl","PluralRules","type","suffixes","Map","rule","select","suffix","get","concat","seeIfValid","toLowerCase","trim","Check","_ref3","onConfirm","isLoading","i18n","one","setOne","two","setTwo","three","setThree","ref","useRef","test1","test2","test3","useMemo","description","replace","language","focusInput","current","undefined","loading","disabled","Inputs","_templateObject17","p","displayType","_templateObject18","_wrapper$querySelecto","wrapper","childNodes","querySelector","focus","ImportWords","_ref4","onMnemonic","standalone","useAppContext","navigate","useNavigate","setMnemonic","Array","fill","newValue","includes","items","v","i","values","split","length","slice","splice","validations","item","wordlist","notify","topMessage","hapticNotification","_Fragment","AppRoute","home","async","invalid","findIndex","work","word","isIOs","openIosKeyboard","mnemonicValidate","bottom","Wrapper","IconBase","checked","buttonPrimaryForeground","buttonPrimaryBackground","backgroundContentTint","CheckboxItem","RadioItem","cornerFull","Text","light","Checkbox","className","CheckboxIcon","Radio","stopPropagation","preventDefault","EmojisListScroll","Shadow","ShadowBottom","gradientBackgroundBottom","ShadowTop","gradientBackgroundTop","shortEmojisList","emojis","EmojisList","React","keepShortListForMS","emojisList","setEmojisList","setTimeout","emojiIcons","name","icon","emoji","form","SelectAuthType","onSelect","FillPassword","afterCreate","mutateAsync","isCreating","reset","useCreatePassword","useMutation","password","confirm","MinPasswordLength","storage","set","AppKey","GLOBAL_AUTH_STATE","kind","error","setError","setPassword","setConfirm","onSubmit","result","helpText","CreateAuthState","authType","setAuthType","setNoneAuth","isNoneLoading","useSetNoneAuthMutation","_authType","UpdateWalletName","isError","useUpdateNameMutation","client","useQueryClient","account","Error","activePublicKey","wallet","getWalletState","updateWalletProperty","invalidateQueries","QueryKey","setName","setEmoji","walletEmoji","submitHandler","onUpdate","rightElement","WalletEmoji","defaultCheckOptions","loop","autoplay","animationData","animationCheckData","rendererSettings","preserveAspectRatio","CheckLottieIcon","Lottie","options","height","width","defaultGearOptions","animationGearData","GearLottieIcon","defaultWriteOptions","animationWriteData","WriteLottieIcon","defaultConfettiOptions","animationConfettiData","ConfettiLottieIcon","NotificationIcon","xmlns","viewBox","d","opacity","cx","cy","r","createWallet","api","auth","state","createNewWalletState","encryptedMnemonic","encryptWalletMnemonic","addWalletWithGlobalAuthState","getAccountState","useAddWalletMutation","listOfAuth","keychain","publicKey","join","addWalletWithCustomAuthState","createWalletWithKeychain","publicKeys","getPasswordByNotification","ConfettiBlock","FinalView","afterImport","useAfterImportAction","setSize","innerWidth","innerHeight","window","IconPage","title","Subscribe","onDone","mutate","useSubscribeMutation","notifications","subscribe","message","skip","button","checkPasswordAndCreateWalletAsync","isConfirmLoading","data","useActiveWallet","setAccount","create","setCreate","open","setOpen","check","setCheck","setChecked","hasPassword","setHasPassword","passNotifications","setPassNotification","mnemonicNew","then","logOut","m","IconBlock","accentBlue","PairSigner","usePairSignerMutation","walletStateFromSignerQr","qrCode","alert","openScanner","useScanner","initScan","scanId","setScanId","uiEvents","emit","method","id","params","handler","on","off","Date","now","SignerIcon","ConnectLedgerWrapper","H2Styled","LedgerConnectionStepsStyled","LedgerConnectionSteps","ButtonsBlock","PairLedger","back","useNativeBackButton","moveNext","setMoveNext","isDeviceConnected","connectLedger","isLedgerConnecting","resetConnection","tonTransport","useConnectLedgerMutation","onStartConnection","ChooseLedgerAccounts","onCancel","currentStep","secondary","AccountsListWrapper","AccountsLoadingWrapper","ListItemStyled","ListItem","fontMono","separatorCommon","Dot","textTertiary","Body2Secondary","CheckboxStyled","getLedgerAccounts","ledgerAccounts","useLedgerAccounts","selectedIndexes","setSelectedIndexes","addAccountsMutation","isAdding","useAddLedgerAccountsMutation","accountsToAdd","setAccountsToAdd","chosenSomeAccounts","Object","filter","Boolean","toFormattedAddress","address","userFriendlyAddress","formatAddress","fallbackEmoji","getFallbackWalletEmoji","toString","accounts","ListBlock","margin","hover","weiBalance","balance","formatter","format","shiftedDecimals","accountIndex","s","SpinnerIcon","onAdd","chosenIndexes","entries","k","Number","Routes","Route","path","ImportRoute","element","Create","import","Import","signer","ledger"],"sourceRoot":""}